//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace Common.wsWIP {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsWIPSoap", Namespace="http://www.imestech.com/")]
    public partial class wsWIP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoadMachine_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Machine_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadModule_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Module_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadStage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Stage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadStation_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Station_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSTDTime_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_STDTime_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOIInfo_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_OIInfo_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLineMONo_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LineMONo_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMaterial_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Material_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFeederMaterial_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FeederMaterial_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLineStorage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LineStorage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMachineStorage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_MachineStorage_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMaterialRel_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_MaterialRel_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTorsionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCorrectPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPackingLabelDataCreate_M1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_Auto_TYOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdFeederMFU_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFeederMFU_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCounterStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCounterLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWipMarkBuilderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWipMarkBuilderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWipMarkBuilderOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFGPreBoardStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSysParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoAddMOPDLineStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtExcesssDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtExcesssOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtMoScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederINVReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVReturnDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSMTFeederINVReturnDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVReturnCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederReturnINVTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVLackPickupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVLackDetail_DelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVLackDetail_ClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederINVLackDetail_CompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederINVLackPickupBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederINVLackPickupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederLackTransferDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupToMES_LackOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederComplete_LackOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederPLCOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederReturnRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMTFeederReturnRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederLEDRequestForPLCOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTPCBRepairBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTPCBRepairDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePCBRepairStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePCBPhotoStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMaterialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddThermalPaste_LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordWIPCurrMoNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperateBindingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPPadBindingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCurrMaterialInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOLabelPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMOLabelPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditMOLabelPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMCSerialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMTransferBasisForDB1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePLMTransferResultForDB1OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMTransferBasisForDB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMTransferBasisForDB2_OtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePLMTransferResultForDB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMDataByMachineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDownLoadDekOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMMaterial_otherOperationCompleted;
        
        private System.Threading.SendOrPostCallback PIG1PackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIG1ListNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIG1LotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaitPackQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdBoxLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback PackUnLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback funIsPIG1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPIG1BoxBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFRNOperationCompleted;
        
        private System.Threading.SendOrPostCallback PIG1InventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PIG1SplitBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback PIG1MergeBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback PIG1InvOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPackingLabelDataCreate_PIG1OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingPrintLabel_PIG1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeTRSCombinePickup_PIG1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIG1BoxNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadHMILotMonoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPLMBomDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLaserBasePointOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPackingLabelDataCreate_SISOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadsysdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOASMProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOASMSubOPNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindMOASMProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMOASMProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMOASMProcedureAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMOASMProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTASMMachineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTASMOITransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTASMPartRefilTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTASMMaterialByFeederNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTASMFeederSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTASMUnloadCompOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTASMFeederListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTASMPartsRefilOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLine_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Line_SynOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederTransferDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederPickupMaterialDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederReturnTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupToMESOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederReturnConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeederAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMTFeederAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSMTFeederAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederBinInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeederBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMTFeederBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSMTFeederBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederEquipmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMTFeederEquipmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSmtFeederMaterialSerial_DeltaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCombinepickupnoAccountStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtSuperMarketMtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederCombineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeederCombinePickupNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMTFeederCombinePickupNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSMTFeederCombinePickupNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkSMTFeedePickupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkSMTFeederTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSMTFeederCombineNoSpecialOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFeederTransferQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFeederTrsErrorMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeedReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTFeederBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTFeederReturnBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTFeederReturnBin2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSmtFeederReturnmDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeederReturnInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeedBinRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeedBinRequestHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSMTFeederAreaUseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSMTFeederAreaUseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSMTFeedBinRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ADDSMTFeederMFUDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederMFUDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederReturnAcountDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederReturnCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederReturnToMESOperationCompleted;
        
        private System.Threading.SendOrPostCallback TESTInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSuperMarkMtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSmtsupermarketMtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSmtsupermarketMtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSmtsupermarketMtlOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmtFeederSensorStatus_New2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SmtFeederSensorStatus_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmtFeederSensorStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmtReturnLossAlarmLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSmtFeederPickupPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederBoard_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCombinePickupNoByMoNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederPalletStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtExcessStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederOverdueBinTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederSensorWeekBinTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederSensorWeekErroeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederBinDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederOverdueErroeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederSensorErroeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederSensorBinTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederAccountStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederMoStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederPickupPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSmtExcessDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSmtExcessDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSmtExcessDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSmtExcesssMonoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPartSupermarkAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtExcesssDetailByExcessnoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSmtFeederAreaUseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeReworkChangeSerialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ReloadMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPDLineJoinSMDAreaBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ChangeFeederOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LoadMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LoadMaterial_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LoadMaterial_newLogicOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFUOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCounterStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCounterStateJoinMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCounterLogJoinMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCounterState_ActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotOnMOLineDispatch_EQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotState_PDLineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_MaintainAction_AccumulateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Chk_MaintainAction_AccumulateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWeighingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWeighingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWeighingDetail_OthersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWeighingPrintLabel_dtMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWeighingPrintLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWeighingPrintLabel_dtMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWeighingPrintLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWeighingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAssyDEJOperationCompleted;
        
        private System.Threading.SendOrPostCallback TMOCheckDEJOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCUS_MOShipConstraintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPacking_PreCCDEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ChangeFeeder_WJOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ReloadMaterial_WJOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdFeederMFU_WJOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOOISpec_WJOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOCombine_MONoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEQPLoss_WJOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordEQPLossLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWIPMOFittingTotalWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPMOFittingTotalWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadIFMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIFMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIFPackingListBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIFPackingListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadIFPackingListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingCartonJoinPackingBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMOConfirmContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeBackflushOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOConfirm_NoBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPrepareMaterialTemp_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdTryRunTypeCheck_D3D4OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWeighingDetail_ReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPacking_PreT2EquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBinNoStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdBinNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRoomNoStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdRoomNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWeight_PackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPState_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTGBParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGBParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGBTestInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFileExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMaterialSerial_Delta_byMFUOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFeederMaterialNo_MappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederUseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFeederAreaJoinFeederTrsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederMOCombineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederPickupDeatilOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederAreaMaterialDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederAreaMaterialDetail_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederAreaPickingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederUseCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCombinePickupNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederLEDRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederClearInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickUpCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTFeederPickUpCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTFeederPickupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingSMLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingPalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingCartonOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPProductNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenMOPackingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPackingLabelDataCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExePackingSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExePackingSplit_LotOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExePackingMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExePackingMerge_LotOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPacking_ToINVOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMOPacking_UnPackOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOUnpackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeMOPacking_CloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingBasisJoinMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWIPSMTMaterialStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPFQCFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPFQCFormDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPFQCFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPFQCFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFQCFormQCItemMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPFQCFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPFQCFormStdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPFQCFormStdDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPFQCFormStdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPFQCFormStdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFQCFormStdQCItemMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOPackingPrintLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMOPackingPrintLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOBurningLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_PackingListBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadIF_INVWIPInventory_Semi2OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadIF_INVWIPInventory_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeINVIn_Gen_ERPRedoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeINVIn_SubFactory_ResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTMaterialReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPickupDetailJoinListJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPickupDetailJoinListJoinBasis_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturnDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_Auto1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_AutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_New_AutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SMTMaterialReturn_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUnitLog_AssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPReworkIEOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSerialNoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXESerialNoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXEToMoChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetReworkQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkSheetBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditReworkSheetBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReworkSheetBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkMeetingPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReworkSheetBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkSheetNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitReworkSheetNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkSheetConfereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdReworkSheetConfereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReworkSheetConfereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdReworkDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmail_ReworkMeetingReordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkQAOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkIEOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaintainReworkQAOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaintainReworkPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotCurQtyOfProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReworkIEOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditReworkIEOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReworkIEOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReworkAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReworkAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReworkMFGOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaintainReworkMFGOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFGLotDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNodeNoByProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckReworkSNExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMaterialFeederOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFeederStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFeederStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFeederStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdFeederMFUOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFeederMFUOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFeederMFUOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMFUStauts_Feeder_QCFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFUStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFUNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertToSMTMtlMFUStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFUStatusJoinMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMFUStatusJoinFeederOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOCombineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOOISpecOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMFUEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMFUEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadEQPMFUStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitLog_ErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQABasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQADetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQAMoDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVQANoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXE_VQABasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVQAOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQAReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQAVDDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVQAAffectedMoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowVQAMoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVQAMTLReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVQAMoReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMQABasisJoinDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMQADetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMQAERFNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_MQAERFCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMQAInfectedMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMQAHoldStartOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMQAReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMQAAffectedMoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMQAReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMOForbidOPNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOEMONoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMOPDLineStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTProductionState_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSMTProductionState_New1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolderEdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSolderBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMoNoSolder_CombineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOEMOLineDispatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOEMOLineDispatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPMOPDLineStartInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProductionState_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUserBasisJoinLoginStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOperatorLoginStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPCDefaultDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdOperatorLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdOperatorLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShiftOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOPAreaJoinAreaEQPMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUserBasisJoinLoginLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOperatorLoginExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperatorLoginExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDIPProductionStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeWOStartDIPProductionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProductionLine_LossCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOPAreaEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProductionLineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProductionLineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXE_HoldProductionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXE_ReleaseProductionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPrepareMODataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOCombineJoinPickupOperationCompleted;
        
        private System.Threading.SendOrPostCallback MOPrepareCheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPrepareMaterialTempOperationCompleted;
        
        private System.Threading.SendOrPostCallback MOPrepareCheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProductionState_PrepareOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOPMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOPMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOPMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOPMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPanelLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOProductProcessDefineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkMOProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingSerialQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFCreateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadExceedTimeDefaultHoldInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFCreateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRcvNoticeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadShippingListDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewPackingListNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewShippingListNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDramaBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuncardActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInwithEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInwithnoEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDTAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdDTAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_COCassetteOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPLimitedTimeControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPLagTimeControlByLotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFutureOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFutureOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFutureOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFutureOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPOutSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPOutSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPOutSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPAlreadyOSBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPOSBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPOSDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotStateInOSDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentStateInOSDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewOSNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotStateForCreateOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLotStateForOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeOSConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeOSReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOSBasisByLotDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLotIsOSbutNotReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnReturnLotsInSameOSWithRefLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSumOfResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSumOfResource_ValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSumOfResource_Valid_ByOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSumOfResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSumOfResource_Valid_ByMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSum_ResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPCarrierStateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedLotStateOfCarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotQuantityOnCarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdWIPInv_Raw_ScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPlanFinishTime_byLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotTempEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotTempEquipmentLoadPortOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadEQPConsumeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEQPConsumeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditEQPConsumeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelEQPConsumeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEQPConsumeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadEQPConsumeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPEQPQCListLogBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPEQPQCListLogDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPEQPQCListLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPEQPQCListLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCListSerialOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInvCountStateWithDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInvCountStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountCloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountAdjust_MTLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountAdjust_PRDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeInvCountConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkInvCountAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeTransferFactory_LotOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdAddOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdEditOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOSBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeOS_AbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeOS_ConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExeOS_ReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotChoiceEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_AmountCloseLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLotStateToExitGroupOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCont_Material_AdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCont_Material_AdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelCont_Material_AdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMaterialFeederOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadEQPETHValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_CarrierFoupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_CarrierFoupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CO_EpitaxyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotState_CarOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_CarOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_CarRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasisAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasisAssembly_OtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERPInvNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERPInvNo_SICOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FGDToERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ScrapToERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_WIPToERP_SICOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Cassette_CIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Cassette_COOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCassetteJoinLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRecipeByLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCassetteStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentState_MOOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentJoinLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_MaterialLotComp_JoinLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_TAN_COOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SemiProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_FirstOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReRun_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReRun_FailBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReRun_ScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_FailBinJoinLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_ScrapJoinLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasis_TapeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotBasis_TapeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseLotBasis_TapeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotBasisJoinPIDeatilOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Tape_CIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Tape_COOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Tape_ComponentSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDefrostLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDefrostLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDefrostLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelDefrostLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDefrostEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExePIDefrostOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_TAB_ECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_TAB_ECNBasisJoinDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Del_TAB_ECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Add_TAB_ECNBasisWDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_TAB_ECNBasisWDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPD_TAB_ECNConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPD_TAB_ECNReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Del_TAB_ECNLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_TAB_LotBasisJoinStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_TAB_PackingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_TAB_PackingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotsofSamePIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessoryLifeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasis_UnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasis_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_AbnormalCollectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_COMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_BatchCIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_QCBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_BatchScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_CIRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Unit_CORepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitBoxNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_Unit_Cont_CIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_Unit_QCBankRejectLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_Unit_QCBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback Load_Unit_QCBankDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotQtyAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotQtyAdjust_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotQtyAdjust_CompOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_QtyAdjustLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERF_AttachFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddERF_AttachFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelERF_AttachFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERF_AttachFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_Material_JoinLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_ErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_Error_JoinQCReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSplitContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMergeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_ComponentAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingListBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingList_GeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingList_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPack_CompQtyByLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPack_BinQtyByLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingList_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelPackingListBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPackingList_ConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdAddPackingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdEditPackingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadShippingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadShippingPackingListJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelShippingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ShippingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReturnBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReturnComponentJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReturnBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_InvIncomingReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdShippingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAbnormalStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAbnormalStateJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackingBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdIPQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableMaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRecipeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelReleasedLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableCarrierLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_AttribFormulaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentPropertyByLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotPropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOPGroupStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaseLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERFNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShippingLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRcvNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerLotNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotOPDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRunCardDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRunCardLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRunCardHeadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPRDAttributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRunCardData_DeltaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_SetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotMerge_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotMerge_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotSplit_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Wait_LotSplit_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWaitBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWaitLotDispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWaitBasisJoinLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRODetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMOBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadROJoinMODataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotTapeMapDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotTapeMapDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotTapeMapDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotTapeMapDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPNGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPNGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPNGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_RunInOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_RunFirstQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPNGroupJoinLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_EquipmentAcclifeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_EquipmentLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBatchLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBatchComponentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_BatchCheckIn_FABOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_BatchCheckOut_FABOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEQPETHValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditComponentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelComponentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUnitTransferQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadReverseHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteReverseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTempQCItemJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveECNBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdECN_V2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdECNDisableOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdECNConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotECNAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditECNLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNAttribLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNAttribLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditECNAttribLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNAttribLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNLotBasisLotDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNLotBasisLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadECNLotLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECNLotLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelECNLotLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadGoodBinStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotNotExecuteOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkAutoMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeByFromLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeJoinStateByFromLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeJoinStateByToLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeJoinGoodBinByFromLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoMergeJoinGoodBinByToLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotProperty_ReciveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotProperty_ReciveOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotProperty_ReciveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotProperty_ReciveOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFBasisJoinLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFBasisJoinLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFDispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFHoldReasonDispOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFHoldReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadERFLotDispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFutureWaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FutureWait_SetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFutureWaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkLotStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkWIPEQPCcnsumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFutureHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFutureHoldReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFutureHoldReasonJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FutureHold_SetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFutureHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotOPAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotOPAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotOPAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotOPAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_Material_JoinLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_Abnormal_JoinLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_AbnormalRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_AttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_LotRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_EmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_EquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_AccessoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotMerge_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotMerge_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotMerge_CarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_DispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_BackToERFDispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_AbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotSplit_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotSplit_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotMerge_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ERF_LotMerge_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailAndAttachFileToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailToERFGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailToERFGroup_NoneERFOperationCompleted;
        
        private System.Threading.SendOrPostCallback Chk_ERF_LotReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_PackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ProductVersionChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotOPAreaChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_MaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_AutoSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FinalQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_RepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CreateLotByBomOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_AbnormalCollectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_BatchCI_NOROperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Repair_AssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_BatchCO_UnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_BatchCI_UnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextOPNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadNextOPNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotLogJoinModuleLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotLog_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotLogReport_ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotLog_ReportJoinLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotPSLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_RawOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPInventory_RawOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPInventory_RawOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPInventory_RawOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_SEMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_SEMIJoinLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIPInventory_SEMIbyLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWIPInventory_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPInventory_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWIPInventory_ScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPInventory_SemiOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_ScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIPInventory_ScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_ScrapByErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_ComponentScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWIP_ComponentScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_FailBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSEMIInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFGDInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_WIPSemiTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SEMITurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_WIPScrapTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_FGDTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_IncomingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFGDInventory_GeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFGDInventory_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFGDInventory_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_OPMaterialStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_TransferBUOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWIP_Incoming_CompOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSCRInventory_GeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSCRInventory_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSCRInventory_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInventory_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrainsferInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadComponentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddComponentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloMESOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOPMaterialStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOPMaterialStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOPMaterialStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOPMaterialStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLotBasisLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotBasisDistinctColumnValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotBasis_BOMOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotBasisJoinStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotBasisJoinStateInLotNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotStateJoinGoodBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotStateJoinOPNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMaterialLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_LotStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_AttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_AttribJoinBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_EquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_ComponentAttribOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_QCItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTemp_MaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableLotOnEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableCarrierLotOnEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRecipeByLogGroupSerialOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotNoExtraInfoOnEQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAreaEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableEquipment_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLotAttributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaskGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiMaskGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferLot_MultiOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteLot_DTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkUserOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteBROperationCompleted;
        
        private System.Threading.SendOrPostCallback TriggerOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseTriggerOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLotStateToOtherGroupOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTempDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_EQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_RepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_CSQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_ComponentCheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_SPCControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_CarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_CarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_OutSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_OutSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckIn_Cassette_PKGOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_Cassette_PKGOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkMaterialStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkControlRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkControlRule_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLotLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotSplit_ComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotSplit_CarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_FTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelContentRTBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_RTBinDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCont_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_RT_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_EQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_CheckOut_EQC_UnChangeBinStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_Manual_LotSplit_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotSplit_BinOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotSplitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Exe_LotMerge_BinOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsWIP() {
            this.Url = global::Common.Properties.Settings.Default.Common_wsWIP_wsWIP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoadMachine_SynCompletedEventHandler LoadMachine_SynCompleted;
        
        /// <remarks/>
        public event Exe_Machine_SynCompletedEventHandler Exe_Machine_SynCompleted;
        
        /// <remarks/>
        public event LoadModule_SynCompletedEventHandler LoadModule_SynCompleted;
        
        /// <remarks/>
        public event Exe_Module_SynCompletedEventHandler Exe_Module_SynCompleted;
        
        /// <remarks/>
        public event LoadStage_SynCompletedEventHandler LoadStage_SynCompleted;
        
        /// <remarks/>
        public event Exe_Stage_SynCompletedEventHandler Exe_Stage_SynCompleted;
        
        /// <remarks/>
        public event LoadStation_SynCompletedEventHandler LoadStation_SynCompleted;
        
        /// <remarks/>
        public event Exe_Station_SynCompletedEventHandler Exe_Station_SynCompleted;
        
        /// <remarks/>
        public event LoadSTDTime_SynCompletedEventHandler LoadSTDTime_SynCompleted;
        
        /// <remarks/>
        public event Exe_STDTime_SynCompletedEventHandler Exe_STDTime_SynCompleted;
        
        /// <remarks/>
        public event LoadOIInfo_SynCompletedEventHandler LoadOIInfo_SynCompleted;
        
        /// <remarks/>
        public event Exe_OIInfo_SynCompletedEventHandler Exe_OIInfo_SynCompleted;
        
        /// <remarks/>
        public event LoadLineMONo_SynCompletedEventHandler LoadLineMONo_SynCompleted;
        
        /// <remarks/>
        public event Exe_LineMONo_SynCompletedEventHandler Exe_LineMONo_SynCompleted;
        
        /// <remarks/>
        public event LoadMaterial_SynCompletedEventHandler LoadMaterial_SynCompleted;
        
        /// <remarks/>
        public event Exe_Material_SynCompletedEventHandler Exe_Material_SynCompleted;
        
        /// <remarks/>
        public event LoadFeederMaterial_SynCompletedEventHandler LoadFeederMaterial_SynCompleted;
        
        /// <remarks/>
        public event Exe_FeederMaterial_SynCompletedEventHandler Exe_FeederMaterial_SynCompleted;
        
        /// <remarks/>
        public event LoadLineStorage_SynCompletedEventHandler LoadLineStorage_SynCompleted;
        
        /// <remarks/>
        public event Exe_LineStorage_SynCompletedEventHandler Exe_LineStorage_SynCompleted;
        
        /// <remarks/>
        public event LoadMachineStorage_SynCompletedEventHandler LoadMachineStorage_SynCompleted;
        
        /// <remarks/>
        public event Exe_MachineStorage_SynCompletedEventHandler Exe_MachineStorage_SynCompleted;
        
        /// <remarks/>
        public event LoadMaterialRel_SynCompletedEventHandler LoadMaterialRel_SynCompleted;
        
        /// <remarks/>
        public event Exe_MaterialRel_SynCompletedEventHandler Exe_MaterialRel_SynCompleted;
        
        /// <remarks/>
        public event LoadTorsionLogCompletedEventHandler LoadTorsionLogCompleted;
        
        /// <remarks/>
        public event IsCorrectPCBCompletedEventHandler IsCorrectPCBCompleted;
        
        /// <remarks/>
        public event ExeMOPackingLabelDataCreate_M1CompletedEventHandler ExeMOPackingLabelDataCreate_M1Completed;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_Auto_TYCompletedEventHandler Exe_SMTMaterialReturn_Auto_TYCompleted;
        
        /// <remarks/>
        public event UpdFeederMFU_NewCompletedEventHandler UpdFeederMFU_NewCompleted;
        
        /// <remarks/>
        public event DelFeederMFU_NewCompletedEventHandler DelFeederMFU_NewCompleted;
        
        /// <remarks/>
        public event LoadCounterStateCompletedEventHandler LoadCounterStateCompleted;
        
        /// <remarks/>
        public event LoadCounterLogCompletedEventHandler LoadCounterLogCompleted;
        
        /// <remarks/>
        public event LoadWipMarkBuilderCompletedEventHandler LoadWipMarkBuilderCompleted;
        
        /// <remarks/>
        public event AddWipMarkBuilderCompletedEventHandler AddWipMarkBuilderCompleted;
        
        /// <remarks/>
        public event DelWipMarkBuilderCompletedEventHandler DelWipMarkBuilderCompleted;
        
        /// <remarks/>
        public event LoadMFGPreBoardStatusCompletedEventHandler LoadMFGPreBoardStatusCompleted;
        
        /// <remarks/>
        public event LoadSysParameterCompletedEventHandler LoadSysParameterCompleted;
        
        /// <remarks/>
        public event AutoAddMOPDLineStateCompletedEventHandler AutoAddMOPDLineStateCompleted;
        
        /// <remarks/>
        public event LoadSmtExcesssDetailCompletedEventHandler LoadSmtExcesssDetailCompleted;
        
        /// <remarks/>
        public event LoadSmtExcesssCompletedEventHandler LoadSmtExcesssCompleted;
        
        /// <remarks/>
        public event LoadSmtMoScheduleCompletedEventHandler LoadSmtMoScheduleCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederINVReturnDetailCompletedEventHandler LoadSMTFeederINVReturnDetailCompleted;
        
        /// <remarks/>
        public event SMTFeederINVReturnDataCompletedEventHandler SMTFeederINVReturnDataCompleted;
        
        /// <remarks/>
        public event DelSMTFeederINVReturnDataCompletedEventHandler DelSMTFeederINVReturnDataCompleted;
        
        /// <remarks/>
        public event SMTFeederINVReturnCompleteCompletedEventHandler SMTFeederINVReturnCompleteCompleted;
        
        /// <remarks/>
        public event SMTFeederReturnINVTransferCompletedEventHandler SMTFeederReturnINVTransferCompleted;
        
        /// <remarks/>
        public event SMTFeederINVLackPickupCompletedEventHandler SMTFeederINVLackPickupCompleted;
        
        /// <remarks/>
        public event SMTFeederINVLackDetail_DelCompletedEventHandler SMTFeederINVLackDetail_DelCompleted;
        
        /// <remarks/>
        public event SMTFeederINVLackDetail_ClearCompletedEventHandler SMTFeederINVLackDetail_ClearCompleted;
        
        /// <remarks/>
        public event SMTFeederINVLackDetail_CompleteCompletedEventHandler SMTFeederINVLackDetail_CompleteCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederINVLackPickupBasisCompletedEventHandler LoadSMTFeederINVLackPickupBasisCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederINVLackPickupDetailCompletedEventHandler LoadSMTFeederINVLackPickupDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederLackTransferDetailCompletedEventHandler LoadSMTFeederLackTransferDetailCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupToMES_LackCompletedEventHandler SMTFeederPickupToMES_LackCompleted;
        
        /// <remarks/>
        public event SMTFeederComplete_LackCompletedEventHandler SMTFeederComplete_LackCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederPLCCompletedEventHandler LoadSMTFeederPLCCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederReturnRequestCompletedEventHandler LoadSMTFeederReturnRequestCompleted;
        
        /// <remarks/>
        public event UpdateSMTFeederReturnRequestCompletedEventHandler UpdateSMTFeederReturnRequestCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederLEDRequestForPLCCompletedEventHandler LoadSMTFeederLEDRequestForPLCCompleted;
        
        /// <remarks/>
        public event LoadSMTPCBRepairBasisCompletedEventHandler LoadSMTPCBRepairBasisCompleted;
        
        /// <remarks/>
        public event LoadSMTPCBRepairDetailCompletedEventHandler LoadSMTPCBRepairDetailCompleted;
        
        /// <remarks/>
        public event UpdatePCBRepairStatusCompletedEventHandler UpdatePCBRepairStatusCompleted;
        
        /// <remarks/>
        public event UpdatePCBPhotoStatusCompletedEventHandler UpdatePCBPhotoStatusCompleted;
        
        /// <remarks/>
        public event LoadMaterialNoCompletedEventHandler LoadMaterialNoCompleted;
        
        /// <remarks/>
        public event AddThermalPaste_LogCompletedEventHandler AddThermalPaste_LogCompleted;
        
        /// <remarks/>
        public event RecordWIPCurrMoNoCompletedEventHandler RecordWIPCurrMoNoCompleted;
        
        /// <remarks/>
        public event OperateBindingCompletedEventHandler OperateBindingCompleted;
        
        /// <remarks/>
        public event LoadWIPPadBindingInfoCompletedEventHandler LoadWIPPadBindingInfoCompleted;
        
        /// <remarks/>
        public event LoadCurrMaterialInfoCompletedEventHandler LoadCurrMaterialInfoCompleted;
        
        /// <remarks/>
        public event LoadScheduleCompletedEventHandler LoadScheduleCompleted;
        
        /// <remarks/>
        public event LoadMOLabelPathCompletedEventHandler LoadMOLabelPathCompleted;
        
        /// <remarks/>
        public event DelMOLabelPathCompletedEventHandler DelMOLabelPathCompleted;
        
        /// <remarks/>
        public event EditMOLabelPathCompletedEventHandler EditMOLabelPathCompleted;
        
        /// <remarks/>
        public event LoadMCSerialNoCompletedEventHandler LoadMCSerialNoCompleted;
        
        /// <remarks/>
        public event LoadPLMTransferBasisForDB1CompletedEventHandler LoadPLMTransferBasisForDB1Completed;
        
        /// <remarks/>
        public event UpdatePLMTransferResultForDB1CompletedEventHandler UpdatePLMTransferResultForDB1Completed;
        
        /// <remarks/>
        public event LoadPLMTransferBasisForDB2CompletedEventHandler LoadPLMTransferBasisForDB2Completed;
        
        /// <remarks/>
        public event LoadPLMTransferBasisForDB2_OtherCompletedEventHandler LoadPLMTransferBasisForDB2_OtherCompleted;
        
        /// <remarks/>
        public event UpdatePLMTransferResultForDB2CompletedEventHandler UpdatePLMTransferResultForDB2Completed;
        
        /// <remarks/>
        public event LoadPLMDataCompletedEventHandler LoadPLMDataCompleted;
        
        /// <remarks/>
        public event LoadPLMDataByMachineNoCompletedEventHandler LoadPLMDataByMachineNoCompleted;
        
        /// <remarks/>
        public event UpdateDownLoadDekCompletedEventHandler UpdateDownLoadDekCompleted;
        
        /// <remarks/>
        public event LoadPLMMaterial_otherCompletedEventHandler LoadPLMMaterial_otherCompleted;
        
        /// <remarks/>
        public event PIG1PackingCompletedEventHandler PIG1PackingCompleted;
        
        /// <remarks/>
        public event GetPIG1ListNoCompletedEventHandler GetPIG1ListNoCompleted;
        
        /// <remarks/>
        public event GetPIG1LotStateCompletedEventHandler GetPIG1LotStateCompleted;
        
        /// <remarks/>
        public event GetWaitPackQtyCompletedEventHandler GetWaitPackQtyCompleted;
        
        /// <remarks/>
        public event GetBoxLockCompletedEventHandler GetBoxLockCompleted;
        
        /// <remarks/>
        public event UpdBoxLockCompletedEventHandler UpdBoxLockCompleted;
        
        /// <remarks/>
        public event PackUnLockCompletedEventHandler PackUnLockCompleted;
        
        /// <remarks/>
        public event funIsPIG1CompletedEventHandler funIsPIG1Completed;
        
        /// <remarks/>
        public event GetPackingBasisCompletedEventHandler GetPackingBasisCompleted;
        
        /// <remarks/>
        public event LoadPIG1BoxBasisCompletedEventHandler LoadPIG1BoxBasisCompleted;
        
        /// <remarks/>
        public event GetFRNCompletedEventHandler GetFRNCompleted;
        
        /// <remarks/>
        public event PIG1InventoryCompletedEventHandler PIG1InventoryCompleted;
        
        /// <remarks/>
        public event PIG1SplitBoxCompletedEventHandler PIG1SplitBoxCompleted;
        
        /// <remarks/>
        public event PIG1MergeBoxCompletedEventHandler PIG1MergeBoxCompleted;
        
        /// <remarks/>
        public event PIG1InvOutCompletedEventHandler PIG1InvOutCompleted;
        
        /// <remarks/>
        public event ExeMOPackingLabelDataCreate_PIG1CompletedEventHandler ExeMOPackingLabelDataCreate_PIG1Completed;
        
        /// <remarks/>
        public event LoadMOPackingPrintLabel_PIG1CompletedEventHandler LoadMOPackingPrintLabel_PIG1Completed;
        
        /// <remarks/>
        public event ExeTRSCombinePickup_PIG1CompletedEventHandler ExeTRSCombinePickup_PIG1Completed;
        
        /// <remarks/>
        public event GetPIG1BoxNoCompletedEventHandler GetPIG1BoxNoCompleted;
        
        /// <remarks/>
        public event LoadHMILotMonoInfoCompletedEventHandler LoadHMILotMonoInfoCompleted;
        
        /// <remarks/>
        public event LoadPLMBomDetailCompletedEventHandler LoadPLMBomDetailCompleted;
        
        /// <remarks/>
        public event LoadLaserBasePointCompletedEventHandler LoadLaserBasePointCompleted;
        
        /// <remarks/>
        public event ExeMOPackingLabelDataCreate_SISCompletedEventHandler ExeMOPackingLabelDataCreate_SISCompleted;
        
        /// <remarks/>
        public event LoadsysdateCompletedEventHandler LoadsysdateCompleted;
        
        /// <remarks/>
        public event LoadMOASMProcedureCompletedEventHandler LoadMOASMProcedureCompleted;
        
        /// <remarks/>
        public event LoadMOASMSubOPNoCompletedEventHandler LoadMOASMSubOPNoCompleted;
        
        /// <remarks/>
        public event BindMOASMProcedureCompletedEventHandler BindMOASMProcedureCompleted;
        
        /// <remarks/>
        public event UpdateMOASMProcedureCompletedEventHandler UpdateMOASMProcedureCompleted;
        
        /// <remarks/>
        public event UpdateMOASMProcedureAllCompletedEventHandler UpdateMOASMProcedureAllCompleted;
        
        /// <remarks/>
        public event DelMOASMProcedureCompletedEventHandler DelMOASMProcedureCompleted;
        
        /// <remarks/>
        public event LoadSMTASMMachineInfoCompletedEventHandler LoadSMTASMMachineInfoCompleted;
        
        /// <remarks/>
        public event LoadSMTASMOITransferCompletedEventHandler LoadSMTASMOITransferCompleted;
        
        /// <remarks/>
        public event LoadSMTASMPartRefilTransferCompletedEventHandler LoadSMTASMPartRefilTransferCompleted;
        
        /// <remarks/>
        public event LoadSMTASMMaterialByFeederNoCompletedEventHandler LoadSMTASMMaterialByFeederNoCompleted;
        
        /// <remarks/>
        public event Exe_SMTASMFeederSetupCompletedEventHandler Exe_SMTASMFeederSetupCompleted;
        
        /// <remarks/>
        public event Exe_SMTASMUnloadCompCompletedEventHandler Exe_SMTASMUnloadCompCompleted;
        
        /// <remarks/>
        public event Exe_SMTASMFeederListCompletedEventHandler Exe_SMTASMFeederListCompleted;
        
        /// <remarks/>
        public event Exe_SMTASMPartsRefilCompletedEventHandler Exe_SMTASMPartsRefilCompleted;
        
        /// <remarks/>
        public event LoadLine_SynCompletedEventHandler LoadLine_SynCompleted;
        
        /// <remarks/>
        public event Exe_Line_SynCompletedEventHandler Exe_Line_SynCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederTransferDetailCompletedEventHandler LoadSMTFeederTransferDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederPickupMaterialDetailCompletedEventHandler LoadSMTFeederPickupMaterialDetailCompleted;
        
        /// <remarks/>
        public event SMTFeederReturnTransferCompletedEventHandler SMTFeederReturnTransferCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupTransferCompletedEventHandler SMTFeederPickupTransferCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupToMESCompletedEventHandler SMTFeederPickupToMESCompleted;
        
        /// <remarks/>
        public event SMTFeederCompleteCompletedEventHandler SMTFeederCompleteCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupConfirmCompletedEventHandler SMTFeederPickupConfirmCompleted;
        
        /// <remarks/>
        public event SMTFeederReturnConfirmCompletedEventHandler SMTFeederReturnConfirmCompleted;
        
        /// <remarks/>
        public event LoadTransferInfoCompletedEventHandler LoadTransferInfoCompleted;
        
        /// <remarks/>
        public event AddSMTFeederAreaCompletedEventHandler AddSMTFeederAreaCompleted;
        
        /// <remarks/>
        public event UpdateSMTFeederAreaCompletedEventHandler UpdateSMTFeederAreaCompleted;
        
        /// <remarks/>
        public event DelSMTFeederAreaCompletedEventHandler DelSMTFeederAreaCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederBinInfoCompletedEventHandler LoadSMTFeederBinInfoCompleted;
        
        /// <remarks/>
        public event AddSMTFeederBinCompletedEventHandler AddSMTFeederBinCompleted;
        
        /// <remarks/>
        public event UpdateSMTFeederBinCompletedEventHandler UpdateSMTFeederBinCompleted;
        
        /// <remarks/>
        public event DelSMTFeederBinCompletedEventHandler DelSMTFeederBinCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederEquipmentTypeCompletedEventHandler LoadSMTFeederEquipmentTypeCompleted;
        
        /// <remarks/>
        public event UpdateSMTFeederEquipmentTypeCompletedEventHandler UpdateSMTFeederEquipmentTypeCompleted;
        
        /// <remarks/>
        public event CheckSmtFeederMaterialSerial_DeltaCompletedEventHandler CheckSmtFeederMaterialSerial_DeltaCompleted;
        
        /// <remarks/>
        public event CheckCombinepickupnoAccountStatusCompletedEventHandler CheckCombinepickupnoAccountStatusCompleted;
        
        /// <remarks/>
        public event LoadSmtSuperMarketMtlCompletedEventHandler LoadSmtSuperMarketMtlCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederCombineNoCompletedEventHandler LoadSMTFeederCombineNoCompleted;
        
        /// <remarks/>
        public event AddSMTFeederCombinePickupNoCompletedEventHandler AddSMTFeederCombinePickupNoCompleted;
        
        /// <remarks/>
        public event UpdateSMTFeederCombinePickupNoCompletedEventHandler UpdateSMTFeederCombinePickupNoCompleted;
        
        /// <remarks/>
        public event DelSMTFeederCombinePickupNoCompletedEventHandler DelSMTFeederCombinePickupNoCompleted;
        
        /// <remarks/>
        public event ChkSMTFeedePickupDetailCompletedEventHandler ChkSMTFeedePickupDetailCompleted;
        
        /// <remarks/>
        public event ChkSMTFeederTransferCompletedEventHandler ChkSMTFeederTransferCompleted;
        
        /// <remarks/>
        public event DelSMTFeederCombineNoSpecialCompletedEventHandler DelSMTFeederCombineNoSpecialCompleted;
        
        /// <remarks/>
        public event LoadFeederTransferQueryCompletedEventHandler LoadFeederTransferQueryCompleted;
        
        /// <remarks/>
        public event DelFeederTrsErrorMsgCompletedEventHandler DelFeederTrsErrorMsgCompleted;
        
        /// <remarks/>
        public event LoadSMTFeedReturnDetailCompletedEventHandler LoadSMTFeedReturnDetailCompleted;
        
        /// <remarks/>
        public event GetSMTFeederBinCompletedEventHandler GetSMTFeederBinCompleted;
        
        /// <remarks/>
        public event GetSMTFeederReturnBinCompletedEventHandler GetSMTFeederReturnBinCompleted;
        
        /// <remarks/>
        public event GetSMTFeederReturnBin2CompletedEventHandler GetSMTFeederReturnBin2Completed;
        
        /// <remarks/>
        public event DeleteSmtFeederReturnmDetailCompletedEventHandler DeleteSmtFeederReturnmDetailCompleted;
        
        /// <remarks/>
        public event AddSMTFeederReturnInfoCompletedEventHandler AddSMTFeederReturnInfoCompleted;
        
        /// <remarks/>
        public event AddSMTFeedBinRequestCompletedEventHandler AddSMTFeedBinRequestCompleted;
        
        /// <remarks/>
        public event AddSMTFeedBinRequestHistoryCompletedEventHandler AddSMTFeedBinRequestHistoryCompleted;
        
        /// <remarks/>
        public event AddSMTFeederAreaUseInfoCompletedEventHandler AddSMTFeederAreaUseInfoCompleted;
        
        /// <remarks/>
        public event DeleteSMTFeederAreaUseInfoCompletedEventHandler DeleteSMTFeederAreaUseInfoCompleted;
        
        /// <remarks/>
        public event DeleteSMTFeedBinRequestCompletedEventHandler DeleteSMTFeedBinRequestCompleted;
        
        /// <remarks/>
        public event ADDSMTFeederMFUDetailCompletedEventHandler ADDSMTFeederMFUDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederMFUDetailCompletedEventHandler LoadSMTFeederMFUDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederReturnAcountDetailCompletedEventHandler LoadSMTFeederReturnAcountDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederReturnDetailCompletedEventHandler LoadSMTFeederReturnDetailCompleted;
        
        /// <remarks/>
        public event SMTFeederReturnCompleteCompletedEventHandler SMTFeederReturnCompleteCompleted;
        
        /// <remarks/>
        public event SMTFeederReturnToMESCompletedEventHandler SMTFeederReturnToMESCompleted;
        
        /// <remarks/>
        public event TESTInfoCompletedEventHandler TESTInfoCompleted;
        
        /// <remarks/>
        public event LoadSuperMarkMtlCompletedEventHandler LoadSuperMarkMtlCompleted;
        
        /// <remarks/>
        public event InsertSmtsupermarketMtlCompletedEventHandler InsertSmtsupermarketMtlCompleted;
        
        /// <remarks/>
        public event UpdateSmtsupermarketMtlCompletedEventHandler UpdateSmtsupermarketMtlCompleted;
        
        /// <remarks/>
        public event DeleteSmtsupermarketMtlCompletedEventHandler DeleteSmtsupermarketMtlCompleted;
        
        /// <remarks/>
        public event SmtFeederSensorStatus_New2CompletedEventHandler SmtFeederSensorStatus_New2Completed;
        
        /// <remarks/>
        public event SmtFeederSensorStatus_NewCompletedEventHandler SmtFeederSensorStatus_NewCompleted;
        
        /// <remarks/>
        public event SmtFeederSensorStatusCompletedEventHandler SmtFeederSensorStatusCompleted;
        
        /// <remarks/>
        public event SmtReturnLossAlarmLogCompletedEventHandler SmtReturnLossAlarmLogCompleted;
        
        /// <remarks/>
        public event InsertSmtFeederPickupPrintCompletedEventHandler InsertSmtFeederPickupPrintCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederBoard_NewCompletedEventHandler LoadSmtFeederBoard_NewCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederBoardCompletedEventHandler LoadSmtFeederBoardCompleted;
        
        /// <remarks/>
        public event FindCombinePickupNoByMoNoCompletedEventHandler FindCombinePickupNoByMoNoCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederPalletStatusCompletedEventHandler LoadSmtFeederPalletStatusCompleted;
        
        /// <remarks/>
        public event LoadSmtExcessStatusCompletedEventHandler LoadSmtExcessStatusCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederOverdueBinTableCompletedEventHandler LoadSmtFeederOverdueBinTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederSensorWeekBinTableCompletedEventHandler LoadSmtFeederSensorWeekBinTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederSensorWeekErroeTableCompletedEventHandler LoadSmtFeederSensorWeekErroeTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederBinDetailCompletedEventHandler LoadSmtFeederBinDetailCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederOverdueErroeTableCompletedEventHandler LoadSmtFeederOverdueErroeTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederSensorErroeTableCompletedEventHandler LoadSmtFeederSensorErroeTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederSensorBinTableCompletedEventHandler LoadSmtFeederSensorBinTableCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederAccountStatusCompletedEventHandler LoadSmtFeederAccountStatusCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederMoStatusCompletedEventHandler LoadSmtFeederMoStatusCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederPickupPrintCompletedEventHandler LoadSmtFeederPickupPrintCompleted;
        
        /// <remarks/>
        public event UpdateSmtExcessDetailCompletedEventHandler UpdateSmtExcessDetailCompleted;
        
        /// <remarks/>
        public event DeleteSmtExcessDetailCompletedEventHandler DeleteSmtExcessDetailCompleted;
        
        /// <remarks/>
        public event InsertSmtExcessDetailCompletedEventHandler InsertSmtExcessDetailCompleted;
        
        /// <remarks/>
        public event FindSmtExcesssMonoCompletedEventHandler FindSmtExcesssMonoCompleted;
        
        /// <remarks/>
        public event CheckPartSupermarkAccountCompletedEventHandler CheckPartSupermarkAccountCompleted;
        
        /// <remarks/>
        public event LoadSmtExcesssDetailByExcessnoCompletedEventHandler LoadSmtExcesssDetailByExcessnoCompleted;
        
        /// <remarks/>
        public event LoadSmtFeederAreaUseListCompletedEventHandler LoadSmtFeederAreaUseListCompleted;
        
        /// <remarks/>
        public event ExeReworkChangeSerialCompletedEventHandler ExeReworkChangeSerialCompleted;
        
        /// <remarks/>
        public event Exe_ReloadMaterialCompletedEventHandler Exe_ReloadMaterialCompleted;
        
        /// <remarks/>
        public event LoadPDLineJoinSMDAreaBasisCompletedEventHandler LoadPDLineJoinSMDAreaBasisCompleted;
        
        /// <remarks/>
        public event Exe_ChangeFeederCompletedEventHandler Exe_ChangeFeederCompleted;
        
        /// <remarks/>
        public event Exe_LoadMaterialCompletedEventHandler Exe_LoadMaterialCompleted;
        
        /// <remarks/>
        public event Exe_LoadMaterial_newCompletedEventHandler Exe_LoadMaterial_newCompleted;
        
        /// <remarks/>
        public event Exe_LoadMaterial_newLogicCompletedEventHandler Exe_LoadMaterial_newLogicCompleted;
        
        /// <remarks/>
        public event LoadMFUCompletedEventHandler LoadMFUCompleted;
        
        /// <remarks/>
        public event LoadWIPCounterStateCompletedEventHandler LoadWIPCounterStateCompleted;
        
        /// <remarks/>
        public event LoadWIPCounterStateJoinMOBasisCompletedEventHandler LoadWIPCounterStateJoinMOBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPCounterLogJoinMOBasisCompletedEventHandler LoadWIPCounterLogJoinMOBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventHandler LoadWIPCounterStateAndLogJoinMOBasis_HMICompleted;
        
        /// <remarks/>
        public event LoadWIPCounterState_ActiveCompletedEventHandler LoadWIPCounterState_ActiveCompleted;
        
        /// <remarks/>
        public event LoadLotOnMOLineDispatch_EQPCompletedEventHandler LoadLotOnMOLineDispatch_EQPCompleted;
        
        /// <remarks/>
        public event GetFinishQtyCompletedEventHandler GetFinishQtyCompleted;
        
        /// <remarks/>
        public event EditLotState_PDLineNoCompletedEventHandler EditLotState_PDLineNoCompleted;
        
        /// <remarks/>
        public event Exe_MaintainAction_AccumulateCompletedEventHandler Exe_MaintainAction_AccumulateCompleted;
        
        /// <remarks/>
        public event Chk_MaintainAction_AccumulateCompletedEventHandler Chk_MaintainAction_AccumulateCompleted;
        
        /// <remarks/>
        public event AddWeighingDetailCompletedEventHandler AddWeighingDetailCompleted;
        
        /// <remarks/>
        public event UpdWeighingDetailCompletedEventHandler UpdWeighingDetailCompleted;
        
        /// <remarks/>
        public event UpdWeighingDetail_OthersCompletedEventHandler UpdWeighingDetail_OthersCompleted;
        
        /// <remarks/>
        public event AddWeighingPrintLabel_dtMessageCompletedEventHandler AddWeighingPrintLabel_dtMessageCompleted;
        
        /// <remarks/>
        public event AddWeighingPrintLabelCompletedEventHandler AddWeighingPrintLabelCompleted;
        
        /// <remarks/>
        public event UpdWeighingPrintLabel_dtMessageCompletedEventHandler UpdWeighingPrintLabel_dtMessageCompleted;
        
        /// <remarks/>
        public event UpdWeighingPrintLabelCompletedEventHandler UpdWeighingPrintLabelCompleted;
        
        /// <remarks/>
        public event LoadWeighingDetailCompletedEventHandler LoadWeighingDetailCompleted;
        
        /// <remarks/>
        public event CheckAssyDEJCompletedEventHandler CheckAssyDEJCompleted;
        
        /// <remarks/>
        public event TMOCheckDEJCompletedEventHandler TMOCheckDEJCompleted;
        
        /// <remarks/>
        public event LoadCUS_MOShipConstraintCompletedEventHandler LoadCUS_MOShipConstraintCompleted;
        
        /// <remarks/>
        public event LoadPacking_PreCCDEquipmentCompletedEventHandler LoadPacking_PreCCDEquipmentCompleted;
        
        /// <remarks/>
        public event Exe_ChangeFeeder_WJCompletedEventHandler Exe_ChangeFeeder_WJCompleted;
        
        /// <remarks/>
        public event Exe_ReloadMaterial_WJCompletedEventHandler Exe_ReloadMaterial_WJCompleted;
        
        /// <remarks/>
        public event UpdFeederMFU_WJCompletedEventHandler UpdFeederMFU_WJCompleted;
        
        /// <remarks/>
        public event LoadMOOISpec_WJCompletedEventHandler LoadMOOISpec_WJCompleted;
        
        /// <remarks/>
        public event LoadMOCombine_MONoCompletedEventHandler LoadMOCombine_MONoCompleted;
        
        /// <remarks/>
        public event GetEQPLoss_WJCompletedEventHandler GetEQPLoss_WJCompleted;
        
        /// <remarks/>
        public event RecordEQPLossLogCompletedEventHandler RecordEQPLossLogCompleted;
        
        /// <remarks/>
        public event UpdWIPMOFittingTotalWeightCompletedEventHandler UpdWIPMOFittingTotalWeightCompleted;
        
        /// <remarks/>
        public event LoadWIPMOFittingTotalWeightCompletedEventHandler LoadWIPMOFittingTotalWeightCompleted;
        
        /// <remarks/>
        public event LoadIFMOBasisCompletedEventHandler LoadIFMOBasisCompleted;
        
        /// <remarks/>
        public event AddIFMOBasisCompletedEventHandler AddIFMOBasisCompleted;
        
        /// <remarks/>
        public event AddIFPackingListBasisCompletedEventHandler AddIFPackingListBasisCompleted;
        
        /// <remarks/>
        public event AddIFPackingListDetailCompletedEventHandler AddIFPackingListDetailCompleted;
        
        /// <remarks/>
        public event LoadIFPackingListDetailCompletedEventHandler LoadIFPackingListDetailCompleted;
        
        /// <remarks/>
        public event LoadMOPackingCartonJoinPackingBoxDetailCompletedEventHandler LoadMOPackingCartonJoinPackingBoxDetailCompleted;
        
        /// <remarks/>
        public event GetMOConfirmContentCompletedEventHandler GetMOConfirmContentCompleted;
        
        /// <remarks/>
        public event ExeMOConfirmCompletedEventHandler ExeMOConfirmCompleted;
        
        /// <remarks/>
        public event ExeBackflushCompletedEventHandler ExeBackflushCompleted;
        
        /// <remarks/>
        public event ExeMOConfirm_NoBatchCompletedEventHandler ExeMOConfirm_NoBatchCompleted;
        
        /// <remarks/>
        public event LoadPrepareMaterialTemp_NEWCompletedEventHandler LoadPrepareMaterialTemp_NEWCompleted;
        
        /// <remarks/>
        public event UpdTryRunTypeCheck_D3D4CompletedEventHandler UpdTryRunTypeCheck_D3D4Completed;
        
        /// <remarks/>
        public event LoadWeighingDetail_ReprintCompletedEventHandler LoadWeighingDetail_ReprintCompleted;
        
        /// <remarks/>
        public event LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventHandler LoadWeighingPrintLabel_dtMessage_ReprintCompleted;
        
        /// <remarks/>
        public event LoadPacking_PreT2EquipmentCompletedEventHandler LoadPacking_PreT2EquipmentCompleted;
        
        /// <remarks/>
        public event LoadBinNoStateCompletedEventHandler LoadBinNoStateCompleted;
        
        /// <remarks/>
        public event UpdBinNoCompletedEventHandler UpdBinNoCompleted;
        
        /// <remarks/>
        public event LoadRoomNoStateCompletedEventHandler LoadRoomNoStateCompleted;
        
        /// <remarks/>
        public event UpdRoomNoCompletedEventHandler UpdRoomNoCompleted;
        
        /// <remarks/>
        public event UpdateWeight_PackingCompletedEventHandler UpdateWeight_PackingCompleted;
        
        /// <remarks/>
        public event LoadWIPStateCompletedEventHandler LoadWIPStateCompleted;
        
        /// <remarks/>
        public event LoadWIPState_SemiCompletedEventHandler LoadWIPState_SemiCompleted;
        
        /// <remarks/>
        public event LoadSMTGBParameterCompletedEventHandler LoadSMTGBParameterCompleted;
        
        /// <remarks/>
        public event UpdateGBParameterCompletedEventHandler UpdateGBParameterCompleted;
        
        /// <remarks/>
        public event AddGBTestInfoCompletedEventHandler AddGBTestInfoCompleted;
        
        /// <remarks/>
        public event CheckFileExistCompletedEventHandler CheckFileExistCompleted;
        
        /// <remarks/>
        public event LoadMaterialSerial_Delta_byMFUCompletedEventHandler LoadMaterialSerial_Delta_byMFUCompleted;
        
        /// <remarks/>
        public event LoadFeederMaterialNo_MappingCompletedEventHandler LoadFeederMaterialNo_MappingCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederAreaCompletedEventHandler LoadSMTFeederAreaCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederUseInfoCompletedEventHandler LoadSMTFeederUseInfoCompleted;
        
        /// <remarks/>
        public event LoadFeederAreaJoinFeederTrsCompletedEventHandler LoadFeederAreaJoinFeederTrsCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederMOCombineCompletedEventHandler LoadSMTFeederMOCombineCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederPickupDeatilCompletedEventHandler LoadSMTFeederPickupDeatilCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederAreaMaterialDetailCompletedEventHandler LoadSMTFeederAreaMaterialDetailCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederAreaMaterialDetail_NewCompletedEventHandler LoadSMTFeederAreaMaterialDetail_NewCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederAreaPickingInfoCompletedEventHandler LoadSMTFeederAreaPickingInfoCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupCheckCompletedEventHandler SMTFeederPickupCheckCompleted;
        
        /// <remarks/>
        public event SMTFeederPickupDetailCompletedEventHandler SMTFeederPickupDetailCompleted;
        
        /// <remarks/>
        public event SMTFeederUseCompleteCompletedEventHandler SMTFeederUseCompleteCompleted;
        
        /// <remarks/>
        public event CheckCombinePickupNoCompletedEventHandler CheckCombinePickupNoCompleted;
        
        /// <remarks/>
        public event SMTFeederLEDRequestCompletedEventHandler SMTFeederLEDRequestCompleted;
        
        /// <remarks/>
        public event SMTFeederClearInfoCompletedEventHandler SMTFeederClearInfoCompleted;
        
        /// <remarks/>
        public event SMTFeederPickUpCompleteCompletedEventHandler SMTFeederPickUpCompleteCompleted;
        
        /// <remarks/>
        public event SMTFeederPickUpCancelCompletedEventHandler SMTFeederPickUpCancelCompleted;
        
        /// <remarks/>
        public event LoadSMTFeederPickupDetailCompletedEventHandler LoadSMTFeederPickupDetailCompleted;
        
        /// <remarks/>
        public event LoadMOPackingSMLogCompletedEventHandler LoadMOPackingSMLogCompleted;
        
        /// <remarks/>
        public event LoadMOPackingBasisCompletedEventHandler LoadMOPackingBasisCompleted;
        
        /// <remarks/>
        public event LoadMOPackingPalletCompletedEventHandler LoadMOPackingPalletCompleted;
        
        /// <remarks/>
        public event LoadMOPackingCartonCompletedEventHandler LoadMOPackingCartonCompleted;
        
        /// <remarks/>
        public event LoadMOPackingBoxCompletedEventHandler LoadMOPackingBoxCompleted;
        
        /// <remarks/>
        public event LoadMOPackingBoxDetailCompletedEventHandler LoadMOPackingBoxDetailCompleted;
        
        /// <remarks/>
        public event LoadWIPProductNoCompletedEventHandler LoadWIPProductNoCompleted;
        
        /// <remarks/>
        public event GenMOPackingBasisCompletedEventHandler GenMOPackingBasisCompleted;
        
        /// <remarks/>
        public event ExeMOPackingCompletedEventHandler ExeMOPackingCompleted;
        
        /// <remarks/>
        public event ExeMOPackingLabelDataCreateCompletedEventHandler ExeMOPackingLabelDataCreateCompleted;
        
        /// <remarks/>
        public event ExePackingSplitCompletedEventHandler ExePackingSplitCompleted;
        
        /// <remarks/>
        public event ExePackingSplit_LotCompletedEventHandler ExePackingSplit_LotCompleted;
        
        /// <remarks/>
        public event ExePackingMergeCompletedEventHandler ExePackingMergeCompleted;
        
        /// <remarks/>
        public event ExePackingMerge_LotCompletedEventHandler ExePackingMerge_LotCompleted;
        
        /// <remarks/>
        public event ExeMOPacking_ToINVCompletedEventHandler ExeMOPacking_ToINVCompleted;
        
        /// <remarks/>
        public event DelMOPacking_UnPackCompletedEventHandler DelMOPacking_UnPackCompleted;
        
        /// <remarks/>
        public event ExeMOUnpackingCompletedEventHandler ExeMOUnpackingCompleted;
        
        /// <remarks/>
        public event ExeMOPacking_CloseCompletedEventHandler ExeMOPacking_CloseCompleted;
        
        /// <remarks/>
        public event LoadMOPackingBasisJoinMOBasisCompletedEventHandler LoadMOPackingBasisJoinMOBasisCompleted;
        
        /// <remarks/>
        public event UpdateWIPSMTMaterialStatusCompletedEventHandler UpdateWIPSMTMaterialStatusCompleted;
        
        /// <remarks/>
        public event LoadWIPFQCFormCompletedEventHandler LoadWIPFQCFormCompleted;
        
        /// <remarks/>
        public event LoadWIPFQCFormDetailCompletedEventHandler LoadWIPFQCFormDetailCompleted;
        
        /// <remarks/>
        public event AddWIPFQCFormCompletedEventHandler AddWIPFQCFormCompleted;
        
        /// <remarks/>
        public event DelWIPFQCFormCompletedEventHandler DelWIPFQCFormCompleted;
        
        /// <remarks/>
        public event LoadFQCFormQCItemMapCompletedEventHandler LoadFQCFormQCItemMapCompleted;
        
        /// <remarks/>
        public event EditWIPFQCFormCompletedEventHandler EditWIPFQCFormCompleted;
        
        /// <remarks/>
        public event LoadWIPFQCFormStdCompletedEventHandler LoadWIPFQCFormStdCompleted;
        
        /// <remarks/>
        public event LoadWIPFQCFormStdDetailCompletedEventHandler LoadWIPFQCFormStdDetailCompleted;
        
        /// <remarks/>
        public event AddWIPFQCFormStdCompletedEventHandler AddWIPFQCFormStdCompleted;
        
        /// <remarks/>
        public event DelWIPFQCFormStdCompletedEventHandler DelWIPFQCFormStdCompleted;
        
        /// <remarks/>
        public event LoadFQCFormStdQCItemMapCompletedEventHandler LoadFQCFormStdQCItemMapCompleted;
        
        /// <remarks/>
        public event LoadMOPackingPrintLabelCompletedEventHandler LoadMOPackingPrintLabelCompleted;
        
        /// <remarks/>
        public event UpdMOPackingPrintLogCompletedEventHandler UpdMOPackingPrintLogCompleted;
        
        /// <remarks/>
        public event LoadMOBurningLogCompletedEventHandler LoadMOBurningLogCompleted;
        
        /// <remarks/>
        public event LoadCont_PackingListBasisCompletedEventHandler LoadCont_PackingListBasisCompleted;
        
        /// <remarks/>
        public event LoadIF_INVWIPInventory_Semi2CompletedEventHandler LoadIF_INVWIPInventory_Semi2Completed;
        
        /// <remarks/>
        public event LoadIF_INVWIPInventory_SemiCompletedEventHandler LoadIF_INVWIPInventory_SemiCompleted;
        
        /// <remarks/>
        public event ExeINVIn_Gen_ERPRedoCompletedEventHandler ExeINVIn_Gen_ERPRedoCompleted;
        
        /// <remarks/>
        public event ExeINVIn_SubFactory_ResultCompletedEventHandler ExeINVIn_SubFactory_ResultCompleted;
        
        /// <remarks/>
        public event LoadSMTMaterialReturnCompletedEventHandler LoadSMTMaterialReturnCompleted;
        
        /// <remarks/>
        public event LoadPickupDetailJoinListJoinBasisCompletedEventHandler LoadPickupDetailJoinListJoinBasisCompleted;
        
        /// <remarks/>
        public event LoadPickupDetailJoinListJoinBasis_newCompletedEventHandler LoadPickupDetailJoinListJoinBasis_newCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturnDataCompletedEventHandler Exe_SMTMaterialReturnDataCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_Auto1CompletedEventHandler Exe_SMTMaterialReturn_Auto1Completed;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_AutoCompletedEventHandler Exe_SMTMaterialReturn_AutoCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_UpdateCompletedEventHandler Exe_SMTMaterialReturn_UpdateCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturnCompletedEventHandler Exe_SMTMaterialReturnCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_New_AutoCompletedEventHandler Exe_SMTMaterialReturn_New_AutoCompleted;
        
        /// <remarks/>
        public event Exe_SMTMaterialReturn_NewCompletedEventHandler Exe_SMTMaterialReturn_NewCompleted;
        
        /// <remarks/>
        public event LoadUnitLog_AssemblyCompletedEventHandler LoadUnitLog_AssemblyCompleted;
        
        /// <remarks/>
        public event LoadWIPReworkIECompletedEventHandler LoadWIPReworkIECompleted;
        
        /// <remarks/>
        public event LoadSerialNoCheckCompletedEventHandler LoadSerialNoCheckCompleted;
        
        /// <remarks/>
        public event EXESerialNoCheckCompletedEventHandler EXESerialNoCheckCompleted;
        
        /// <remarks/>
        public event EXEToMoChangeCompletedEventHandler EXEToMoChangeCompleted;
        
        /// <remarks/>
        public event SetReworkQtyCompletedEventHandler SetReworkQtyCompleted;
        
        /// <remarks/>
        public event LoadReworkSheetBasisCompletedEventHandler LoadReworkSheetBasisCompleted;
        
        /// <remarks/>
        public event EditReworkSheetBasisCompletedEventHandler EditReworkSheetBasisCompleted;
        
        /// <remarks/>
        public event AddReworkSheetBasisCompletedEventHandler AddReworkSheetBasisCompleted;
        
        /// <remarks/>
        public event LoadReworkMeetingPlaceCompletedEventHandler LoadReworkMeetingPlaceCompleted;
        
        /// <remarks/>
        public event DelReworkSheetBasisCompletedEventHandler DelReworkSheetBasisCompleted;
        
        /// <remarks/>
        public event LoadReworkSheetNoCompletedEventHandler LoadReworkSheetNoCompleted;
        
        /// <remarks/>
        public event InitReworkSheetNoCompletedEventHandler InitReworkSheetNoCompleted;
        
        /// <remarks/>
        public event LoadReworkSheetConfereeCompletedEventHandler LoadReworkSheetConfereeCompleted;
        
        /// <remarks/>
        public event UpdReworkSheetConfereeCompletedEventHandler UpdReworkSheetConfereeCompleted;
        
        /// <remarks/>
        public event DelReworkSheetConfereeCompletedEventHandler DelReworkSheetConfereeCompleted;
        
        /// <remarks/>
        public event LoadReworkDutyCompletedEventHandler LoadReworkDutyCompleted;
        
        /// <remarks/>
        public event UpdReworkDutyCompletedEventHandler UpdReworkDutyCompleted;
        
        /// <remarks/>
        public event SendEmail_ReworkMeetingReordCompletedEventHandler SendEmail_ReworkMeetingReordCompleted;
        
        /// <remarks/>
        public event LoadReworkQACompletedEventHandler LoadReworkQACompleted;
        
        /// <remarks/>
        public event LoadReworkIECompletedEventHandler LoadReworkIECompleted;
        
        /// <remarks/>
        public event MaintainReworkQACompletedEventHandler MaintainReworkQACompleted;
        
        /// <remarks/>
        public event LoadReworkPCCompletedEventHandler LoadReworkPCCompleted;
        
        /// <remarks/>
        public event MaintainReworkPCCompletedEventHandler MaintainReworkPCCompleted;
        
        /// <remarks/>
        public event GetLotCurQtyOfProcessCompletedEventHandler GetLotCurQtyOfProcessCompleted;
        
        /// <remarks/>
        public event AddReworkIECompletedEventHandler AddReworkIECompleted;
        
        /// <remarks/>
        public event EditReworkIECompletedEventHandler EditReworkIECompleted;
        
        /// <remarks/>
        public event DelReworkIECompletedEventHandler DelReworkIECompleted;
        
        /// <remarks/>
        public event LoadReworkAttachCompletedEventHandler LoadReworkAttachCompleted;
        
        /// <remarks/>
        public event AddReworkAttachCompletedEventHandler AddReworkAttachCompleted;
        
        /// <remarks/>
        public event DelReworkAttachCompletedEventHandler DelReworkAttachCompleted;
        
        /// <remarks/>
        public event LoadReworkMFGCompletedEventHandler LoadReworkMFGCompleted;
        
        /// <remarks/>
        public event MaintainReworkMFGCompletedEventHandler MaintainReworkMFGCompleted;
        
        /// <remarks/>
        public event LoadMFGLotDataCompletedEventHandler LoadMFGLotDataCompleted;
        
        /// <remarks/>
        public event GetAllNodeNoByProcessCompletedEventHandler GetAllNodeNoByProcessCompleted;
        
        /// <remarks/>
        public event CheckReworkSNExcelCompletedEventHandler CheckReworkSNExcelCompleted;
        
        /// <remarks/>
        public event DelMaterialFeederCompletedEventHandler DelMaterialFeederCompleted;
        
        /// <remarks/>
        public event LoadFeederStatusCompletedEventHandler LoadFeederStatusCompleted;
        
        /// <remarks/>
        public event AddFeederStatusCompletedEventHandler AddFeederStatusCompleted;
        
        /// <remarks/>
        public event SetFeederStatusCompletedEventHandler SetFeederStatusCompleted;
        
        /// <remarks/>
        public event UpdFeederMFUCompletedEventHandler UpdFeederMFUCompleted;
        
        /// <remarks/>
        public event AddFeederMFUCompletedEventHandler AddFeederMFUCompleted;
        
        /// <remarks/>
        public event DelFeederMFUCompletedEventHandler DelFeederMFUCompleted;
        
        /// <remarks/>
        public event SetMFUStauts_Feeder_QCFlagCompletedEventHandler SetMFUStauts_Feeder_QCFlagCompleted;
        
        /// <remarks/>
        public event LoadMFUStatusCompletedEventHandler LoadMFUStatusCompleted;
        
        /// <remarks/>
        public event LoadAreaCompletedEventHandler LoadAreaCompleted;
        
        /// <remarks/>
        public event LoadMFUNoCompletedEventHandler LoadMFUNoCompleted;
        
        /// <remarks/>
        public event InsertToSMTMtlMFUStatusCompletedEventHandler InsertToSMTMtlMFUStatusCompleted;
        
        /// <remarks/>
        public event LoadMFUStatusJoinMOCompletedEventHandler LoadMFUStatusJoinMOCompleted;
        
        /// <remarks/>
        public event LoadMFUStatusJoinFeederCompletedEventHandler LoadMFUStatusJoinFeederCompleted;
        
        /// <remarks/>
        public event LoadMOCombineCompletedEventHandler LoadMOCombineCompleted;
        
        /// <remarks/>
        public event LoadMOOISpecCompletedEventHandler LoadMOOISpecCompleted;
        
        /// <remarks/>
        public event AddMFUEQPCompletedEventHandler AddMFUEQPCompleted;
        
        /// <remarks/>
        public event DelMFUEQPCompletedEventHandler DelMFUEQPCompleted;
        
        /// <remarks/>
        public event LoadEQPMFUStatusCompletedEventHandler LoadEQPMFUStatusCompleted;
        
        /// <remarks/>
        public event AddUnitLog_ErrorCompletedEventHandler AddUnitLog_ErrorCompleted;
        
        /// <remarks/>
        public event LoadVQABasisCompletedEventHandler LoadVQABasisCompleted;
        
        /// <remarks/>
        public event LoadVQADetailCompletedEventHandler LoadVQADetailCompleted;
        
        /// <remarks/>
        public event LoadVQAMoDetailCompletedEventHandler LoadVQAMoDetailCompleted;
        
        /// <remarks/>
        public event GetVQANoCompletedEventHandler GetVQANoCompleted;
        
        /// <remarks/>
        public event EXE_VQABasisCompletedEventHandler EXE_VQABasisCompleted;
        
        /// <remarks/>
        public event SetVQAOPCompletedEventHandler SetVQAOPCompleted;
        
        /// <remarks/>
        public event LoadVQAReleaseCompletedEventHandler LoadVQAReleaseCompleted;
        
        /// <remarks/>
        public event LoadVQAVDDataCompletedEventHandler LoadVQAVDDataCompleted;
        
        /// <remarks/>
        public event LoadVQAAffectedMoCompletedEventHandler LoadVQAAffectedMoCompleted;
        
        /// <remarks/>
        public event ShowVQAMoCheckCompletedEventHandler ShowVQAMoCheckCompleted;
        
        /// <remarks/>
        public event SetVQAMTLReleaseCompletedEventHandler SetVQAMTLReleaseCompleted;
        
        /// <remarks/>
        public event SetVQAMoReleaseCompletedEventHandler SetVQAMoReleaseCompleted;
        
        /// <remarks/>
        public event LoadMQABasisJoinDetailCompletedEventHandler LoadMQABasisJoinDetailCompleted;
        
        /// <remarks/>
        public event LoadMQADetailCompletedEventHandler LoadMQADetailCompleted;
        
        /// <remarks/>
        public event GetMQAERFNoCompletedEventHandler GetMQAERFNoCompleted;
        
        /// <remarks/>
        public event Exe_MQAERFCreateCompletedEventHandler Exe_MQAERFCreateCompleted;
        
        /// <remarks/>
        public event GetMQAInfectedMOCompletedEventHandler GetMQAInfectedMOCompleted;
        
        /// <remarks/>
        public event UpdMQAHoldStartOPCompletedEventHandler UpdMQAHoldStartOPCompleted;
        
        /// <remarks/>
        public event LoadMQAReleaseCompletedEventHandler LoadMQAReleaseCompleted;
        
        /// <remarks/>
        public event LoadMQAAffectedMoCompletedEventHandler LoadMQAAffectedMoCompleted;
        
        /// <remarks/>
        public event SetMQAReleaseCompletedEventHandler SetMQAReleaseCompleted;
        
        /// <remarks/>
        public event SetMOForbidOPNodeCompletedEventHandler SetMOForbidOPNodeCompleted;
        
        /// <remarks/>
        public event GetOEMONoCompletedEventHandler GetOEMONoCompleted;
        
        /// <remarks/>
        public event AddMOPDLineStateCompletedEventHandler AddMOPDLineStateCompleted;
        
        /// <remarks/>
        public event LoadSMTProductionState_NewCompletedEventHandler LoadSMTProductionState_NewCompleted;
        
        /// <remarks/>
        public event LoadSMTProductionState_New1CompletedEventHandler LoadSMTProductionState_New1Completed;
        
        /// <remarks/>
        public event GetSolderEdateCompletedEventHandler GetSolderEdateCompleted;
        
        /// <remarks/>
        public event LoadSolderBasisCompletedEventHandler LoadSolderBasisCompleted;
        
        /// <remarks/>
        public event AddMoNoSolder_CombineCompletedEventHandler AddMoNoSolder_CombineCompleted;
        
        /// <remarks/>
        public event LoadOEMOLineDispatchCompletedEventHandler LoadOEMOLineDispatchCompleted;
        
        /// <remarks/>
        public event LoadOEMOLineDispatchInfoCompletedEventHandler LoadOEMOLineDispatchInfoCompleted;
        
        /// <remarks/>
        public event LoadWIPMOPDLineStartInfoCompletedEventHandler LoadWIPMOPDLineStartInfoCompleted;
        
        /// <remarks/>
        public event LoadProductionState_NewCompletedEventHandler LoadProductionState_NewCompleted;
        
        /// <remarks/>
        public event LoadUserBasisJoinLoginStateCompletedEventHandler LoadUserBasisJoinLoginStateCompleted;
        
        /// <remarks/>
        public event LoadOperatorLoginStateCompletedEventHandler LoadOperatorLoginStateCompleted;
        
        /// <remarks/>
        public event GetPCDefaultDataCompletedEventHandler GetPCDefaultDataCompleted;
        
        /// <remarks/>
        public event UpdOperatorLoginCompletedEventHandler UpdOperatorLoginCompleted;
        
        /// <remarks/>
        public event UpdOperatorLogoutCompletedEventHandler UpdOperatorLogoutCompleted;
        
        /// <remarks/>
        public event GetShiftCompletedEventHandler GetShiftCompleted;
        
        /// <remarks/>
        public event LoadOPAreaJoinAreaEQPMapCompletedEventHandler LoadOPAreaJoinAreaEQPMapCompleted;
        
        /// <remarks/>
        public event LoadUserBasisJoinLoginLogCompletedEventHandler LoadUserBasisJoinLoginLogCompleted;
        
        /// <remarks/>
        public event LoadOperatorLoginExceptionCompletedEventHandler LoadOperatorLoginExceptionCompleted;
        
        /// <remarks/>
        public event AddOperatorLoginExceptionCompletedEventHandler AddOperatorLoginExceptionCompleted;
        
        /// <remarks/>
        public event GetDIPProductionStateCompletedEventHandler GetDIPProductionStateCompleted;
        
        /// <remarks/>
        public event ExeWOStartDIPProductionCompletedEventHandler ExeWOStartDIPProductionCompleted;
        
        /// <remarks/>
        public event LoadProductionLine_LossCodeCompletedEventHandler LoadProductionLine_LossCodeCompleted;
        
        /// <remarks/>
        public event LoadOPAreaEquipmentCompletedEventHandler LoadOPAreaEquipmentCompleted;
        
        /// <remarks/>
        public event LoadProductionLineStatusCompletedEventHandler LoadProductionLineStatusCompleted;
        
        /// <remarks/>
        public event EditProductionLineStatusCompletedEventHandler EditProductionLineStatusCompleted;
        
        /// <remarks/>
        public event EXE_HoldProductionLineCompletedEventHandler EXE_HoldProductionLineCompleted;
        
        /// <remarks/>
        public event EXE_ReleaseProductionLineCompletedEventHandler EXE_ReleaseProductionLineCompleted;
        
        /// <remarks/>
        public event LoadPrepareMODataCompletedEventHandler LoadPrepareMODataCompleted;
        
        /// <remarks/>
        public event LoadMOCombineJoinPickupCompletedEventHandler LoadMOCombineJoinPickupCompleted;
        
        /// <remarks/>
        public event MOPrepareCheckInCompletedEventHandler MOPrepareCheckInCompleted;
        
        /// <remarks/>
        public event LoadPrepareMaterialTempCompletedEventHandler LoadPrepareMaterialTempCompleted;
        
        /// <remarks/>
        public event MOPrepareCheckOutCompletedEventHandler MOPrepareCheckOutCompleted;
        
        /// <remarks/>
        public event LoadProductionState_PrepareCompletedEventHandler LoadProductionState_PrepareCompleted;
        
        /// <remarks/>
        public event LoadOPMemoCompletedEventHandler LoadOPMemoCompleted;
        
        /// <remarks/>
        public event AddOPMemoCompletedEventHandler AddOPMemoCompleted;
        
        /// <remarks/>
        public event EditOPMemoCompletedEventHandler EditOPMemoCompleted;
        
        /// <remarks/>
        public event DelOPMemoCompletedEventHandler DelOPMemoCompleted;
        
        /// <remarks/>
        public event EditPanelLinkCompletedEventHandler EditPanelLinkCompleted;
        
        /// <remarks/>
        public event LoadMOProductProcessDefineCompletedEventHandler LoadMOProductProcessDefineCompleted;
        
        /// <remarks/>
        public event ChkMOProcessCompletedEventHandler ChkMOProcessCompleted;
        
        /// <remarks/>
        public event LoadPackingSerialQueryCompletedEventHandler LoadPackingSerialQueryCompleted;
        
        /// <remarks/>
        public event LoadERFCreateInfoCompletedEventHandler LoadERFCreateInfoCompleted;
        
        /// <remarks/>
        public event LoadExceedTimeDefaultHoldInfoCompletedEventHandler LoadExceedTimeDefaultHoldInfoCompleted;
        
        /// <remarks/>
        public event LoadERFCreateDataCompletedEventHandler LoadERFCreateDataCompleted;
        
        /// <remarks/>
        public event LoadRcvNoticeDataCompletedEventHandler LoadRcvNoticeDataCompleted;
        
        /// <remarks/>
        public event LoadShippingListDataCompletedEventHandler LoadShippingListDataCompleted;
        
        /// <remarks/>
        public event GetNewPackingListNoCompletedEventHandler GetNewPackingListNoCompleted;
        
        /// <remarks/>
        public event GetNewShippingListNoCompletedEventHandler GetNewShippingListNoCompleted;
        
        /// <remarks/>
        public event LoadDramaBasisCompletedEventHandler LoadDramaBasisCompleted;
        
        /// <remarks/>
        public event GetRuncardActionCompletedEventHandler GetRuncardActionCompleted;
        
        /// <remarks/>
        public event CheckInwithEquipmentCompletedEventHandler CheckInwithEquipmentCompleted;
        
        /// <remarks/>
        public event CheckInwithnoEquipmentCompletedEventHandler CheckInwithnoEquipmentCompleted;
        
        /// <remarks/>
        public event CheckOutCompletedEventHandler CheckOutCompleted;
        
        /// <remarks/>
        public event LoadDTAreaCompletedEventHandler LoadDTAreaCompleted;
        
        /// <remarks/>
        public event UpdDTAreaCompletedEventHandler UpdDTAreaCompleted;
        
        /// <remarks/>
        public event Exe_COCassetteCompletedEventHandler Exe_COCassetteCompleted;
        
        /// <remarks/>
        public event LoadWIPLimitedTimeControlCompletedEventHandler LoadWIPLimitedTimeControlCompleted;
        
        /// <remarks/>
        public event LoadWIPLagTimeControlByLotsCompletedEventHandler LoadWIPLagTimeControlByLotsCompleted;
        
        /// <remarks/>
        public event AddFutureOSCompletedEventHandler AddFutureOSCompleted;
        
        /// <remarks/>
        public event EditFutureOSCompletedEventHandler EditFutureOSCompleted;
        
        /// <remarks/>
        public event DelFutureOSCompletedEventHandler DelFutureOSCompleted;
        
        /// <remarks/>
        public event LoadFutureOSCompletedEventHandler LoadFutureOSCompleted;
        
        /// <remarks/>
        public event AddWIPOutSourceCompletedEventHandler AddWIPOutSourceCompleted;
        
        /// <remarks/>
        public event EditWIPOutSourceCompletedEventHandler EditWIPOutSourceCompleted;
        
        /// <remarks/>
        public event DelWIPOutSourceCompletedEventHandler DelWIPOutSourceCompleted;
        
        /// <remarks/>
        public event LoadWIPAlreadyOSBasisCompletedEventHandler LoadWIPAlreadyOSBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPOSBasisCompletedEventHandler LoadWIPOSBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPOSDetailCompletedEventHandler LoadWIPOSDetailCompleted;
        
        /// <remarks/>
        public event LoadLotStateInOSDetailCompletedEventHandler LoadLotStateInOSDetailCompleted;
        
        /// <remarks/>
        public event LoadComponentStateInOSDetailCompletedEventHandler LoadComponentStateInOSDetailCompleted;
        
        /// <remarks/>
        public event GetNewOSNoCompletedEventHandler GetNewOSNoCompleted;
        
        /// <remarks/>
        public event LoadLotStateForCreateOSCompletedEventHandler LoadLotStateForCreateOSCompleted;
        
        /// <remarks/>
        public event CheckLotStateForOSCompletedEventHandler CheckLotStateForOSCompleted;
        
        /// <remarks/>
        public event ExeOSConfirmCompletedEventHandler ExeOSConfirmCompleted;
        
        /// <remarks/>
        public event ExeOSReturnCompletedEventHandler ExeOSReturnCompleted;
        
        /// <remarks/>
        public event LoadOSBasisByLotDetailCompletedEventHandler LoadOSBasisByLotDetailCompleted;
        
        /// <remarks/>
        public event CheckLotIsOSbutNotReturnCompletedEventHandler CheckLotIsOSbutNotReturnCompleted;
        
        /// <remarks/>
        public event GetUnReturnLotsInSameOSWithRefLotCompletedEventHandler GetUnReturnLotsInSameOSWithRefLotCompleted;
        
        /// <remarks/>
        public event LoadSumOfResourceCompletedEventHandler LoadSumOfResourceCompleted;
        
        /// <remarks/>
        public event LoadSumOfResource_ValidCompletedEventHandler LoadSumOfResource_ValidCompleted;
        
        /// <remarks/>
        public event LoadSumOfResource_Valid_ByOPCompletedEventHandler LoadSumOfResource_Valid_ByOPCompleted;
        
        /// <remarks/>
        public event AddSumOfResourceCompletedEventHandler AddSumOfResourceCompleted;
        
        /// <remarks/>
        public event LoadSumOfResource_Valid_ByMOCompletedEventHandler LoadSumOfResource_Valid_ByMOCompleted;
        
        /// <remarks/>
        public event LoadSum_ResourceCompletedEventHandler LoadSum_ResourceCompleted;
        
        /// <remarks/>
        public event LoadWIPCarrierStateDetailCompletedEventHandler LoadWIPCarrierStateDetailCompleted;
        
        /// <remarks/>
        public event GetRelatedLotStateOfCarrierCompletedEventHandler GetRelatedLotStateOfCarrierCompleted;
        
        /// <remarks/>
        public event GetLotQuantityOnCarrierCompletedEventHandler GetLotQuantityOnCarrierCompleted;
        
        /// <remarks/>
        public event UpdWIPInv_Raw_ScrapCompletedEventHandler UpdWIPInv_Raw_ScrapCompleted;
        
        /// <remarks/>
        public event LoadPlanFinishTime_byLotCompletedEventHandler LoadPlanFinishTime_byLotCompleted;
        
        /// <remarks/>
        public event LoadLotTempEquipmentCompletedEventHandler LoadLotTempEquipmentCompleted;
        
        /// <remarks/>
        public event LoadLotTempEquipmentLoadPortCompletedEventHandler LoadLotTempEquipmentLoadPortCompleted;
        
        /// <remarks/>
        public event LoadEQPConsumeStatusCompletedEventHandler LoadEQPConsumeStatusCompleted;
        
        /// <remarks/>
        public event AddEQPConsumeStatusCompletedEventHandler AddEQPConsumeStatusCompleted;
        
        /// <remarks/>
        public event EditEQPConsumeStatusCompletedEventHandler EditEQPConsumeStatusCompleted;
        
        /// <remarks/>
        public event DelEQPConsumeStatusCompletedEventHandler DelEQPConsumeStatusCompleted;
        
        /// <remarks/>
        public event AddEQPConsumeLogCompletedEventHandler AddEQPConsumeLogCompleted;
        
        /// <remarks/>
        public event LoadEQPConsumeLogCompletedEventHandler LoadEQPConsumeLogCompleted;
        
        /// <remarks/>
        public event LoadWIPEQPQCListLogBasisCompletedEventHandler LoadWIPEQPQCListLogBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPEQPQCListLogDetailCompletedEventHandler LoadWIPEQPQCListLogDetailCompleted;
        
        /// <remarks/>
        public event AddWIPEQPQCListLogCompletedEventHandler AddWIPEQPQCListLogCompleted;
        
        /// <remarks/>
        public event EditWIPEQPQCListLogCompletedEventHandler EditWIPEQPQCListLogCompleted;
        
        /// <remarks/>
        public event GetQCListSerialCompletedEventHandler GetQCListSerialCompleted;
        
        /// <remarks/>
        public event LoadInvCountStateWithDetailCompletedEventHandler LoadInvCountStateWithDetailCompleted;
        
        /// <remarks/>
        public event LoadInvCountStateCompletedEventHandler LoadInvCountStateCompleted;
        
        /// <remarks/>
        public event ExeInvCountCloseCompletedEventHandler ExeInvCountCloseCompleted;
        
        /// <remarks/>
        public event ExeInvCountOpenCompletedEventHandler ExeInvCountOpenCompleted;
        
        /// <remarks/>
        public event ExeInvCountAdjustCompletedEventHandler ExeInvCountAdjustCompleted;
        
        /// <remarks/>
        public event ExeInvCountAdjust_MTLCompletedEventHandler ExeInvCountAdjust_MTLCompleted;
        
        /// <remarks/>
        public event ExeInvCountAdjust_PRDCompletedEventHandler ExeInvCountAdjust_PRDCompleted;
        
        /// <remarks/>
        public event ExeInvCountConfirmCompletedEventHandler ExeInvCountConfirmCompleted;
        
        /// <remarks/>
        public event ChkInvCountAdjustCompletedEventHandler ChkInvCountAdjustCompleted;
        
        /// <remarks/>
        public event ExeTransferFactory_LotCompletedEventHandler ExeTransferFactory_LotCompleted;
        
        /// <remarks/>
        public event UpdAddOSCompletedEventHandler UpdAddOSCompleted;
        
        /// <remarks/>
        public event UpdEditOSCompletedEventHandler UpdEditOSCompleted;
        
        /// <remarks/>
        public event DelOSBasisCompletedEventHandler DelOSBasisCompleted;
        
        /// <remarks/>
        public event ExeOS_AbortCompletedEventHandler ExeOS_AbortCompleted;
        
        /// <remarks/>
        public event ExeOS_ConfirmCompletedEventHandler ExeOS_ConfirmCompleted;
        
        /// <remarks/>
        public event ExeOS_ReturnCompletedEventHandler ExeOS_ReturnCompleted;
        
        /// <remarks/>
        public event Exe_LotChoiceEQPCompletedEventHandler Exe_LotChoiceEQPCompleted;
        
        /// <remarks/>
        public event Exe_AmountCloseLotCompletedEventHandler Exe_AmountCloseLotCompleted;
        
        /// <remarks/>
        public event SetLotStateToExitGroupOPCompletedEventHandler SetLotStateToExitGroupOPCompleted;
        
        /// <remarks/>
        public event AddCont_Material_AdjustCompletedEventHandler AddCont_Material_AdjustCompleted;
        
        /// <remarks/>
        public event EditCont_Material_AdjustCompletedEventHandler EditCont_Material_AdjustCompleted;
        
        /// <remarks/>
        public event DelCont_Material_AdjustCompletedEventHandler DelCont_Material_AdjustCompleted;
        
        /// <remarks/>
        public event AddMaterialFeederCompletedEventHandler AddMaterialFeederCompleted;
        
        /// <remarks/>
        public event LoadEQPETHValueCompletedEventHandler LoadEQPETHValueCompleted;
        
        /// <remarks/>
        public event GetExpValueCompletedEventHandler GetExpValueCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_CarrierFoupCompletedEventHandler Exe_CheckIn_CarrierFoupCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_CarrierFoupCompletedEventHandler Exe_CheckOut_CarrierFoupCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_BatchCompletedEventHandler Exe_CheckOut_BatchCompleted;
        
        /// <remarks/>
        public event Exe_CO_EpitaxyCompletedEventHandler Exe_CO_EpitaxyCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_BatchCompletedEventHandler Exe_CheckIn_BatchCompleted;
        
        /// <remarks/>
        public event LoadLotState_CarCompletedEventHandler LoadLotState_CarCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_CarCompletedEventHandler Exe_CheckOut_CarCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_CarRepairCompletedEventHandler Exe_CheckOut_CarRepairCompleted;
        
        /// <remarks/>
        public event AddLotBasisAssemblyCompletedEventHandler AddLotBasisAssemblyCompleted;
        
        /// <remarks/>
        public event AddLotBasisAssembly_OtherCompletedEventHandler AddLotBasisAssembly_OtherCompleted;
        
        /// <remarks/>
        public event GetERPInvNoCompletedEventHandler GetERPInvNoCompleted;
        
        /// <remarks/>
        public event GetERPInvNo_SICCompletedEventHandler GetERPInvNo_SICCompleted;
        
        /// <remarks/>
        public event Exe_FGDToERPCompletedEventHandler Exe_FGDToERPCompleted;
        
        /// <remarks/>
        public event Exe_ScrapToERPCompletedEventHandler Exe_ScrapToERPCompleted;
        
        /// <remarks/>
        public event Exe_WIPToERP_SICCompletedEventHandler Exe_WIPToERP_SICCompleted;
        
        /// <remarks/>
        public event Exe_Cassette_CICompletedEventHandler Exe_Cassette_CICompleted;
        
        /// <remarks/>
        public event Exe_Cassette_COCompletedEventHandler Exe_Cassette_COCompleted;
        
        /// <remarks/>
        public event LoadCassetteJoinLotStateCompletedEventHandler LoadCassetteJoinLotStateCompleted;
        
        /// <remarks/>
        public event LoadRecipeByLotCompletedEventHandler LoadRecipeByLotCompleted;
        
        /// <remarks/>
        public event LoadCassetteStateCompletedEventHandler LoadCassetteStateCompleted;
        
        /// <remarks/>
        public event LoadComponentState_MOCompletedEventHandler LoadComponentState_MOCompleted;
        
        /// <remarks/>
        public event LoadComponentJoinLotStateCompletedEventHandler LoadComponentJoinLotStateCompleted;
        
        /// <remarks/>
        public event LoadCont_MaterialLotComp_JoinLogCompletedEventHandler LoadCont_MaterialLotComp_JoinLogCompleted;
        
        /// <remarks/>
        public event Exe_TAN_COCompletedEventHandler Exe_TAN_COCompleted;
        
        /// <remarks/>
        public event Exe_SemiProductCompletedEventHandler Exe_SemiProductCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_FirstCompletedEventHandler Exe_CheckOut_FirstCompleted;
        
        /// <remarks/>
        public event SaveFileCompletedEventHandler SaveFileCompleted;
        
        /// <remarks/>
        public event ReRun_SemiCompletedEventHandler ReRun_SemiCompleted;
        
        /// <remarks/>
        public event ReRun_FailBinCompletedEventHandler ReRun_FailBinCompleted;
        
        /// <remarks/>
        public event ReRun_ScrapCompletedEventHandler ReRun_ScrapCompleted;
        
        /// <remarks/>
        public event LoadWIP_FailBinJoinLotBasisCompletedEventHandler LoadWIP_FailBinJoinLotBasisCompleted;
        
        /// <remarks/>
        public event LoadWIP_ScrapJoinLotBasisCompletedEventHandler LoadWIP_ScrapJoinLotBasisCompleted;
        
        /// <remarks/>
        public event AddLotBasis_TapeCompletedEventHandler AddLotBasis_TapeCompleted;
        
        /// <remarks/>
        public event DelLotBasis_TapeCompletedEventHandler DelLotBasis_TapeCompleted;
        
        /// <remarks/>
        public event ReleaseLotBasis_TapeCompletedEventHandler ReleaseLotBasis_TapeCompleted;
        
        /// <remarks/>
        public event LoadLotBasisJoinPIDeatilCompletedEventHandler LoadLotBasisJoinPIDeatilCompleted;
        
        /// <remarks/>
        public event Exe_Tape_CICompletedEventHandler Exe_Tape_CICompleted;
        
        /// <remarks/>
        public event Exe_Tape_COCompletedEventHandler Exe_Tape_COCompleted;
        
        /// <remarks/>
        public event Exe_Tape_ComponentSplitCompletedEventHandler Exe_Tape_ComponentSplitCompleted;
        
        /// <remarks/>
        public event LoadDefrostLogCompletedEventHandler LoadDefrostLogCompleted;
        
        /// <remarks/>
        public event AddDefrostLogCompletedEventHandler AddDefrostLogCompleted;
        
        /// <remarks/>
        public event EditDefrostLogCompletedEventHandler EditDefrostLogCompleted;
        
        /// <remarks/>
        public event DelDefrostLogCompletedEventHandler DelDefrostLogCompleted;
        
        /// <remarks/>
        public event LoadDefrostEquipmentCompletedEventHandler LoadDefrostEquipmentCompleted;
        
        /// <remarks/>
        public event ExePIDefrostCompletedEventHandler ExePIDefrostCompleted;
        
        /// <remarks/>
        public event Load_TAB_ECNBasisCompletedEventHandler Load_TAB_ECNBasisCompleted;
        
        /// <remarks/>
        public event Load_TAB_ECNBasisJoinDetailCompletedEventHandler Load_TAB_ECNBasisJoinDetailCompleted;
        
        /// <remarks/>
        public event Del_TAB_ECNBasisCompletedEventHandler Del_TAB_ECNBasisCompleted;
        
        /// <remarks/>
        public event Add_TAB_ECNBasisWDetailCompletedEventHandler Add_TAB_ECNBasisWDetailCompleted;
        
        /// <remarks/>
        public event Edit_TAB_ECNBasisWDetailCompletedEventHandler Edit_TAB_ECNBasisWDetailCompleted;
        
        /// <remarks/>
        public event UPD_TAB_ECNConfirmCompletedEventHandler UPD_TAB_ECNConfirmCompleted;
        
        /// <remarks/>
        public event UPD_TAB_ECNReleaseCompletedEventHandler UPD_TAB_ECNReleaseCompleted;
        
        /// <remarks/>
        public event Del_TAB_ECNLotCompletedEventHandler Del_TAB_ECNLotCompleted;
        
        /// <remarks/>
        public event Load_TAB_LotBasisJoinStateCompletedEventHandler Load_TAB_LotBasisJoinStateCompleted;
        
        /// <remarks/>
        public event Load_TAB_PackingBasisCompletedEventHandler Load_TAB_PackingBasisCompleted;
        
        /// <remarks/>
        public event Load_TAB_PackingDetailCompletedEventHandler Load_TAB_PackingDetailCompleted;
        
        /// <remarks/>
        public event LoadLotsofSamePIIDCompletedEventHandler LoadLotsofSamePIIDCompleted;
        
        /// <remarks/>
        public event GetAccessoryLifeCountCompletedEventHandler GetAccessoryLifeCountCompleted;
        
        /// <remarks/>
        public event AddLotBasis_UnitCompletedEventHandler AddLotBasis_UnitCompleted;
        
        /// <remarks/>
        public event AddLotBasis_BatchCompletedEventHandler AddLotBasis_BatchCompleted;
        
        /// <remarks/>
        public event Exe_Unit_AbnormalCollectCompletedEventHandler Exe_Unit_AbnormalCollectCompleted;
        
        /// <remarks/>
        public event Exe_Unit_COMaterialCompletedEventHandler Exe_Unit_COMaterialCompleted;
        
        /// <remarks/>
        public event Exe_Unit_BatchCICompletedEventHandler Exe_Unit_BatchCICompleted;
        
        /// <remarks/>
        public event Exe_Unit_QCBankCompletedEventHandler Exe_Unit_QCBankCompleted;
        
        /// <remarks/>
        public event Exe_Unit_BatchScrapCompletedEventHandler Exe_Unit_BatchScrapCompleted;
        
        /// <remarks/>
        public event Exe_Unit_CIRepairCompletedEventHandler Exe_Unit_CIRepairCompleted;
        
        /// <remarks/>
        public event Exe_Unit_CORepairCompletedEventHandler Exe_Unit_CORepairCompleted;
        
        /// <remarks/>
        public event InitBoxNoCompletedEventHandler InitBoxNoCompleted;
        
        /// <remarks/>
        public event Load_Unit_Cont_CICompletedEventHandler Load_Unit_Cont_CICompleted;
        
        /// <remarks/>
        public event Load_Unit_QCBankRejectLotCompletedEventHandler Load_Unit_QCBankRejectLotCompleted;
        
        /// <remarks/>
        public event Load_Unit_QCBankCompletedEventHandler Load_Unit_QCBankCompleted;
        
        /// <remarks/>
        public event Load_Unit_QCBankDetailCompletedEventHandler Load_Unit_QCBankDetailCompleted;
        
        /// <remarks/>
        public event CloseLotCompletedEventHandler CloseLotCompleted;
        
        /// <remarks/>
        public event Exe_LotQtyAdjustCompletedEventHandler Exe_LotQtyAdjustCompleted;
        
        /// <remarks/>
        public event Exe_LotQtyAdjust_BinCompletedEventHandler Exe_LotQtyAdjust_BinCompleted;
        
        /// <remarks/>
        public event Exe_LotQtyAdjust_CompCompletedEventHandler Exe_LotQtyAdjust_CompCompleted;
        
        /// <remarks/>
        public event Exe_ERF_QtyAdjustLogCompletedEventHandler Exe_ERF_QtyAdjustLogCompleted;
        
        /// <remarks/>
        public event LoadERF_AttachFileCompletedEventHandler LoadERF_AttachFileCompleted;
        
        /// <remarks/>
        public event AddERF_AttachFileCompletedEventHandler AddERF_AttachFileCompleted;
        
        /// <remarks/>
        public event DelERF_AttachFileCompletedEventHandler DelERF_AttachFileCompleted;
        
        /// <remarks/>
        public event GetERF_AttachFileCompletedEventHandler GetERF_AttachFileCompleted;
        
        /// <remarks/>
        public event LoadCont_Material_JoinLotCompletedEventHandler LoadCont_Material_JoinLotCompleted;
        
        /// <remarks/>
        public event LoadCont_ErrorCompletedEventHandler LoadCont_ErrorCompleted;
        
        /// <remarks/>
        public event LoadCont_Error_JoinQCReasonCompletedEventHandler LoadCont_Error_JoinQCReasonCompleted;
        
        /// <remarks/>
        public event LoadSplitContentCompletedEventHandler LoadSplitContentCompleted;
        
        /// <remarks/>
        public event LoadMergeContentCompletedEventHandler LoadMergeContentCompleted;
        
        /// <remarks/>
        public event LoadCont_DataCompletedEventHandler LoadCont_DataCompleted;
        
        /// <remarks/>
        public event LoadCont_ComponentAttribCompletedEventHandler LoadCont_ComponentAttribCompleted;
        
        /// <remarks/>
        public event LoadPackingListBasisCompletedEventHandler LoadPackingListBasisCompleted;
        
        /// <remarks/>
        public event LoadPackingList_GeneralCompletedEventHandler LoadPackingList_GeneralCompleted;
        
        /// <remarks/>
        public event LoadPackingList_ComponentCompletedEventHandler LoadPackingList_ComponentCompleted;
        
        /// <remarks/>
        public event LoadPack_CompQtyByLotCompletedEventHandler LoadPack_CompQtyByLotCompleted;
        
        /// <remarks/>
        public event LoadPack_BinQtyByLotCompletedEventHandler LoadPack_BinQtyByLotCompleted;
        
        /// <remarks/>
        public event LoadPackingList_BinCompletedEventHandler LoadPackingList_BinCompleted;
        
        /// <remarks/>
        public event DelPackingListBasisCompletedEventHandler DelPackingListBasisCompleted;
        
        /// <remarks/>
        public event UpdPackingList_ConfirmCompletedEventHandler UpdPackingList_ConfirmCompleted;
        
        /// <remarks/>
        public event UpdAddPackingListCompletedEventHandler UpdAddPackingListCompleted;
        
        /// <remarks/>
        public event UpdEditPackingListCompletedEventHandler UpdEditPackingListCompleted;
        
        /// <remarks/>
        public event LoadShippingBasisCompletedEventHandler LoadShippingBasisCompleted;
        
        /// <remarks/>
        public event LoadShippingPackingListJoinBasisCompletedEventHandler LoadShippingPackingListJoinBasisCompleted;
        
        /// <remarks/>
        public event DelShippingBasisCompletedEventHandler DelShippingBasisCompleted;
        
        /// <remarks/>
        public event Exe_ShippingCompletedEventHandler Exe_ShippingCompleted;
        
        /// <remarks/>
        public event LoadReturnBasisCompletedEventHandler LoadReturnBasisCompleted;
        
        /// <remarks/>
        public event LoadReturnComponentJoinBasisCompletedEventHandler LoadReturnComponentJoinBasisCompleted;
        
        /// <remarks/>
        public event DelReturnBasisCompletedEventHandler DelReturnBasisCompleted;
        
        /// <remarks/>
        public event UpdReturnCompletedEventHandler UpdReturnCompleted;
        
        /// <remarks/>
        public event Exe_InvIncomingReleaseCompletedEventHandler Exe_InvIncomingReleaseCompleted;
        
        /// <remarks/>
        public event UpdShippingCompletedEventHandler UpdShippingCompleted;
        
        /// <remarks/>
        public event LoadAbnormalStateCompletedEventHandler LoadAbnormalStateCompleted;
        
        /// <remarks/>
        public event LoadAbnormalStateJoinBasisCompletedEventHandler LoadAbnormalStateJoinBasisCompleted;
        
        /// <remarks/>
        public event LoadPackingBasisCompletedEventHandler LoadPackingBasisCompleted;
        
        /// <remarks/>
        public event LoadPackingBoxDetailCompletedEventHandler LoadPackingBoxDetailCompleted;
        
        /// <remarks/>
        public event UpdIPQCCompletedEventHandler UpdIPQCCompleted;
        
        /// <remarks/>
        public event LoadAvailableMaskCompletedEventHandler LoadAvailableMaskCompleted;
        
        /// <remarks/>
        public event LoadRecipeContentCompletedEventHandler LoadRecipeContentCompleted;
        
        /// <remarks/>
        public event DelReleasedLotCompletedEventHandler DelReleasedLotCompleted;
        
        /// <remarks/>
        public event LoadAvailableCarrierLotCompletedEventHandler LoadAvailableCarrierLotCompleted;
        
        /// <remarks/>
        public event Exe_AttribFormulaCompletedEventHandler Exe_AttribFormulaCompleted;
        
        /// <remarks/>
        public event LoadComponentPropertyCompletedEventHandler LoadComponentPropertyCompleted;
        
        /// <remarks/>
        public event LoadComponentPropertyByLotNoCompletedEventHandler LoadComponentPropertyByLotNoCompleted;
        
        /// <remarks/>
        public event GetLotPropertyValueCompletedEventHandler GetLotPropertyValueCompleted;
        
        /// <remarks/>
        public event LoadOPGroupStateCompletedEventHandler LoadOPGroupStateCompleted;
        
        /// <remarks/>
        public event GetBaseLotNoCompletedEventHandler GetBaseLotNoCompleted;
        
        /// <remarks/>
        public event GetLotNoCompletedEventHandler GetLotNoCompleted;
        
        /// <remarks/>
        public event GetMaxLotNoCompletedEventHandler GetMaxLotNoCompleted;
        
        /// <remarks/>
        public event GetERFNoCompletedEventHandler GetERFNoCompleted;
        
        /// <remarks/>
        public event GetShippingLotNoCompletedEventHandler GetShippingLotNoCompleted;
        
        /// <remarks/>
        public event GetRcvNoCompletedEventHandler GetRcvNoCompleted;
        
        /// <remarks/>
        public event GetCustomerLotNoCompletedEventHandler GetCustomerLotNoCompleted;
        
        /// <remarks/>
        public event GetLotOPDescriptionCompletedEventHandler GetLotOPDescriptionCompleted;
        
        /// <remarks/>
        public event LoadRunCardDataCompletedEventHandler LoadRunCardDataCompleted;
        
        /// <remarks/>
        public event LoadRunCardLogCompletedEventHandler LoadRunCardLogCompleted;
        
        /// <remarks/>
        public event LoadRunCardHeadDataCompletedEventHandler LoadRunCardHeadDataCompleted;
        
        /// <remarks/>
        public event LoadPRDAttributionCompletedEventHandler LoadPRDAttributionCompleted;
        
        /// <remarks/>
        public event LoadRunCardData_DeltaCompletedEventHandler LoadRunCardData_DeltaCompleted;
        
        /// <remarks/>
        public event Exe_Wait_SetCompletedEventHandler Exe_Wait_SetCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotReleaseCompletedEventHandler Exe_Wait_LotReleaseCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotMergeCompletedEventHandler Exe_Wait_LotMergeCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotMerge_BinCompletedEventHandler Exe_Wait_LotMerge_BinCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotMerge_ComponentCompletedEventHandler Exe_Wait_LotMerge_ComponentCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotSplitCompletedEventHandler Exe_Wait_LotSplitCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotSplit_BinCompletedEventHandler Exe_Wait_LotSplit_BinCompleted;
        
        /// <remarks/>
        public event Exe_Wait_LotSplit_ComponentCompletedEventHandler Exe_Wait_LotSplit_ComponentCompleted;
        
        /// <remarks/>
        public event LoadWaitBasisCompletedEventHandler LoadWaitBasisCompleted;
        
        /// <remarks/>
        public event LoadWaitLotDispositionCompletedEventHandler LoadWaitLotDispositionCompleted;
        
        /// <remarks/>
        public event LoadWaitBasisJoinLotStateCompletedEventHandler LoadWaitBasisJoinLotStateCompleted;
        
        /// <remarks/>
        public event LoadRODetailCompletedEventHandler LoadRODetailCompleted;
        
        /// <remarks/>
        public event LoadMOBasisCompletedEventHandler LoadMOBasisCompleted;
        
        /// <remarks/>
        public event LoadROJoinMODataCompletedEventHandler LoadROJoinMODataCompleted;
        
        /// <remarks/>
        public event AddLotTapeMapDateCompletedEventHandler AddLotTapeMapDateCompleted;
        
        /// <remarks/>
        public event EditLotTapeMapDateCompletedEventHandler EditLotTapeMapDateCompleted;
        
        /// <remarks/>
        public event DelLotTapeMapDateCompletedEventHandler DelLotTapeMapDateCompleted;
        
        /// <remarks/>
        public event LoadLotTapeMapDateCompletedEventHandler LoadLotTapeMapDateCompleted;
        
        /// <remarks/>
        public event LoadPNGroupCompletedEventHandler LoadPNGroupCompleted;
        
        /// <remarks/>
        public event AddPNGroupCompletedEventHandler AddPNGroupCompleted;
        
        /// <remarks/>
        public event UpdPNGroupCompletedEventHandler UpdPNGroupCompleted;
        
        /// <remarks/>
        public event Exe_RunInCompletedEventHandler Exe_RunInCompleted;
        
        /// <remarks/>
        public event Exe_RunFirstQCCompletedEventHandler Exe_RunFirstQCCompleted;
        
        /// <remarks/>
        public event LoadPNGroupJoinLotStateCompletedEventHandler LoadPNGroupJoinLotStateCompleted;
        
        /// <remarks/>
        public event LoadTemp_EquipmentAcclifeCompletedEventHandler LoadTemp_EquipmentAcclifeCompleted;
        
        /// <remarks/>
        public event LoadTemp_EquipmentLotCompletedEventHandler LoadTemp_EquipmentLotCompleted;
        
        /// <remarks/>
        public event LoadBatchLotStateCompletedEventHandler LoadBatchLotStateCompleted;
        
        /// <remarks/>
        public event LoadBatchComponentStateCompletedEventHandler LoadBatchComponentStateCompleted;
        
        /// <remarks/>
        public event Exe_BatchCheckIn_FABCompletedEventHandler Exe_BatchCheckIn_FABCompleted;
        
        /// <remarks/>
        public event Exe_BatchCheckOut_FABCompletedEventHandler Exe_BatchCheckOut_FABCompleted;
        
        /// <remarks/>
        public event SetEQPETHValueCompletedEventHandler SetEQPETHValueCompleted;
        
        /// <remarks/>
        public event EditComponentStateCompletedEventHandler EditComponentStateCompleted;
        
        /// <remarks/>
        public event DelComponentStateCompletedEventHandler DelComponentStateCompleted;
        
        /// <remarks/>
        public event LoadLotPropertyCompletedEventHandler LoadLotPropertyCompleted;
        
        /// <remarks/>
        public event AddLotPropertyCompletedEventHandler AddLotPropertyCompleted;
        
        /// <remarks/>
        public event EditLotPropertyCompletedEventHandler EditLotPropertyCompleted;
        
        /// <remarks/>
        public event DelLotPropertyCompletedEventHandler DelLotPropertyCompleted;
        
        /// <remarks/>
        public event LoadUnitTransferQtyCompletedEventHandler LoadUnitTransferQtyCompleted;
        
        /// <remarks/>
        public event LoadReverseHistoryCompletedEventHandler LoadReverseHistoryCompleted;
        
        /// <remarks/>
        public event ExecuteReverseCompletedEventHandler ExecuteReverseCompleted;
        
        /// <remarks/>
        public event LoadTempQCItemJoinBasisCompletedEventHandler LoadTempQCItemJoinBasisCompleted;
        
        /// <remarks/>
        public event LoadECNBasisCompletedEventHandler LoadECNBasisCompleted;
        
        /// <remarks/>
        public event EditECNBasisCompletedEventHandler EditECNBasisCompleted;
        
        /// <remarks/>
        public event DelECNBasisCompletedEventHandler DelECNBasisCompleted;
        
        /// <remarks/>
        public event ApproveECNBasisCompletedEventHandler ApproveECNBasisCompleted;
        
        /// <remarks/>
        public event UpdECNCompletedEventHandler UpdECNCompleted;
        
        /// <remarks/>
        public event EndECNCompletedEventHandler EndECNCompleted;
        
        /// <remarks/>
        public event UpdECN_V2CompletedEventHandler UpdECN_V2Completed;
        
        /// <remarks/>
        public event UpdECNDisableCompletedEventHandler UpdECNDisableCompleted;
        
        /// <remarks/>
        public event UpdECNConfirmCompletedEventHandler UpdECNConfirmCompleted;
        
        /// <remarks/>
        public event LoadECNAttribCompletedEventHandler LoadECNAttribCompleted;
        
        /// <remarks/>
        public event AddECNAttribCompletedEventHandler AddECNAttribCompleted;
        
        /// <remarks/>
        public event EditECNAttribCompletedEventHandler EditECNAttribCompleted;
        
        /// <remarks/>
        public event DelECNAttribCompletedEventHandler DelECNAttribCompleted;
        
        /// <remarks/>
        public event LoadLotECNAttribCompletedEventHandler LoadLotECNAttribCompleted;
        
        /// <remarks/>
        public event AddLotECNAttribCompletedEventHandler AddLotECNAttribCompleted;
        
        /// <remarks/>
        public event EditLotECNAttribCompletedEventHandler EditLotECNAttribCompleted;
        
        /// <remarks/>
        public event DelLotECNAttribCompletedEventHandler DelLotECNAttribCompleted;
        
        /// <remarks/>
        public event LoadECNLogCompletedEventHandler LoadECNLogCompleted;
        
        /// <remarks/>
        public event AddECNLogCompletedEventHandler AddECNLogCompleted;
        
        /// <remarks/>
        public event EditECNLogCompletedEventHandler EditECNLogCompleted;
        
        /// <remarks/>
        public event DelECNLogCompletedEventHandler DelECNLogCompleted;
        
        /// <remarks/>
        public event LoadECNAttribLogCompletedEventHandler LoadECNAttribLogCompleted;
        
        /// <remarks/>
        public event AddECNAttribLogCompletedEventHandler AddECNAttribLogCompleted;
        
        /// <remarks/>
        public event EditECNAttribLogCompletedEventHandler EditECNAttribLogCompleted;
        
        /// <remarks/>
        public event DelECNAttribLogCompletedEventHandler DelECNAttribLogCompleted;
        
        /// <remarks/>
        public event LoadECNLotBasisCompletedEventHandler LoadECNLotBasisCompleted;
        
        /// <remarks/>
        public event LoadECNLotBasisLotDataCompletedEventHandler LoadECNLotBasisLotDataCompleted;
        
        /// <remarks/>
        public event AddECNLotBasisCompletedEventHandler AddECNLotBasisCompleted;
        
        /// <remarks/>
        public event AddECNLotBasisLogCompletedEventHandler AddECNLotBasisLogCompleted;
        
        /// <remarks/>
        public event DelECNLotBasisCompletedEventHandler DelECNLotBasisCompleted;
        
        /// <remarks/>
        public event LoadECNLotLogCompletedEventHandler LoadECNLotLogCompleted;
        
        /// <remarks/>
        public event AddECNLotLogCompletedEventHandler AddECNLotLogCompleted;
        
        /// <remarks/>
        public event DelECNLotLogCompletedEventHandler DelECNLotLogCompleted;
        
        /// <remarks/>
        public event LoadGoodBinStateCompletedEventHandler LoadGoodBinStateCompleted;
        
        /// <remarks/>
        public event LoadLotNotExecuteOPCompletedEventHandler LoadLotNotExecuteOPCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeCompletedEventHandler LoadAutoMergeCompleted;
        
        /// <remarks/>
        public event ChkAutoMergeCompletedEventHandler ChkAutoMergeCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeByFromLotCompletedEventHandler LoadAutoMergeByFromLotCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeJoinStateByFromLotCompletedEventHandler LoadAutoMergeJoinStateByFromLotCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeJoinStateByToLotCompletedEventHandler LoadAutoMergeJoinStateByToLotCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeJoinGoodBinByFromLotCompletedEventHandler LoadAutoMergeJoinGoodBinByFromLotCompleted;
        
        /// <remarks/>
        public event LoadAutoMergeJoinGoodBinByToLotCompletedEventHandler LoadAutoMergeJoinGoodBinByToLotCompleted;
        
        /// <remarks/>
        public event LoadLotProperty_ReciveCompletedEventHandler LoadLotProperty_ReciveCompleted;
        
        /// <remarks/>
        public event AddLotProperty_ReciveCompletedEventHandler AddLotProperty_ReciveCompleted;
        
        /// <remarks/>
        public event EditLotProperty_ReciveCompletedEventHandler EditLotProperty_ReciveCompleted;
        
        /// <remarks/>
        public event DelLotProperty_ReciveCompletedEventHandler DelLotProperty_ReciveCompleted;
        
        /// <remarks/>
        public event LoadERFBasisCompletedEventHandler LoadERFBasisCompleted;
        
        /// <remarks/>
        public event LoadERFBasisJoinLotBasisCompletedEventHandler LoadERFBasisJoinLotBasisCompleted;
        
        /// <remarks/>
        public event LoadERFBasisJoinLotStateCompletedEventHandler LoadERFBasisJoinLotStateCompleted;
        
        /// <remarks/>
        public event LoadERFDispositionCompletedEventHandler LoadERFDispositionCompleted;
        
        /// <remarks/>
        public event LoadERFHoldReasonDispCompletedEventHandler LoadERFHoldReasonDispCompleted;
        
        /// <remarks/>
        public event LoadERFHoldReasonCompletedEventHandler LoadERFHoldReasonCompleted;
        
        /// <remarks/>
        public event LoadERFLotDispositionCompletedEventHandler LoadERFLotDispositionCompleted;
        
        /// <remarks/>
        public event LoadFutureWaitCompletedEventHandler LoadFutureWaitCompleted;
        
        /// <remarks/>
        public event Exe_FutureWait_SetCompletedEventHandler Exe_FutureWait_SetCompleted;
        
        /// <remarks/>
        public event DelFutureWaitCompletedEventHandler DelFutureWaitCompleted;
        
        /// <remarks/>
        public event ChkLotStampCompletedEventHandler ChkLotStampCompleted;
        
        /// <remarks/>
        public event ChkWIPEQPCcnsumeCompletedEventHandler ChkWIPEQPCcnsumeCompleted;
        
        /// <remarks/>
        public event LoadFutureHoldCompletedEventHandler LoadFutureHoldCompleted;
        
        /// <remarks/>
        public event LoadFutureHoldReasonCompletedEventHandler LoadFutureHoldReasonCompleted;
        
        /// <remarks/>
        public event LoadFutureHoldReasonJoinBasisCompletedEventHandler LoadFutureHoldReasonJoinBasisCompleted;
        
        /// <remarks/>
        public event Exe_FutureHold_SetCompletedEventHandler Exe_FutureHold_SetCompleted;
        
        /// <remarks/>
        public event DelFutureHoldCompletedEventHandler DelFutureHoldCompleted;
        
        /// <remarks/>
        public event LoadLotOPAreaCompletedEventHandler LoadLotOPAreaCompleted;
        
        /// <remarks/>
        public event AddLotOPAreaCompletedEventHandler AddLotOPAreaCompleted;
        
        /// <remarks/>
        public event EditLotOPAreaCompletedEventHandler EditLotOPAreaCompleted;
        
        /// <remarks/>
        public event DelLotOPAreaCompletedEventHandler DelLotOPAreaCompleted;
        
        /// <remarks/>
        public event LoadCont_Material_JoinLogCompletedEventHandler LoadCont_Material_JoinLogCompleted;
        
        /// <remarks/>
        public event LoadCont_Abnormal_JoinLogCompletedEventHandler LoadCont_Abnormal_JoinLogCompleted;
        
        /// <remarks/>
        public event LoadCont_AbnormalRepairCompletedEventHandler LoadCont_AbnormalRepairCompleted;
        
        /// <remarks/>
        public event LoadCont_AttribCompletedEventHandler LoadCont_AttribCompleted;
        
        /// <remarks/>
        public event LoadCont_LotRecordCompletedEventHandler LoadCont_LotRecordCompleted;
        
        /// <remarks/>
        public event LoadCont_EmployeeCompletedEventHandler LoadCont_EmployeeCompleted;
        
        /// <remarks/>
        public event LoadCont_EquipmentCompletedEventHandler LoadCont_EquipmentCompleted;
        
        /// <remarks/>
        public event LoadCont_AccessoryCompletedEventHandler LoadCont_AccessoryCompleted;
        
        /// <remarks/>
        public event Exe_LotMergeCompletedEventHandler Exe_LotMergeCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotMergeCompletedEventHandler Exe_Manual_LotMergeCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotMerge_BinCompletedEventHandler Exe_Manual_LotMerge_BinCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotMerge_ComponentCompletedEventHandler Exe_Manual_LotMerge_ComponentCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotMerge_CarrierCompletedEventHandler Exe_Manual_LotMerge_CarrierCompleted;
        
        /// <remarks/>
        public event Exe_ERF_CreateCompletedEventHandler Exe_ERF_CreateCompleted;
        
        /// <remarks/>
        public event Exe_ERF_DispositionCompletedEventHandler Exe_ERF_DispositionCompleted;
        
        /// <remarks/>
        public event Exe_ERF_BackToERFDispositionCompletedEventHandler Exe_ERF_BackToERFDispositionCompleted;
        
        /// <remarks/>
        public event Exe_ERF_AbortCompletedEventHandler Exe_ERF_AbortCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotReleaseCompletedEventHandler Exe_ERF_LotReleaseCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotSplitCompletedEventHandler Exe_ERF_LotSplitCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotSplit_BinCompletedEventHandler Exe_ERF_LotSplit_BinCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotSplit_ComponentCompletedEventHandler Exe_ERF_LotSplit_ComponentCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotMergeCompletedEventHandler Exe_ERF_LotMergeCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotMerge_BinCompletedEventHandler Exe_ERF_LotMerge_BinCompleted;
        
        /// <remarks/>
        public event Exe_ERF_LotMerge_ComponentCompletedEventHandler Exe_ERF_LotMerge_ComponentCompleted;
        
        /// <remarks/>
        public event SendEmailToGroupCompletedEventHandler SendEmailToGroupCompleted;
        
        /// <remarks/>
        public event SendEmailAndAttachFileToGroupCompletedEventHandler SendEmailAndAttachFileToGroupCompleted;
        
        /// <remarks/>
        public event SendEmailToERFGroupCompletedEventHandler SendEmailToERFGroupCompleted;
        
        /// <remarks/>
        public event SendEmailToERFGroup_NoneERFCompletedEventHandler SendEmailToERFGroup_NoneERFCompleted;
        
        /// <remarks/>
        public event Chk_ERF_LotReleaseCompletedEventHandler Chk_ERF_LotReleaseCompleted;
        
        /// <remarks/>
        public event Exe_PackingCompletedEventHandler Exe_PackingCompleted;
        
        /// <remarks/>
        public event Exe_ProductVersionChangeCompletedEventHandler Exe_ProductVersionChangeCompleted;
        
        /// <remarks/>
        public event Exe_LotOPAreaChangeCompletedEventHandler Exe_LotOPAreaChangeCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_MaterialCompletedEventHandler Exe_CheckOut_MaterialCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_AutoSplitCompletedEventHandler Exe_CheckOut_AutoSplitCompleted;
        
        /// <remarks/>
        public event Exe_FinalQCCompletedEventHandler Exe_FinalQCCompleted;
        
        /// <remarks/>
        public event Exe_RepairCompletedEventHandler Exe_RepairCompleted;
        
        /// <remarks/>
        public event Exe_CreateLotByBomCompletedEventHandler Exe_CreateLotByBomCompleted;
        
        /// <remarks/>
        public event Exe_AbnormalCollectCompletedEventHandler Exe_AbnormalCollectCompleted;
        
        /// <remarks/>
        public event Exe_BatchCI_NORCompletedEventHandler Exe_BatchCI_NORCompleted;
        
        /// <remarks/>
        public event Exe_Repair_AssemblyCompletedEventHandler Exe_Repair_AssemblyCompleted;
        
        /// <remarks/>
        public event Exe_BatchCO_UnitCompletedEventHandler Exe_BatchCO_UnitCompleted;
        
        /// <remarks/>
        public event Exe_BatchCI_UnitCompletedEventHandler Exe_BatchCI_UnitCompleted;
        
        /// <remarks/>
        public event LoadLotProcessCompletedEventHandler LoadLotProcessCompleted;
        
        /// <remarks/>
        public event AddLotProcessCompletedEventHandler AddLotProcessCompleted;
        
        /// <remarks/>
        public event EditLotProcessCompletedEventHandler EditLotProcessCompleted;
        
        /// <remarks/>
        public event DelLotProcessCompletedEventHandler DelLotProcessCompleted;
        
        /// <remarks/>
        public event GetNextOPNodeCompletedEventHandler GetNextOPNodeCompleted;
        
        /// <remarks/>
        public event LoadNextOPNodeCompletedEventHandler LoadNextOPNodeCompleted;
        
        /// <remarks/>
        public event LoadLotLogCompletedEventHandler LoadLotLogCompleted;
        
        /// <remarks/>
        public event LoadLotLogJoinModuleLogCompletedEventHandler LoadLotLogJoinModuleLogCompleted;
        
        /// <remarks/>
        public event LoadLotLog_ReportCompletedEventHandler LoadLotLog_ReportCompleted;
        
        /// <remarks/>
        public event LoadLotLogReport_ModifyCompletedEventHandler LoadLotLogReport_ModifyCompleted;
        
        /// <remarks/>
        public event LoadLotLog_ReportJoinLotBasisCompletedEventHandler LoadLotLog_ReportJoinLotBasisCompleted;
        
        /// <remarks/>
        public event LoadLotPSLogCompletedEventHandler LoadLotPSLogCompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_RawCompletedEventHandler LoadWIPInventory_RawCompleted;
        
        /// <remarks/>
        public event AddWIPInventory_RawCompletedEventHandler AddWIPInventory_RawCompleted;
        
        /// <remarks/>
        public event EditWIPInventory_RawCompletedEventHandler EditWIPInventory_RawCompleted;
        
        /// <remarks/>
        public event DelWIPInventory_RawCompletedEventHandler DelWIPInventory_RawCompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_SEMICompletedEventHandler LoadWIPInventory_SEMICompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_ComponentCompletedEventHandler LoadWIPInventory_ComponentCompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_SEMIJoinLotBasisCompletedEventHandler LoadWIPInventory_SEMIJoinLotBasisCompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventHandler LoadWIPInventory_SEMIJoinLotBasisSplitCompleted;
        
        /// <remarks/>
        public event LoadWIPInventory_SEMIbyLotCompletedEventHandler LoadWIPInventory_SEMIbyLotCompleted;
        
        /// <remarks/>
        public event AddWIPInventory_SemiCompletedEventHandler AddWIPInventory_SemiCompleted;
        
        /// <remarks/>
        public event EditWIPInventory_SemiCompletedEventHandler EditWIPInventory_SemiCompleted;
        
        /// <remarks/>
        public event EditWIPInventory_ScrapCompletedEventHandler EditWIPInventory_ScrapCompleted;
        
        /// <remarks/>
        public event DelWIPInventory_SemiCompletedEventHandler DelWIPInventory_SemiCompleted;
        
        /// <remarks/>
        public event LoadWIP_ScrapCompletedEventHandler LoadWIP_ScrapCompleted;
        
        /// <remarks/>
        public event DelWIPInventory_ScrapCompletedEventHandler DelWIPInventory_ScrapCompleted;
        
        /// <remarks/>
        public event LoadWIP_ScrapByErrorCompletedEventHandler LoadWIP_ScrapByErrorCompleted;
        
        /// <remarks/>
        public event LoadWIP_ComponentScrapCompletedEventHandler LoadWIP_ComponentScrapCompleted;
        
        /// <remarks/>
        public event DelWIP_ComponentScrapCompletedEventHandler DelWIP_ComponentScrapCompleted;
        
        /// <remarks/>
        public event LoadWIP_FailBinCompletedEventHandler LoadWIP_FailBinCompleted;
        
        /// <remarks/>
        public event LoadSEMIInventoryCompletedEventHandler LoadSEMIInventoryCompleted;
        
        /// <remarks/>
        public event LoadFGDInventoryCompletedEventHandler LoadFGDInventoryCompleted;
        
        /// <remarks/>
        public event Exe_WIPSemiTurnCompletedEventHandler Exe_WIPSemiTurnCompleted;
        
        /// <remarks/>
        public event Exe_SEMITurnCompletedEventHandler Exe_SEMITurnCompleted;
        
        /// <remarks/>
        public event Exe_WIPScrapTurnCompletedEventHandler Exe_WIPScrapTurnCompleted;
        
        /// <remarks/>
        public event Exe_FGDTurnCompletedEventHandler Exe_FGDTurnCompleted;
        
        /// <remarks/>
        public event LoadWIP_IncomingCompletedEventHandler LoadWIP_IncomingCompleted;
        
        /// <remarks/>
        public event LoadFGDInventory_GeneralCompletedEventHandler LoadFGDInventory_GeneralCompleted;
        
        /// <remarks/>
        public event LoadFGDInventory_ComponentCompletedEventHandler LoadFGDInventory_ComponentCompleted;
        
        /// <remarks/>
        public event LoadFGDInventory_BinCompletedEventHandler LoadFGDInventory_BinCompleted;
        
        /// <remarks/>
        public event LoadWIP_OPMaterialStateCompletedEventHandler LoadWIP_OPMaterialStateCompleted;
        
        /// <remarks/>
        public event Exe_TransferBUCompletedEventHandler Exe_TransferBUCompleted;
        
        /// <remarks/>
        public event LoadWIP_Incoming_CompCompletedEventHandler LoadWIP_Incoming_CompCompleted;
        
        /// <remarks/>
        public event LoadSCRInventory_GeneralCompletedEventHandler LoadSCRInventory_GeneralCompleted;
        
        /// <remarks/>
        public event LoadSCRInventory_ComponentCompletedEventHandler LoadSCRInventory_ComponentCompleted;
        
        /// <remarks/>
        public event LoadSCRInventory_BinCompletedEventHandler LoadSCRInventory_BinCompleted;
        
        /// <remarks/>
        public event LoadInventory_ComponentCompletedEventHandler LoadInventory_ComponentCompleted;
        
        /// <remarks/>
        public event TrainsferInventoryCompletedEventHandler TrainsferInventoryCompleted;
        
        /// <remarks/>
        public event LoadComponentStateCompletedEventHandler LoadComponentStateCompleted;
        
        /// <remarks/>
        public event AddComponentStateCompletedEventHandler AddComponentStateCompleted;
        
        /// <remarks/>
        public event HelloMESCompletedEventHandler HelloMESCompleted;
        
        /// <remarks/>
        public event LoadOPMaterialStateCompletedEventHandler LoadOPMaterialStateCompleted;
        
        /// <remarks/>
        public event AddOPMaterialStateCompletedEventHandler AddOPMaterialStateCompleted;
        
        /// <remarks/>
        public event EditOPMaterialStateCompletedEventHandler EditOPMaterialStateCompleted;
        
        /// <remarks/>
        public event DelOPMaterialStateCompletedEventHandler DelOPMaterialStateCompleted;
        
        /// <remarks/>
        public event LoadLotBasisCompletedEventHandler LoadLotBasisCompleted;
        
        /// <remarks/>
        public event AddLotBasisCompletedEventHandler AddLotBasisCompleted;
        
        /// <remarks/>
        public event EditLotBasisCompletedEventHandler EditLotBasisCompleted;
        
        /// <remarks/>
        public event DelLotBasisCompletedEventHandler DelLotBasisCompleted;
        
        /// <remarks/>
        public event SetLotBasisLotStateCompletedEventHandler SetLotBasisLotStateCompleted;
        
        /// <remarks/>
        public event LoadLotBasisDistinctColumnValueCompletedEventHandler LoadLotBasisDistinctColumnValueCompleted;
        
        /// <remarks/>
        public event AddLotBasis_BOMCompletedEventHandler AddLotBasis_BOMCompleted;
        
        /// <remarks/>
        public event LoadLotStateCompletedEventHandler LoadLotStateCompleted;
        
        /// <remarks/>
        public event AddLotStateCompletedEventHandler AddLotStateCompleted;
        
        /// <remarks/>
        public event EditLotStateCompletedEventHandler EditLotStateCompleted;
        
        /// <remarks/>
        public event DelLotStateCompletedEventHandler DelLotStateCompleted;
        
        /// <remarks/>
        public event LoadLotBasisJoinStateCompletedEventHandler LoadLotBasisJoinStateCompleted;
        
        /// <remarks/>
        public event LoadLotBasisJoinStateInLotNosCompletedEventHandler LoadLotBasisJoinStateInLotNosCompleted;
        
        /// <remarks/>
        public event LoadLotStateJoinGoodBinCompletedEventHandler LoadLotStateJoinGoodBinCompleted;
        
        /// <remarks/>
        public event LoadLotStateJoinOPNameCompletedEventHandler LoadLotStateJoinOPNameCompleted;
        
        /// <remarks/>
        public event LoadMaterialLotCompletedEventHandler LoadMaterialLotCompleted;
        
        /// <remarks/>
        public event LoadTemp_LotStateCompletedEventHandler LoadTemp_LotStateCompleted;
        
        /// <remarks/>
        public event LoadTemp_AttribCompletedEventHandler LoadTemp_AttribCompleted;
        
        /// <remarks/>
        public event LoadTemp_AttribJoinBasisCompletedEventHandler LoadTemp_AttribJoinBasisCompleted;
        
        /// <remarks/>
        public event LoadTemp_EquipmentCompletedEventHandler LoadTemp_EquipmentCompleted;
        
        /// <remarks/>
        public event LoadTemp_ComponentAttribCompletedEventHandler LoadTemp_ComponentAttribCompleted;
        
        /// <remarks/>
        public event LoadTemp_QCItemCompletedEventHandler LoadTemp_QCItemCompleted;
        
        /// <remarks/>
        public event LoadTemp_MaterialCompletedEventHandler LoadTemp_MaterialCompleted;
        
        /// <remarks/>
        public event LoadAvailableLotOnEQPCompletedEventHandler LoadAvailableLotOnEQPCompleted;
        
        /// <remarks/>
        public event LoadAvailableCarrierLotOnEQPCompletedEventHandler LoadAvailableCarrierLotOnEQPCompleted;
        
        /// <remarks/>
        public event LoadRecipeCompletedEventHandler LoadRecipeCompleted;
        
        /// <remarks/>
        public event LoadRecipeByLogGroupSerialCompletedEventHandler LoadRecipeByLogGroupSerialCompleted;
        
        /// <remarks/>
        public event LoadLotNoExtraInfoOnEQPCompletedEventHandler LoadLotNoExtraInfoOnEQPCompleted;
        
        /// <remarks/>
        public event LoadAreaEquipmentCompletedEventHandler LoadAreaEquipmentCompleted;
        
        /// <remarks/>
        public event LoadAvailableEquipmentCompletedEventHandler LoadAvailableEquipmentCompleted;
        
        /// <remarks/>
        public event LoadAvailableEquipment_AllCompletedEventHandler LoadAvailableEquipment_AllCompleted;
        
        /// <remarks/>
        public event LoadLotAttributionCompletedEventHandler LoadLotAttributionCompleted;
        
        /// <remarks/>
        public event GetMaskGroupCompletedEventHandler GetMaskGroupCompleted;
        
        /// <remarks/>
        public event GetMultiMaskGroupCompletedEventHandler GetMultiMaskGroupCompleted;
        
        /// <remarks/>
        public event StartLotCompletedEventHandler StartLotCompleted;
        
        /// <remarks/>
        public event TransferLotCompletedEventHandler TransferLotCompleted;
        
        /// <remarks/>
        public event TransferLot_MultiCompletedEventHandler TransferLot_MultiCompleted;
        
        /// <remarks/>
        public event ExecuteLotCompletedEventHandler ExecuteLotCompleted;
        
        /// <remarks/>
        public event ExecuteLot_DTCompletedEventHandler ExecuteLot_DTCompleted;
        
        /// <remarks/>
        public event ChkUserOPCompletedEventHandler ChkUserOPCompleted;
        
        /// <remarks/>
        public event ExecuteBRCompletedEventHandler ExecuteBRCompleted;
        
        /// <remarks/>
        public event TriggerOPCompletedEventHandler TriggerOPCompleted;
        
        /// <remarks/>
        public event ReverseTriggerOPCompletedEventHandler ReverseTriggerOPCompleted;
        
        /// <remarks/>
        public event SetLotStateToOtherGroupOPCompletedEventHandler SetLotStateToOtherGroupOPCompleted;
        
        /// <remarks/>
        public event LoadTempDataCompletedEventHandler LoadTempDataCompleted;
        
        /// <remarks/>
        public event Exe_CheckInCompletedEventHandler Exe_CheckInCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_EQCCompletedEventHandler Exe_CheckIn_EQCCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_RepairCompletedEventHandler Exe_CheckOut_RepairCompleted;
        
        /// <remarks/>
        public event Exe_CheckOutCompletedEventHandler Exe_CheckOutCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_CSQCCompletedEventHandler Exe_CheckOut_CSQCCompleted;
        
        /// <remarks/>
        public event Exe_ComponentCheckOutCompletedEventHandler Exe_ComponentCheckOutCompleted;
        
        /// <remarks/>
        public event Exe_SPCControlCompletedEventHandler Exe_SPCControlCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_CarrierCompletedEventHandler Exe_CheckIn_CarrierCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_CarrierCompletedEventHandler Exe_CheckOut_CarrierCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_OutSourceCompletedEventHandler Exe_CheckIn_OutSourceCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_OutSourceCompletedEventHandler Exe_CheckOut_OutSourceCompleted;
        
        /// <remarks/>
        public event Exe_CheckIn_Cassette_PKGCompletedEventHandler Exe_CheckIn_Cassette_PKGCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_Cassette_PKGCompletedEventHandler Exe_CheckOut_Cassette_PKGCompleted;
        
        /// <remarks/>
        public event ChkMaterialStorageCompletedEventHandler ChkMaterialStorageCompleted;
        
        /// <remarks/>
        public event ChkControlRuleCompletedEventHandler ChkControlRuleCompleted;
        
        /// <remarks/>
        public event ChkControlRule_ComponentCompletedEventHandler ChkControlRule_ComponentCompleted;
        
        /// <remarks/>
        public event EditLotLogCompletedEventHandler EditLotLogCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotSplitCompletedEventHandler Exe_Manual_LotSplitCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotSplit_ComponentCompletedEventHandler Exe_Manual_LotSplit_ComponentCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotSplit_CarrierCompletedEventHandler Exe_Manual_LotSplit_CarrierCompleted;
        
        /// <remarks/>
        public event GetSerialNoCompletedEventHandler GetSerialNoCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_FTCompletedEventHandler Exe_CheckOut_FTCompleted;
        
        /// <remarks/>
        public event DelContentRTBinCompletedEventHandler DelContentRTBinCompleted;
        
        /// <remarks/>
        public event LoadCont_RTBinDataCompletedEventHandler LoadCont_RTBinDataCompleted;
        
        /// <remarks/>
        public event LoadCont_BinCompletedEventHandler LoadCont_BinCompleted;
        
        /// <remarks/>
        public event Save_RT_DataCompletedEventHandler Save_RT_DataCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_EQCCompletedEventHandler Exe_CheckOut_EQCCompleted;
        
        /// <remarks/>
        public event Exe_CheckOut_EQC_UnChangeBinStateCompletedEventHandler Exe_CheckOut_EQC_UnChangeBinStateCompleted;
        
        /// <remarks/>
        public event Exe_Manual_LotSplit_BinCompletedEventHandler Exe_Manual_LotSplit_BinCompleted;
        
        /// <remarks/>
        public event Exe_LotSplit_BinCompletedEventHandler Exe_LotSplit_BinCompleted;
        
        /// <remarks/>
        public event Exe_LotSplitCompletedEventHandler Exe_LotSplitCompleted;
        
        /// <remarks/>
        public event Exe_LotMerge_BinCompletedEventHandler Exe_LotMerge_BinCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMachine_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMachine_Syn(string InXml) {
            object[] results = this.Invoke("LoadMachine_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMachine_SynAsync(string InXml) {
            this.LoadMachine_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMachine_SynAsync(string InXml, object userState) {
            if ((this.LoadMachine_SynOperationCompleted == null)) {
                this.LoadMachine_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMachine_SynOperationCompleted);
            }
            this.InvokeAsync("LoadMachine_Syn", new object[] {
                        InXml}, this.LoadMachine_SynOperationCompleted, userState);
        }
        
        private void OnLoadMachine_SynOperationCompleted(object arg) {
            if ((this.LoadMachine_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMachine_SynCompleted(this, new LoadMachine_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Machine_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Machine_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Machine_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Machine_SynAsync(string InXml) {
            this.Exe_Machine_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Machine_SynAsync(string InXml, object userState) {
            if ((this.Exe_Machine_SynOperationCompleted == null)) {
                this.Exe_Machine_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Machine_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Machine_Syn", new object[] {
                        InXml}, this.Exe_Machine_SynOperationCompleted, userState);
        }
        
        private void OnExe_Machine_SynOperationCompleted(object arg) {
            if ((this.Exe_Machine_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Machine_SynCompleted(this, new Exe_Machine_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadModule_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadModule_Syn(string InXml) {
            object[] results = this.Invoke("LoadModule_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadModule_SynAsync(string InXml) {
            this.LoadModule_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadModule_SynAsync(string InXml, object userState) {
            if ((this.LoadModule_SynOperationCompleted == null)) {
                this.LoadModule_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadModule_SynOperationCompleted);
            }
            this.InvokeAsync("LoadModule_Syn", new object[] {
                        InXml}, this.LoadModule_SynOperationCompleted, userState);
        }
        
        private void OnLoadModule_SynOperationCompleted(object arg) {
            if ((this.LoadModule_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadModule_SynCompleted(this, new LoadModule_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Module_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Module_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Module_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Module_SynAsync(string InXml) {
            this.Exe_Module_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Module_SynAsync(string InXml, object userState) {
            if ((this.Exe_Module_SynOperationCompleted == null)) {
                this.Exe_Module_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Module_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Module_Syn", new object[] {
                        InXml}, this.Exe_Module_SynOperationCompleted, userState);
        }
        
        private void OnExe_Module_SynOperationCompleted(object arg) {
            if ((this.Exe_Module_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Module_SynCompleted(this, new Exe_Module_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadStage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadStage_Syn(string InXml) {
            object[] results = this.Invoke("LoadStage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadStage_SynAsync(string InXml) {
            this.LoadStage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadStage_SynAsync(string InXml, object userState) {
            if ((this.LoadStage_SynOperationCompleted == null)) {
                this.LoadStage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadStage_SynOperationCompleted);
            }
            this.InvokeAsync("LoadStage_Syn", new object[] {
                        InXml}, this.LoadStage_SynOperationCompleted, userState);
        }
        
        private void OnLoadStage_SynOperationCompleted(object arg) {
            if ((this.LoadStage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadStage_SynCompleted(this, new LoadStage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Stage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Stage_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Stage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Stage_SynAsync(string InXml) {
            this.Exe_Stage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Stage_SynAsync(string InXml, object userState) {
            if ((this.Exe_Stage_SynOperationCompleted == null)) {
                this.Exe_Stage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Stage_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Stage_Syn", new object[] {
                        InXml}, this.Exe_Stage_SynOperationCompleted, userState);
        }
        
        private void OnExe_Stage_SynOperationCompleted(object arg) {
            if ((this.Exe_Stage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Stage_SynCompleted(this, new Exe_Stage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadStation_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadStation_Syn(string InXml) {
            object[] results = this.Invoke("LoadStation_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadStation_SynAsync(string InXml) {
            this.LoadStation_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadStation_SynAsync(string InXml, object userState) {
            if ((this.LoadStation_SynOperationCompleted == null)) {
                this.LoadStation_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadStation_SynOperationCompleted);
            }
            this.InvokeAsync("LoadStation_Syn", new object[] {
                        InXml}, this.LoadStation_SynOperationCompleted, userState);
        }
        
        private void OnLoadStation_SynOperationCompleted(object arg) {
            if ((this.LoadStation_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadStation_SynCompleted(this, new LoadStation_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Station_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Station_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Station_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Station_SynAsync(string InXml) {
            this.Exe_Station_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Station_SynAsync(string InXml, object userState) {
            if ((this.Exe_Station_SynOperationCompleted == null)) {
                this.Exe_Station_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Station_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Station_Syn", new object[] {
                        InXml}, this.Exe_Station_SynOperationCompleted, userState);
        }
        
        private void OnExe_Station_SynOperationCompleted(object arg) {
            if ((this.Exe_Station_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Station_SynCompleted(this, new Exe_Station_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSTDTime_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSTDTime_Syn(string InXml) {
            object[] results = this.Invoke("LoadSTDTime_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSTDTime_SynAsync(string InXml) {
            this.LoadSTDTime_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSTDTime_SynAsync(string InXml, object userState) {
            if ((this.LoadSTDTime_SynOperationCompleted == null)) {
                this.LoadSTDTime_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSTDTime_SynOperationCompleted);
            }
            this.InvokeAsync("LoadSTDTime_Syn", new object[] {
                        InXml}, this.LoadSTDTime_SynOperationCompleted, userState);
        }
        
        private void OnLoadSTDTime_SynOperationCompleted(object arg) {
            if ((this.LoadSTDTime_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSTDTime_SynCompleted(this, new LoadSTDTime_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_STDTime_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_STDTime_Syn(string InXml) {
            object[] results = this.Invoke("Exe_STDTime_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_STDTime_SynAsync(string InXml) {
            this.Exe_STDTime_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_STDTime_SynAsync(string InXml, object userState) {
            if ((this.Exe_STDTime_SynOperationCompleted == null)) {
                this.Exe_STDTime_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_STDTime_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_STDTime_Syn", new object[] {
                        InXml}, this.Exe_STDTime_SynOperationCompleted, userState);
        }
        
        private void OnExe_STDTime_SynOperationCompleted(object arg) {
            if ((this.Exe_STDTime_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_STDTime_SynCompleted(this, new Exe_STDTime_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOIInfo_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOIInfo_Syn(string InXml) {
            object[] results = this.Invoke("LoadOIInfo_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOIInfo_SynAsync(string InXml) {
            this.LoadOIInfo_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOIInfo_SynAsync(string InXml, object userState) {
            if ((this.LoadOIInfo_SynOperationCompleted == null)) {
                this.LoadOIInfo_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOIInfo_SynOperationCompleted);
            }
            this.InvokeAsync("LoadOIInfo_Syn", new object[] {
                        InXml}, this.LoadOIInfo_SynOperationCompleted, userState);
        }
        
        private void OnLoadOIInfo_SynOperationCompleted(object arg) {
            if ((this.LoadOIInfo_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOIInfo_SynCompleted(this, new LoadOIInfo_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_OIInfo_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_OIInfo_Syn(string InXml) {
            object[] results = this.Invoke("Exe_OIInfo_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_OIInfo_SynAsync(string InXml) {
            this.Exe_OIInfo_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_OIInfo_SynAsync(string InXml, object userState) {
            if ((this.Exe_OIInfo_SynOperationCompleted == null)) {
                this.Exe_OIInfo_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_OIInfo_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_OIInfo_Syn", new object[] {
                        InXml}, this.Exe_OIInfo_SynOperationCompleted, userState);
        }
        
        private void OnExe_OIInfo_SynOperationCompleted(object arg) {
            if ((this.Exe_OIInfo_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_OIInfo_SynCompleted(this, new Exe_OIInfo_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLineMONo_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLineMONo_Syn(string InXml) {
            object[] results = this.Invoke("LoadLineMONo_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLineMONo_SynAsync(string InXml) {
            this.LoadLineMONo_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLineMONo_SynAsync(string InXml, object userState) {
            if ((this.LoadLineMONo_SynOperationCompleted == null)) {
                this.LoadLineMONo_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLineMONo_SynOperationCompleted);
            }
            this.InvokeAsync("LoadLineMONo_Syn", new object[] {
                        InXml}, this.LoadLineMONo_SynOperationCompleted, userState);
        }
        
        private void OnLoadLineMONo_SynOperationCompleted(object arg) {
            if ((this.LoadLineMONo_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLineMONo_SynCompleted(this, new LoadLineMONo_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LineMONo_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LineMONo_Syn(string InXml) {
            object[] results = this.Invoke("Exe_LineMONo_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LineMONo_SynAsync(string InXml) {
            this.Exe_LineMONo_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LineMONo_SynAsync(string InXml, object userState) {
            if ((this.Exe_LineMONo_SynOperationCompleted == null)) {
                this.Exe_LineMONo_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LineMONo_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_LineMONo_Syn", new object[] {
                        InXml}, this.Exe_LineMONo_SynOperationCompleted, userState);
        }
        
        private void OnExe_LineMONo_SynOperationCompleted(object arg) {
            if ((this.Exe_LineMONo_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LineMONo_SynCompleted(this, new Exe_LineMONo_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMaterial_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMaterial_Syn(string InXml) {
            object[] results = this.Invoke("LoadMaterial_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMaterial_SynAsync(string InXml) {
            this.LoadMaterial_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMaterial_SynAsync(string InXml, object userState) {
            if ((this.LoadMaterial_SynOperationCompleted == null)) {
                this.LoadMaterial_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMaterial_SynOperationCompleted);
            }
            this.InvokeAsync("LoadMaterial_Syn", new object[] {
                        InXml}, this.LoadMaterial_SynOperationCompleted, userState);
        }
        
        private void OnLoadMaterial_SynOperationCompleted(object arg) {
            if ((this.LoadMaterial_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMaterial_SynCompleted(this, new LoadMaterial_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Material_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Material_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Material_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Material_SynAsync(string InXml) {
            this.Exe_Material_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Material_SynAsync(string InXml, object userState) {
            if ((this.Exe_Material_SynOperationCompleted == null)) {
                this.Exe_Material_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Material_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Material_Syn", new object[] {
                        InXml}, this.Exe_Material_SynOperationCompleted, userState);
        }
        
        private void OnExe_Material_SynOperationCompleted(object arg) {
            if ((this.Exe_Material_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Material_SynCompleted(this, new Exe_Material_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFeederMaterial_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFeederMaterial_Syn(string InXml) {
            object[] results = this.Invoke("LoadFeederMaterial_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFeederMaterial_SynAsync(string InXml) {
            this.LoadFeederMaterial_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFeederMaterial_SynAsync(string InXml, object userState) {
            if ((this.LoadFeederMaterial_SynOperationCompleted == null)) {
                this.LoadFeederMaterial_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFeederMaterial_SynOperationCompleted);
            }
            this.InvokeAsync("LoadFeederMaterial_Syn", new object[] {
                        InXml}, this.LoadFeederMaterial_SynOperationCompleted, userState);
        }
        
        private void OnLoadFeederMaterial_SynOperationCompleted(object arg) {
            if ((this.LoadFeederMaterial_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFeederMaterial_SynCompleted(this, new LoadFeederMaterial_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FeederMaterial_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FeederMaterial_Syn(string InXml) {
            object[] results = this.Invoke("Exe_FeederMaterial_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FeederMaterial_SynAsync(string InXml) {
            this.Exe_FeederMaterial_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FeederMaterial_SynAsync(string InXml, object userState) {
            if ((this.Exe_FeederMaterial_SynOperationCompleted == null)) {
                this.Exe_FeederMaterial_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FeederMaterial_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_FeederMaterial_Syn", new object[] {
                        InXml}, this.Exe_FeederMaterial_SynOperationCompleted, userState);
        }
        
        private void OnExe_FeederMaterial_SynOperationCompleted(object arg) {
            if ((this.Exe_FeederMaterial_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FeederMaterial_SynCompleted(this, new Exe_FeederMaterial_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLineStorage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLineStorage_Syn(string InXml) {
            object[] results = this.Invoke("LoadLineStorage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLineStorage_SynAsync(string InXml) {
            this.LoadLineStorage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLineStorage_SynAsync(string InXml, object userState) {
            if ((this.LoadLineStorage_SynOperationCompleted == null)) {
                this.LoadLineStorage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLineStorage_SynOperationCompleted);
            }
            this.InvokeAsync("LoadLineStorage_Syn", new object[] {
                        InXml}, this.LoadLineStorage_SynOperationCompleted, userState);
        }
        
        private void OnLoadLineStorage_SynOperationCompleted(object arg) {
            if ((this.LoadLineStorage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLineStorage_SynCompleted(this, new LoadLineStorage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LineStorage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LineStorage_Syn(string InXml) {
            object[] results = this.Invoke("Exe_LineStorage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LineStorage_SynAsync(string InXml) {
            this.Exe_LineStorage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LineStorage_SynAsync(string InXml, object userState) {
            if ((this.Exe_LineStorage_SynOperationCompleted == null)) {
                this.Exe_LineStorage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LineStorage_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_LineStorage_Syn", new object[] {
                        InXml}, this.Exe_LineStorage_SynOperationCompleted, userState);
        }
        
        private void OnExe_LineStorage_SynOperationCompleted(object arg) {
            if ((this.Exe_LineStorage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LineStorage_SynCompleted(this, new Exe_LineStorage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMachineStorage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMachineStorage_Syn(string InXml) {
            object[] results = this.Invoke("LoadMachineStorage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMachineStorage_SynAsync(string InXml) {
            this.LoadMachineStorage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMachineStorage_SynAsync(string InXml, object userState) {
            if ((this.LoadMachineStorage_SynOperationCompleted == null)) {
                this.LoadMachineStorage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMachineStorage_SynOperationCompleted);
            }
            this.InvokeAsync("LoadMachineStorage_Syn", new object[] {
                        InXml}, this.LoadMachineStorage_SynOperationCompleted, userState);
        }
        
        private void OnLoadMachineStorage_SynOperationCompleted(object arg) {
            if ((this.LoadMachineStorage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMachineStorage_SynCompleted(this, new LoadMachineStorage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_MachineStorage_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_MachineStorage_Syn(string InXml) {
            object[] results = this.Invoke("Exe_MachineStorage_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_MachineStorage_SynAsync(string InXml) {
            this.Exe_MachineStorage_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_MachineStorage_SynAsync(string InXml, object userState) {
            if ((this.Exe_MachineStorage_SynOperationCompleted == null)) {
                this.Exe_MachineStorage_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_MachineStorage_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_MachineStorage_Syn", new object[] {
                        InXml}, this.Exe_MachineStorage_SynOperationCompleted, userState);
        }
        
        private void OnExe_MachineStorage_SynOperationCompleted(object arg) {
            if ((this.Exe_MachineStorage_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_MachineStorage_SynCompleted(this, new Exe_MachineStorage_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMaterialRel_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMaterialRel_Syn(string InXml) {
            object[] results = this.Invoke("LoadMaterialRel_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMaterialRel_SynAsync(string InXml) {
            this.LoadMaterialRel_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMaterialRel_SynAsync(string InXml, object userState) {
            if ((this.LoadMaterialRel_SynOperationCompleted == null)) {
                this.LoadMaterialRel_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMaterialRel_SynOperationCompleted);
            }
            this.InvokeAsync("LoadMaterialRel_Syn", new object[] {
                        InXml}, this.LoadMaterialRel_SynOperationCompleted, userState);
        }
        
        private void OnLoadMaterialRel_SynOperationCompleted(object arg) {
            if ((this.LoadMaterialRel_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMaterialRel_SynCompleted(this, new LoadMaterialRel_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_MaterialRel_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_MaterialRel_Syn(string InXml) {
            object[] results = this.Invoke("Exe_MaterialRel_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_MaterialRel_SynAsync(string InXml) {
            this.Exe_MaterialRel_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_MaterialRel_SynAsync(string InXml, object userState) {
            if ((this.Exe_MaterialRel_SynOperationCompleted == null)) {
                this.Exe_MaterialRel_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_MaterialRel_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_MaterialRel_Syn", new object[] {
                        InXml}, this.Exe_MaterialRel_SynOperationCompleted, userState);
        }
        
        private void OnExe_MaterialRel_SynOperationCompleted(object arg) {
            if ((this.Exe_MaterialRel_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_MaterialRel_SynCompleted(this, new Exe_MaterialRel_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTorsionLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoadTorsionLog(string InXml) {
            object[] results = this.Invoke("LoadTorsionLog", new object[] {
                        InXml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTorsionLogAsync(string InXml) {
            this.LoadTorsionLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTorsionLogAsync(string InXml, object userState) {
            if ((this.LoadTorsionLogOperationCompleted == null)) {
                this.LoadTorsionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTorsionLogOperationCompleted);
            }
            this.InvokeAsync("LoadTorsionLog", new object[] {
                        InXml}, this.LoadTorsionLogOperationCompleted, userState);
        }
        
        private void OnLoadTorsionLogOperationCompleted(object arg) {
            if ((this.LoadTorsionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTorsionLogCompleted(this, new LoadTorsionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/IsCorrectPCB", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCorrectPCB(string InXml) {
            object[] results = this.Invoke("IsCorrectPCB", new object[] {
                        InXml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCorrectPCBAsync(string InXml) {
            this.IsCorrectPCBAsync(InXml, null);
        }
        
        /// <remarks/>
        public void IsCorrectPCBAsync(string InXml, object userState) {
            if ((this.IsCorrectPCBOperationCompleted == null)) {
                this.IsCorrectPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCorrectPCBOperationCompleted);
            }
            this.InvokeAsync("IsCorrectPCB", new object[] {
                        InXml}, this.IsCorrectPCBOperationCompleted, userState);
        }
        
        private void OnIsCorrectPCBOperationCompleted(object arg) {
            if ((this.IsCorrectPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCorrectPCBCompleted(this, new IsCorrectPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPackingLabelDataCreate_M1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPackingLabelDataCreate_M1(string InXml) {
            object[] results = this.Invoke("ExeMOPackingLabelDataCreate_M1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_M1Async(string InXml) {
            this.ExeMOPackingLabelDataCreate_M1Async(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_M1Async(string InXml, object userState) {
            if ((this.ExeMOPackingLabelDataCreate_M1OperationCompleted == null)) {
                this.ExeMOPackingLabelDataCreate_M1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPackingLabelDataCreate_M1OperationCompleted);
            }
            this.InvokeAsync("ExeMOPackingLabelDataCreate_M1", new object[] {
                        InXml}, this.ExeMOPackingLabelDataCreate_M1OperationCompleted, userState);
        }
        
        private void OnExeMOPackingLabelDataCreate_M1OperationCompleted(object arg) {
            if ((this.ExeMOPackingLabelDataCreate_M1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPackingLabelDataCreate_M1Completed(this, new ExeMOPackingLabelDataCreate_M1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_Auto_TY", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_Auto_TY(string InXml, System.Data.DataSet ExcludeMaterial) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_Auto_TY", new object[] {
                        InXml,
                        ExcludeMaterial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_Auto_TYAsync(string InXml, System.Data.DataSet ExcludeMaterial) {
            this.Exe_SMTMaterialReturn_Auto_TYAsync(InXml, ExcludeMaterial, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_Auto_TYAsync(string InXml, System.Data.DataSet ExcludeMaterial, object userState) {
            if ((this.Exe_SMTMaterialReturn_Auto_TYOperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_Auto_TYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_Auto_TYOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_Auto_TY", new object[] {
                        InXml,
                        ExcludeMaterial}, this.Exe_SMTMaterialReturn_Auto_TYOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_Auto_TYOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_Auto_TYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_Auto_TYCompleted(this, new Exe_SMTMaterialReturn_Auto_TYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdFeederMFU_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdFeederMFU_New(string InXml) {
            object[] results = this.Invoke("UpdFeederMFU_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdFeederMFU_NewAsync(string InXml) {
            this.UpdFeederMFU_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdFeederMFU_NewAsync(string InXml, object userState) {
            if ((this.UpdFeederMFU_NewOperationCompleted == null)) {
                this.UpdFeederMFU_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdFeederMFU_NewOperationCompleted);
            }
            this.InvokeAsync("UpdFeederMFU_New", new object[] {
                        InXml}, this.UpdFeederMFU_NewOperationCompleted, userState);
        }
        
        private void OnUpdFeederMFU_NewOperationCompleted(object arg) {
            if ((this.UpdFeederMFU_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdFeederMFU_NewCompleted(this, new UpdFeederMFU_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFeederMFU_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFeederMFU_New(string InXml) {
            object[] results = this.Invoke("DelFeederMFU_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFeederMFU_NewAsync(string InXml) {
            this.DelFeederMFU_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFeederMFU_NewAsync(string InXml, object userState) {
            if ((this.DelFeederMFU_NewOperationCompleted == null)) {
                this.DelFeederMFU_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFeederMFU_NewOperationCompleted);
            }
            this.InvokeAsync("DelFeederMFU_New", new object[] {
                        InXml}, this.DelFeederMFU_NewOperationCompleted, userState);
        }
        
        private void OnDelFeederMFU_NewOperationCompleted(object arg) {
            if ((this.DelFeederMFU_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFeederMFU_NewCompleted(this, new DelFeederMFU_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCounterState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCounterState(string InXml) {
            object[] results = this.Invoke("LoadCounterState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCounterStateAsync(string InXml) {
            this.LoadCounterStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCounterStateAsync(string InXml, object userState) {
            if ((this.LoadCounterStateOperationCompleted == null)) {
                this.LoadCounterStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCounterStateOperationCompleted);
            }
            this.InvokeAsync("LoadCounterState", new object[] {
                        InXml}, this.LoadCounterStateOperationCompleted, userState);
        }
        
        private void OnLoadCounterStateOperationCompleted(object arg) {
            if ((this.LoadCounterStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCounterStateCompleted(this, new LoadCounterStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCounterLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCounterLog(string InXml) {
            object[] results = this.Invoke("LoadCounterLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCounterLogAsync(string InXml) {
            this.LoadCounterLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCounterLogAsync(string InXml, object userState) {
            if ((this.LoadCounterLogOperationCompleted == null)) {
                this.LoadCounterLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCounterLogOperationCompleted);
            }
            this.InvokeAsync("LoadCounterLog", new object[] {
                        InXml}, this.LoadCounterLogOperationCompleted, userState);
        }
        
        private void OnLoadCounterLogOperationCompleted(object arg) {
            if ((this.LoadCounterLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCounterLogCompleted(this, new LoadCounterLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWipMarkBuilder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWipMarkBuilder(string InXml) {
            object[] results = this.Invoke("LoadWipMarkBuilder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWipMarkBuilderAsync(string InXml) {
            this.LoadWipMarkBuilderAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWipMarkBuilderAsync(string InXml, object userState) {
            if ((this.LoadWipMarkBuilderOperationCompleted == null)) {
                this.LoadWipMarkBuilderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWipMarkBuilderOperationCompleted);
            }
            this.InvokeAsync("LoadWipMarkBuilder", new object[] {
                        InXml}, this.LoadWipMarkBuilderOperationCompleted, userState);
        }
        
        private void OnLoadWipMarkBuilderOperationCompleted(object arg) {
            if ((this.LoadWipMarkBuilderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWipMarkBuilderCompleted(this, new LoadWipMarkBuilderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWipMarkBuilder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWipMarkBuilder(string InXml) {
            object[] results = this.Invoke("AddWipMarkBuilder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWipMarkBuilderAsync(string InXml) {
            this.AddWipMarkBuilderAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWipMarkBuilderAsync(string InXml, object userState) {
            if ((this.AddWipMarkBuilderOperationCompleted == null)) {
                this.AddWipMarkBuilderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWipMarkBuilderOperationCompleted);
            }
            this.InvokeAsync("AddWipMarkBuilder", new object[] {
                        InXml}, this.AddWipMarkBuilderOperationCompleted, userState);
        }
        
        private void OnAddWipMarkBuilderOperationCompleted(object arg) {
            if ((this.AddWipMarkBuilderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWipMarkBuilderCompleted(this, new AddWipMarkBuilderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWipMarkBuilder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWipMarkBuilder(string InXml) {
            object[] results = this.Invoke("DelWipMarkBuilder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWipMarkBuilderAsync(string InXml) {
            this.DelWipMarkBuilderAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWipMarkBuilderAsync(string InXml, object userState) {
            if ((this.DelWipMarkBuilderOperationCompleted == null)) {
                this.DelWipMarkBuilderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWipMarkBuilderOperationCompleted);
            }
            this.InvokeAsync("DelWipMarkBuilder", new object[] {
                        InXml}, this.DelWipMarkBuilderOperationCompleted, userState);
        }
        
        private void OnDelWipMarkBuilderOperationCompleted(object arg) {
            if ((this.DelWipMarkBuilderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWipMarkBuilderCompleted(this, new DelWipMarkBuilderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFGPreBoardStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFGPreBoardStatus(string InXml) {
            object[] results = this.Invoke("LoadMFGPreBoardStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFGPreBoardStatusAsync(string InXml) {
            this.LoadMFGPreBoardStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFGPreBoardStatusAsync(string InXml, object userState) {
            if ((this.LoadMFGPreBoardStatusOperationCompleted == null)) {
                this.LoadMFGPreBoardStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFGPreBoardStatusOperationCompleted);
            }
            this.InvokeAsync("LoadMFGPreBoardStatus", new object[] {
                        InXml}, this.LoadMFGPreBoardStatusOperationCompleted, userState);
        }
        
        private void OnLoadMFGPreBoardStatusOperationCompleted(object arg) {
            if ((this.LoadMFGPreBoardStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFGPreBoardStatusCompleted(this, new LoadMFGPreBoardStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSysParameter", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSysParameter(string InXml) {
            object[] results = this.Invoke("LoadSysParameter", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSysParameterAsync(string InXml) {
            this.LoadSysParameterAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSysParameterAsync(string InXml, object userState) {
            if ((this.LoadSysParameterOperationCompleted == null)) {
                this.LoadSysParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSysParameterOperationCompleted);
            }
            this.InvokeAsync("LoadSysParameter", new object[] {
                        InXml}, this.LoadSysParameterOperationCompleted, userState);
        }
        
        private void OnLoadSysParameterOperationCompleted(object arg) {
            if ((this.LoadSysParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSysParameterCompleted(this, new LoadSysParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AutoAddMOPDLineState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoAddMOPDLineState(string lotno) {
            object[] results = this.Invoke("AutoAddMOPDLineState", new object[] {
                        lotno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoAddMOPDLineStateAsync(string lotno) {
            this.AutoAddMOPDLineStateAsync(lotno, null);
        }
        
        /// <remarks/>
        public void AutoAddMOPDLineStateAsync(string lotno, object userState) {
            if ((this.AutoAddMOPDLineStateOperationCompleted == null)) {
                this.AutoAddMOPDLineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoAddMOPDLineStateOperationCompleted);
            }
            this.InvokeAsync("AutoAddMOPDLineState", new object[] {
                        lotno}, this.AutoAddMOPDLineStateOperationCompleted, userState);
        }
        
        private void OnAutoAddMOPDLineStateOperationCompleted(object arg) {
            if ((this.AutoAddMOPDLineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoAddMOPDLineStateCompleted(this, new AutoAddMOPDLineStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtExcesssDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtExcesssDetail(string InXml) {
            object[] results = this.Invoke("LoadSmtExcesssDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtExcesssDetailAsync(string InXml) {
            this.LoadSmtExcesssDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSmtExcesssDetailAsync(string InXml, object userState) {
            if ((this.LoadSmtExcesssDetailOperationCompleted == null)) {
                this.LoadSmtExcesssDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtExcesssDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSmtExcesssDetail", new object[] {
                        InXml}, this.LoadSmtExcesssDetailOperationCompleted, userState);
        }
        
        private void OnLoadSmtExcesssDetailOperationCompleted(object arg) {
            if ((this.LoadSmtExcesssDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtExcesssDetailCompleted(this, new LoadSmtExcesssDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtExcesss", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtExcesss(string InXml) {
            object[] results = this.Invoke("LoadSmtExcesss", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtExcesssAsync(string InXml) {
            this.LoadSmtExcesssAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSmtExcesssAsync(string InXml, object userState) {
            if ((this.LoadSmtExcesssOperationCompleted == null)) {
                this.LoadSmtExcesssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtExcesssOperationCompleted);
            }
            this.InvokeAsync("LoadSmtExcesss", new object[] {
                        InXml}, this.LoadSmtExcesssOperationCompleted, userState);
        }
        
        private void OnLoadSmtExcesssOperationCompleted(object arg) {
            if ((this.LoadSmtExcesssCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtExcesssCompleted(this, new LoadSmtExcesssCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtMoSchedule", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtMoSchedule(string InXml) {
            object[] results = this.Invoke("LoadSmtMoSchedule", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtMoScheduleAsync(string InXml) {
            this.LoadSmtMoScheduleAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSmtMoScheduleAsync(string InXml, object userState) {
            if ((this.LoadSmtMoScheduleOperationCompleted == null)) {
                this.LoadSmtMoScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtMoScheduleOperationCompleted);
            }
            this.InvokeAsync("LoadSmtMoSchedule", new object[] {
                        InXml}, this.LoadSmtMoScheduleOperationCompleted, userState);
        }
        
        private void OnLoadSmtMoScheduleOperationCompleted(object arg) {
            if ((this.LoadSmtMoScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtMoScheduleCompleted(this, new LoadSmtMoScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederINVReturnDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederINVReturnDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederINVReturnDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVReturnDetailAsync(string InXml) {
            this.LoadSMTFeederINVReturnDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVReturnDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederINVReturnDetailOperationCompleted == null)) {
                this.LoadSMTFeederINVReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederINVReturnDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederINVReturnDetail", new object[] {
                        InXml}, this.LoadSMTFeederINVReturnDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederINVReturnDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederINVReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederINVReturnDetailCompleted(this, new LoadSMTFeederINVReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVReturnData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVReturnData(string InXml) {
            object[] results = this.Invoke("SMTFeederINVReturnData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVReturnDataAsync(string InXml) {
            this.SMTFeederINVReturnDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVReturnDataAsync(string InXml, object userState) {
            if ((this.SMTFeederINVReturnDataOperationCompleted == null)) {
                this.SMTFeederINVReturnDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVReturnDataOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVReturnData", new object[] {
                        InXml}, this.SMTFeederINVReturnDataOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVReturnDataOperationCompleted(object arg) {
            if ((this.SMTFeederINVReturnDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVReturnDataCompleted(this, new SMTFeederINVReturnDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelSMTFeederINVReturnData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelSMTFeederINVReturnData(string InXml) {
            object[] results = this.Invoke("DelSMTFeederINVReturnData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelSMTFeederINVReturnDataAsync(string InXml) {
            this.DelSMTFeederINVReturnDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelSMTFeederINVReturnDataAsync(string InXml, object userState) {
            if ((this.DelSMTFeederINVReturnDataOperationCompleted == null)) {
                this.DelSMTFeederINVReturnDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSMTFeederINVReturnDataOperationCompleted);
            }
            this.InvokeAsync("DelSMTFeederINVReturnData", new object[] {
                        InXml}, this.DelSMTFeederINVReturnDataOperationCompleted, userState);
        }
        
        private void OnDelSMTFeederINVReturnDataOperationCompleted(object arg) {
            if ((this.DelSMTFeederINVReturnDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSMTFeederINVReturnDataCompleted(this, new DelSMTFeederINVReturnDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVReturnComplete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVReturnComplete(string InXml) {
            object[] results = this.Invoke("SMTFeederINVReturnComplete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVReturnCompleteAsync(string InXml) {
            this.SMTFeederINVReturnCompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVReturnCompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederINVReturnCompleteOperationCompleted == null)) {
                this.SMTFeederINVReturnCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVReturnCompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVReturnComplete", new object[] {
                        InXml}, this.SMTFeederINVReturnCompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVReturnCompleteOperationCompleted(object arg) {
            if ((this.SMTFeederINVReturnCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVReturnCompleteCompleted(this, new SMTFeederINVReturnCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederReturnINVTransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederReturnINVTransfer(string InXml) {
            object[] results = this.Invoke("SMTFeederReturnINVTransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederReturnINVTransferAsync(string InXml) {
            this.SMTFeederReturnINVTransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederReturnINVTransferAsync(string InXml, object userState) {
            if ((this.SMTFeederReturnINVTransferOperationCompleted == null)) {
                this.SMTFeederReturnINVTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederReturnINVTransferOperationCompleted);
            }
            this.InvokeAsync("SMTFeederReturnINVTransfer", new object[] {
                        InXml}, this.SMTFeederReturnINVTransferOperationCompleted, userState);
        }
        
        private void OnSMTFeederReturnINVTransferOperationCompleted(object arg) {
            if ((this.SMTFeederReturnINVTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederReturnINVTransferCompleted(this, new SMTFeederReturnINVTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVLackPickup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVLackPickup(string InXml) {
            object[] results = this.Invoke("SMTFeederINVLackPickup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVLackPickupAsync(string InXml) {
            this.SMTFeederINVLackPickupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVLackPickupAsync(string InXml, object userState) {
            if ((this.SMTFeederINVLackPickupOperationCompleted == null)) {
                this.SMTFeederINVLackPickupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVLackPickupOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVLackPickup", new object[] {
                        InXml}, this.SMTFeederINVLackPickupOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVLackPickupOperationCompleted(object arg) {
            if ((this.SMTFeederINVLackPickupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVLackPickupCompleted(this, new SMTFeederINVLackPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVLackDetail_Del", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVLackDetail_Del(string InXml) {
            object[] results = this.Invoke("SMTFeederINVLackDetail_Del", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_DelAsync(string InXml) {
            this.SMTFeederINVLackDetail_DelAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_DelAsync(string InXml, object userState) {
            if ((this.SMTFeederINVLackDetail_DelOperationCompleted == null)) {
                this.SMTFeederINVLackDetail_DelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVLackDetail_DelOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVLackDetail_Del", new object[] {
                        InXml}, this.SMTFeederINVLackDetail_DelOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVLackDetail_DelOperationCompleted(object arg) {
            if ((this.SMTFeederINVLackDetail_DelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVLackDetail_DelCompleted(this, new SMTFeederINVLackDetail_DelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVLackDetail_Clear", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVLackDetail_Clear(string InXml) {
            object[] results = this.Invoke("SMTFeederINVLackDetail_Clear", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_ClearAsync(string InXml) {
            this.SMTFeederINVLackDetail_ClearAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_ClearAsync(string InXml, object userState) {
            if ((this.SMTFeederINVLackDetail_ClearOperationCompleted == null)) {
                this.SMTFeederINVLackDetail_ClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVLackDetail_ClearOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVLackDetail_Clear", new object[] {
                        InXml}, this.SMTFeederINVLackDetail_ClearOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVLackDetail_ClearOperationCompleted(object arg) {
            if ((this.SMTFeederINVLackDetail_ClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVLackDetail_ClearCompleted(this, new SMTFeederINVLackDetail_ClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederINVLackDetail_Complete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederINVLackDetail_Complete(string InXml) {
            object[] results = this.Invoke("SMTFeederINVLackDetail_Complete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_CompleteAsync(string InXml) {
            this.SMTFeederINVLackDetail_CompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederINVLackDetail_CompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederINVLackDetail_CompleteOperationCompleted == null)) {
                this.SMTFeederINVLackDetail_CompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederINVLackDetail_CompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederINVLackDetail_Complete", new object[] {
                        InXml}, this.SMTFeederINVLackDetail_CompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederINVLackDetail_CompleteOperationCompleted(object arg) {
            if ((this.SMTFeederINVLackDetail_CompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederINVLackDetail_CompleteCompleted(this, new SMTFeederINVLackDetail_CompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederINVLackPickupBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederINVLackPickupBasis(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederINVLackPickupBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVLackPickupBasisAsync(string InXml) {
            this.LoadSMTFeederINVLackPickupBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVLackPickupBasisAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederINVLackPickupBasisOperationCompleted == null)) {
                this.LoadSMTFeederINVLackPickupBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederINVLackPickupBasisOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederINVLackPickupBasis", new object[] {
                        InXml}, this.LoadSMTFeederINVLackPickupBasisOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederINVLackPickupBasisOperationCompleted(object arg) {
            if ((this.LoadSMTFeederINVLackPickupBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederINVLackPickupBasisCompleted(this, new LoadSMTFeederINVLackPickupBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederINVLackPickupDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederINVLackPickupDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederINVLackPickupDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVLackPickupDetailAsync(string InXml) {
            this.LoadSMTFeederINVLackPickupDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederINVLackPickupDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederINVLackPickupDetailOperationCompleted == null)) {
                this.LoadSMTFeederINVLackPickupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederINVLackPickupDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederINVLackPickupDetail", new object[] {
                        InXml}, this.LoadSMTFeederINVLackPickupDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederINVLackPickupDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederINVLackPickupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederINVLackPickupDetailCompleted(this, new LoadSMTFeederINVLackPickupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederLackTransferDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederLackTransferDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederLackTransferDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederLackTransferDetailAsync(string InXml) {
            this.LoadSMTFeederLackTransferDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederLackTransferDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederLackTransferDetailOperationCompleted == null)) {
                this.LoadSMTFeederLackTransferDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederLackTransferDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederLackTransferDetail", new object[] {
                        InXml}, this.LoadSMTFeederLackTransferDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederLackTransferDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederLackTransferDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederLackTransferDetailCompleted(this, new LoadSMTFeederLackTransferDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupToMES_Lack", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupToMES_Lack(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupToMES_Lack", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupToMES_LackAsync(string InXml) {
            this.SMTFeederPickupToMES_LackAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupToMES_LackAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupToMES_LackOperationCompleted == null)) {
                this.SMTFeederPickupToMES_LackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupToMES_LackOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupToMES_Lack", new object[] {
                        InXml}, this.SMTFeederPickupToMES_LackOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupToMES_LackOperationCompleted(object arg) {
            if ((this.SMTFeederPickupToMES_LackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupToMES_LackCompleted(this, new SMTFeederPickupToMES_LackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederComplete_Lack", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederComplete_Lack(string InXml) {
            object[] results = this.Invoke("SMTFeederComplete_Lack", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederComplete_LackAsync(string InXml) {
            this.SMTFeederComplete_LackAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederComplete_LackAsync(string InXml, object userState) {
            if ((this.SMTFeederComplete_LackOperationCompleted == null)) {
                this.SMTFeederComplete_LackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederComplete_LackOperationCompleted);
            }
            this.InvokeAsync("SMTFeederComplete_Lack", new object[] {
                        InXml}, this.SMTFeederComplete_LackOperationCompleted, userState);
        }
        
        private void OnSMTFeederComplete_LackOperationCompleted(object arg) {
            if ((this.SMTFeederComplete_LackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederComplete_LackCompleted(this, new SMTFeederComplete_LackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederPLC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederPLC(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederPLC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederPLCAsync(string InXml) {
            this.LoadSMTFeederPLCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederPLCAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederPLCOperationCompleted == null)) {
                this.LoadSMTFeederPLCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederPLCOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederPLC", new object[] {
                        InXml}, this.LoadSMTFeederPLCOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederPLCOperationCompleted(object arg) {
            if ((this.LoadSMTFeederPLCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederPLCCompleted(this, new LoadSMTFeederPLCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederReturnRequest", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederReturnRequest(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederReturnRequest", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnRequestAsync(string InXml) {
            this.LoadSMTFeederReturnRequestAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnRequestAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederReturnRequestOperationCompleted == null)) {
                this.LoadSMTFeederReturnRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederReturnRequestOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederReturnRequest", new object[] {
                        InXml}, this.LoadSMTFeederReturnRequestOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederReturnRequestOperationCompleted(object arg) {
            if ((this.LoadSMTFeederReturnRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederReturnRequestCompleted(this, new LoadSMTFeederReturnRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSMTFeederReturnRequest", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMTFeederReturnRequest(string InXml) {
            object[] results = this.Invoke("UpdateSMTFeederReturnRequest", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMTFeederReturnRequestAsync(string InXml) {
            this.UpdateSMTFeederReturnRequestAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSMTFeederReturnRequestAsync(string InXml, object userState) {
            if ((this.UpdateSMTFeederReturnRequestOperationCompleted == null)) {
                this.UpdateSMTFeederReturnRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMTFeederReturnRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateSMTFeederReturnRequest", new object[] {
                        InXml}, this.UpdateSMTFeederReturnRequestOperationCompleted, userState);
        }
        
        private void OnUpdateSMTFeederReturnRequestOperationCompleted(object arg) {
            if ((this.UpdateSMTFeederReturnRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMTFeederReturnRequestCompleted(this, new UpdateSMTFeederReturnRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederLEDRequestForPLC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederLEDRequestForPLC(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederLEDRequestForPLC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederLEDRequestForPLCAsync(string InXml) {
            this.LoadSMTFeederLEDRequestForPLCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederLEDRequestForPLCAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederLEDRequestForPLCOperationCompleted == null)) {
                this.LoadSMTFeederLEDRequestForPLCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederLEDRequestForPLCOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederLEDRequestForPLC", new object[] {
                        InXml}, this.LoadSMTFeederLEDRequestForPLCOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederLEDRequestForPLCOperationCompleted(object arg) {
            if ((this.LoadSMTFeederLEDRequestForPLCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederLEDRequestForPLCCompleted(this, new LoadSMTFeederLEDRequestForPLCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTPCBRepairBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTPCBRepairBasis(string InXml) {
            object[] results = this.Invoke("LoadSMTPCBRepairBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTPCBRepairBasisAsync(string InXml) {
            this.LoadSMTPCBRepairBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTPCBRepairBasisAsync(string InXml, object userState) {
            if ((this.LoadSMTPCBRepairBasisOperationCompleted == null)) {
                this.LoadSMTPCBRepairBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTPCBRepairBasisOperationCompleted);
            }
            this.InvokeAsync("LoadSMTPCBRepairBasis", new object[] {
                        InXml}, this.LoadSMTPCBRepairBasisOperationCompleted, userState);
        }
        
        private void OnLoadSMTPCBRepairBasisOperationCompleted(object arg) {
            if ((this.LoadSMTPCBRepairBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTPCBRepairBasisCompleted(this, new LoadSMTPCBRepairBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTPCBRepairDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTPCBRepairDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTPCBRepairDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTPCBRepairDetailAsync(string InXml) {
            this.LoadSMTPCBRepairDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTPCBRepairDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTPCBRepairDetailOperationCompleted == null)) {
                this.LoadSMTPCBRepairDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTPCBRepairDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTPCBRepairDetail", new object[] {
                        InXml}, this.LoadSMTPCBRepairDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTPCBRepairDetailOperationCompleted(object arg) {
            if ((this.LoadSMTPCBRepairDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTPCBRepairDetailCompleted(this, new LoadSMTPCBRepairDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdatePCBRepairStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePCBRepairStatus(string InXml) {
            object[] results = this.Invoke("UpdatePCBRepairStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePCBRepairStatusAsync(string InXml) {
            this.UpdatePCBRepairStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdatePCBRepairStatusAsync(string InXml, object userState) {
            if ((this.UpdatePCBRepairStatusOperationCompleted == null)) {
                this.UpdatePCBRepairStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePCBRepairStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePCBRepairStatus", new object[] {
                        InXml}, this.UpdatePCBRepairStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePCBRepairStatusOperationCompleted(object arg) {
            if ((this.UpdatePCBRepairStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePCBRepairStatusCompleted(this, new UpdatePCBRepairStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdatePCBPhotoStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePCBPhotoStatus(string InXml) {
            object[] results = this.Invoke("UpdatePCBPhotoStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePCBPhotoStatusAsync(string InXml) {
            this.UpdatePCBPhotoStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdatePCBPhotoStatusAsync(string InXml, object userState) {
            if ((this.UpdatePCBPhotoStatusOperationCompleted == null)) {
                this.UpdatePCBPhotoStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePCBPhotoStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePCBPhotoStatus", new object[] {
                        InXml}, this.UpdatePCBPhotoStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePCBPhotoStatusOperationCompleted(object arg) {
            if ((this.UpdatePCBPhotoStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePCBPhotoStatusCompleted(this, new UpdatePCBPhotoStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMaterialNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMaterialNo(string InXml) {
            object[] results = this.Invoke("LoadMaterialNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMaterialNoAsync(string InXml) {
            this.LoadMaterialNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMaterialNoAsync(string InXml, object userState) {
            if ((this.LoadMaterialNoOperationCompleted == null)) {
                this.LoadMaterialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMaterialNoOperationCompleted);
            }
            this.InvokeAsync("LoadMaterialNo", new object[] {
                        InXml}, this.LoadMaterialNoOperationCompleted, userState);
        }
        
        private void OnLoadMaterialNoOperationCompleted(object arg) {
            if ((this.LoadMaterialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMaterialNoCompleted(this, new LoadMaterialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddThermalPaste_Log", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddThermalPaste_Log(string InXml) {
            object[] results = this.Invoke("AddThermalPaste_Log", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddThermalPaste_LogAsync(string InXml) {
            this.AddThermalPaste_LogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddThermalPaste_LogAsync(string InXml, object userState) {
            if ((this.AddThermalPaste_LogOperationCompleted == null)) {
                this.AddThermalPaste_LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddThermalPaste_LogOperationCompleted);
            }
            this.InvokeAsync("AddThermalPaste_Log", new object[] {
                        InXml}, this.AddThermalPaste_LogOperationCompleted, userState);
        }
        
        private void OnAddThermalPaste_LogOperationCompleted(object arg) {
            if ((this.AddThermalPaste_LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddThermalPaste_LogCompleted(this, new AddThermalPaste_LogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/RecordWIPCurrMoNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecordWIPCurrMoNo(string InXml) {
            object[] results = this.Invoke("RecordWIPCurrMoNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecordWIPCurrMoNoAsync(string InXml) {
            this.RecordWIPCurrMoNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void RecordWIPCurrMoNoAsync(string InXml, object userState) {
            if ((this.RecordWIPCurrMoNoOperationCompleted == null)) {
                this.RecordWIPCurrMoNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordWIPCurrMoNoOperationCompleted);
            }
            this.InvokeAsync("RecordWIPCurrMoNo", new object[] {
                        InXml}, this.RecordWIPCurrMoNoOperationCompleted, userState);
        }
        
        private void OnRecordWIPCurrMoNoOperationCompleted(object arg) {
            if ((this.RecordWIPCurrMoNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordWIPCurrMoNoCompleted(this, new RecordWIPCurrMoNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/OperateBinding", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OperateBinding(string InXml) {
            object[] results = this.Invoke("OperateBinding", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OperateBindingAsync(string InXml) {
            this.OperateBindingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void OperateBindingAsync(string InXml, object userState) {
            if ((this.OperateBindingOperationCompleted == null)) {
                this.OperateBindingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperateBindingOperationCompleted);
            }
            this.InvokeAsync("OperateBinding", new object[] {
                        InXml}, this.OperateBindingOperationCompleted, userState);
        }
        
        private void OnOperateBindingOperationCompleted(object arg) {
            if ((this.OperateBindingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperateBindingCompleted(this, new OperateBindingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPPadBindingInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPPadBindingInfo(string InXml) {
            object[] results = this.Invoke("LoadWIPPadBindingInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPPadBindingInfoAsync(string InXml) {
            this.LoadWIPPadBindingInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPPadBindingInfoAsync(string InXml, object userState) {
            if ((this.LoadWIPPadBindingInfoOperationCompleted == null)) {
                this.LoadWIPPadBindingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPPadBindingInfoOperationCompleted);
            }
            this.InvokeAsync("LoadWIPPadBindingInfo", new object[] {
                        InXml}, this.LoadWIPPadBindingInfoOperationCompleted, userState);
        }
        
        private void OnLoadWIPPadBindingInfoOperationCompleted(object arg) {
            if ((this.LoadWIPPadBindingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPPadBindingInfoCompleted(this, new LoadWIPPadBindingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCurrMaterialInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCurrMaterialInfo(string InXml) {
            object[] results = this.Invoke("LoadCurrMaterialInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCurrMaterialInfoAsync(string InXml) {
            this.LoadCurrMaterialInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCurrMaterialInfoAsync(string InXml, object userState) {
            if ((this.LoadCurrMaterialInfoOperationCompleted == null)) {
                this.LoadCurrMaterialInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCurrMaterialInfoOperationCompleted);
            }
            this.InvokeAsync("LoadCurrMaterialInfo", new object[] {
                        InXml}, this.LoadCurrMaterialInfoOperationCompleted, userState);
        }
        
        private void OnLoadCurrMaterialInfoOperationCompleted(object arg) {
            if ((this.LoadCurrMaterialInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCurrMaterialInfoCompleted(this, new LoadCurrMaterialInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSchedule", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSchedule(string InXml) {
            object[] results = this.Invoke("LoadSchedule", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadScheduleAsync(string InXml) {
            this.LoadScheduleAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadScheduleAsync(string InXml, object userState) {
            if ((this.LoadScheduleOperationCompleted == null)) {
                this.LoadScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadScheduleOperationCompleted);
            }
            this.InvokeAsync("LoadSchedule", new object[] {
                        InXml}, this.LoadScheduleOperationCompleted, userState);
        }
        
        private void OnLoadScheduleOperationCompleted(object arg) {
            if ((this.LoadScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadScheduleCompleted(this, new LoadScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOLabelPath", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOLabelPath(string InXml) {
            object[] results = this.Invoke("LoadMOLabelPath", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOLabelPathAsync(string InXml) {
            this.LoadMOLabelPathAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOLabelPathAsync(string InXml, object userState) {
            if ((this.LoadMOLabelPathOperationCompleted == null)) {
                this.LoadMOLabelPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOLabelPathOperationCompleted);
            }
            this.InvokeAsync("LoadMOLabelPath", new object[] {
                        InXml}, this.LoadMOLabelPathOperationCompleted, userState);
        }
        
        private void OnLoadMOLabelPathOperationCompleted(object arg) {
            if ((this.LoadMOLabelPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOLabelPathCompleted(this, new LoadMOLabelPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelMOLabelPath", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelMOLabelPath(string InXml) {
            object[] results = this.Invoke("DelMOLabelPath", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelMOLabelPathAsync(string InXml) {
            this.DelMOLabelPathAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelMOLabelPathAsync(string InXml, object userState) {
            if ((this.DelMOLabelPathOperationCompleted == null)) {
                this.DelMOLabelPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMOLabelPathOperationCompleted);
            }
            this.InvokeAsync("DelMOLabelPath", new object[] {
                        InXml}, this.DelMOLabelPathOperationCompleted, userState);
        }
        
        private void OnDelMOLabelPathOperationCompleted(object arg) {
            if ((this.DelMOLabelPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMOLabelPathCompleted(this, new DelMOLabelPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditMOLabelPath", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditMOLabelPath(string InXml) {
            object[] results = this.Invoke("EditMOLabelPath", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditMOLabelPathAsync(string InXml) {
            this.EditMOLabelPathAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditMOLabelPathAsync(string InXml, object userState) {
            if ((this.EditMOLabelPathOperationCompleted == null)) {
                this.EditMOLabelPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditMOLabelPathOperationCompleted);
            }
            this.InvokeAsync("EditMOLabelPath", new object[] {
                        InXml}, this.EditMOLabelPathOperationCompleted, userState);
        }
        
        private void OnEditMOLabelPathOperationCompleted(object arg) {
            if ((this.EditMOLabelPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditMOLabelPathCompleted(this, new EditMOLabelPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMCSerialNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMCSerialNo(string InXml) {
            object[] results = this.Invoke("LoadMCSerialNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMCSerialNoAsync(string InXml) {
            this.LoadMCSerialNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMCSerialNoAsync(string InXml, object userState) {
            if ((this.LoadMCSerialNoOperationCompleted == null)) {
                this.LoadMCSerialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMCSerialNoOperationCompleted);
            }
            this.InvokeAsync("LoadMCSerialNo", new object[] {
                        InXml}, this.LoadMCSerialNoOperationCompleted, userState);
        }
        
        private void OnLoadMCSerialNoOperationCompleted(object arg) {
            if ((this.LoadMCSerialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMCSerialNoCompleted(this, new LoadMCSerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMTransferBasisForDB1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMTransferBasisForDB1() {
            object[] results = this.Invoke("LoadPLMTransferBasisForDB1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB1Async() {
            this.LoadPLMTransferBasisForDB1Async(null);
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB1Async(object userState) {
            if ((this.LoadPLMTransferBasisForDB1OperationCompleted == null)) {
                this.LoadPLMTransferBasisForDB1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMTransferBasisForDB1OperationCompleted);
            }
            this.InvokeAsync("LoadPLMTransferBasisForDB1", new object[0], this.LoadPLMTransferBasisForDB1OperationCompleted, userState);
        }
        
        private void OnLoadPLMTransferBasisForDB1OperationCompleted(object arg) {
            if ((this.LoadPLMTransferBasisForDB1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMTransferBasisForDB1Completed(this, new LoadPLMTransferBasisForDB1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdatePLMTransferResultForDB1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePLMTransferResultForDB1(string InXml) {
            object[] results = this.Invoke("UpdatePLMTransferResultForDB1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePLMTransferResultForDB1Async(string InXml) {
            this.UpdatePLMTransferResultForDB1Async(InXml, null);
        }
        
        /// <remarks/>
        public void UpdatePLMTransferResultForDB1Async(string InXml, object userState) {
            if ((this.UpdatePLMTransferResultForDB1OperationCompleted == null)) {
                this.UpdatePLMTransferResultForDB1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePLMTransferResultForDB1OperationCompleted);
            }
            this.InvokeAsync("UpdatePLMTransferResultForDB1", new object[] {
                        InXml}, this.UpdatePLMTransferResultForDB1OperationCompleted, userState);
        }
        
        private void OnUpdatePLMTransferResultForDB1OperationCompleted(object arg) {
            if ((this.UpdatePLMTransferResultForDB1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePLMTransferResultForDB1Completed(this, new UpdatePLMTransferResultForDB1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMTransferBasisForDB2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMTransferBasisForDB2() {
            object[] results = this.Invoke("LoadPLMTransferBasisForDB2", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB2Async() {
            this.LoadPLMTransferBasisForDB2Async(null);
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB2Async(object userState) {
            if ((this.LoadPLMTransferBasisForDB2OperationCompleted == null)) {
                this.LoadPLMTransferBasisForDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMTransferBasisForDB2OperationCompleted);
            }
            this.InvokeAsync("LoadPLMTransferBasisForDB2", new object[0], this.LoadPLMTransferBasisForDB2OperationCompleted, userState);
        }
        
        private void OnLoadPLMTransferBasisForDB2OperationCompleted(object arg) {
            if ((this.LoadPLMTransferBasisForDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMTransferBasisForDB2Completed(this, new LoadPLMTransferBasisForDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMTransferBasisForDB2_Other", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMTransferBasisForDB2_Other() {
            object[] results = this.Invoke("LoadPLMTransferBasisForDB2_Other", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB2_OtherAsync() {
            this.LoadPLMTransferBasisForDB2_OtherAsync(null);
        }
        
        /// <remarks/>
        public void LoadPLMTransferBasisForDB2_OtherAsync(object userState) {
            if ((this.LoadPLMTransferBasisForDB2_OtherOperationCompleted == null)) {
                this.LoadPLMTransferBasisForDB2_OtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMTransferBasisForDB2_OtherOperationCompleted);
            }
            this.InvokeAsync("LoadPLMTransferBasisForDB2_Other", new object[0], this.LoadPLMTransferBasisForDB2_OtherOperationCompleted, userState);
        }
        
        private void OnLoadPLMTransferBasisForDB2_OtherOperationCompleted(object arg) {
            if ((this.LoadPLMTransferBasisForDB2_OtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMTransferBasisForDB2_OtherCompleted(this, new LoadPLMTransferBasisForDB2_OtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdatePLMTransferResultForDB2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePLMTransferResultForDB2(string InXml) {
            object[] results = this.Invoke("UpdatePLMTransferResultForDB2", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePLMTransferResultForDB2Async(string InXml) {
            this.UpdatePLMTransferResultForDB2Async(InXml, null);
        }
        
        /// <remarks/>
        public void UpdatePLMTransferResultForDB2Async(string InXml, object userState) {
            if ((this.UpdatePLMTransferResultForDB2OperationCompleted == null)) {
                this.UpdatePLMTransferResultForDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePLMTransferResultForDB2OperationCompleted);
            }
            this.InvokeAsync("UpdatePLMTransferResultForDB2", new object[] {
                        InXml}, this.UpdatePLMTransferResultForDB2OperationCompleted, userState);
        }
        
        private void OnUpdatePLMTransferResultForDB2OperationCompleted(object arg) {
            if ((this.UpdatePLMTransferResultForDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePLMTransferResultForDB2Completed(this, new UpdatePLMTransferResultForDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMData(string InXml) {
            object[] results = this.Invoke("LoadPLMData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMDataAsync(string InXml) {
            this.LoadPLMDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPLMDataAsync(string InXml, object userState) {
            if ((this.LoadPLMDataOperationCompleted == null)) {
                this.LoadPLMDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMDataOperationCompleted);
            }
            this.InvokeAsync("LoadPLMData", new object[] {
                        InXml}, this.LoadPLMDataOperationCompleted, userState);
        }
        
        private void OnLoadPLMDataOperationCompleted(object arg) {
            if ((this.LoadPLMDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMDataCompleted(this, new LoadPLMDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMDataByMachineNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMDataByMachineNo(string InXml) {
            object[] results = this.Invoke("LoadPLMDataByMachineNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMDataByMachineNoAsync(string InXml) {
            this.LoadPLMDataByMachineNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPLMDataByMachineNoAsync(string InXml, object userState) {
            if ((this.LoadPLMDataByMachineNoOperationCompleted == null)) {
                this.LoadPLMDataByMachineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMDataByMachineNoOperationCompleted);
            }
            this.InvokeAsync("LoadPLMDataByMachineNo", new object[] {
                        InXml}, this.LoadPLMDataByMachineNoOperationCompleted, userState);
        }
        
        private void OnLoadPLMDataByMachineNoOperationCompleted(object arg) {
            if ((this.LoadPLMDataByMachineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMDataByMachineNoCompleted(this, new LoadPLMDataByMachineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateDownLoadDek", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDownLoadDek(string InXml) {
            object[] results = this.Invoke("UpdateDownLoadDek", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDownLoadDekAsync(string InXml) {
            this.UpdateDownLoadDekAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateDownLoadDekAsync(string InXml, object userState) {
            if ((this.UpdateDownLoadDekOperationCompleted == null)) {
                this.UpdateDownLoadDekOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDownLoadDekOperationCompleted);
            }
            this.InvokeAsync("UpdateDownLoadDek", new object[] {
                        InXml}, this.UpdateDownLoadDekOperationCompleted, userState);
        }
        
        private void OnUpdateDownLoadDekOperationCompleted(object arg) {
            if ((this.UpdateDownLoadDekCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDownLoadDekCompleted(this, new UpdateDownLoadDekCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMMaterial_other", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMMaterial_other() {
            object[] results = this.Invoke("LoadPLMMaterial_other", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMMaterial_otherAsync() {
            this.LoadPLMMaterial_otherAsync(null);
        }
        
        /// <remarks/>
        public void LoadPLMMaterial_otherAsync(object userState) {
            if ((this.LoadPLMMaterial_otherOperationCompleted == null)) {
                this.LoadPLMMaterial_otherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMMaterial_otherOperationCompleted);
            }
            this.InvokeAsync("LoadPLMMaterial_other", new object[0], this.LoadPLMMaterial_otherOperationCompleted, userState);
        }
        
        private void OnLoadPLMMaterial_otherOperationCompleted(object arg) {
            if ((this.LoadPLMMaterial_otherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMMaterial_otherCompleted(this, new LoadPLMMaterial_otherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PIG1Packing", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PIG1Packing(string UserNo, string BoxNo, int FullFlag, ref System.Data.DataTable dtPackBasis, string FRN, int BoxQtySet, int BoxQtyCur) {
            object[] results = this.Invoke("PIG1Packing", new object[] {
                        UserNo,
                        BoxNo,
                        FullFlag,
                        dtPackBasis,
                        FRN,
                        BoxQtySet,
                        BoxQtyCur});
            dtPackBasis = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PIG1PackingAsync(string UserNo, string BoxNo, int FullFlag, System.Data.DataTable dtPackBasis, string FRN, int BoxQtySet, int BoxQtyCur) {
            this.PIG1PackingAsync(UserNo, BoxNo, FullFlag, dtPackBasis, FRN, BoxQtySet, BoxQtyCur, null);
        }
        
        /// <remarks/>
        public void PIG1PackingAsync(string UserNo, string BoxNo, int FullFlag, System.Data.DataTable dtPackBasis, string FRN, int BoxQtySet, int BoxQtyCur, object userState) {
            if ((this.PIG1PackingOperationCompleted == null)) {
                this.PIG1PackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPIG1PackingOperationCompleted);
            }
            this.InvokeAsync("PIG1Packing", new object[] {
                        UserNo,
                        BoxNo,
                        FullFlag,
                        dtPackBasis,
                        FRN,
                        BoxQtySet,
                        BoxQtyCur}, this.PIG1PackingOperationCompleted, userState);
        }
        
        private void OnPIG1PackingOperationCompleted(object arg) {
            if ((this.PIG1PackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PIG1PackingCompleted(this, new PIG1PackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetPIG1ListNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPIG1ListNo(string InXml) {
            object[] results = this.Invoke("GetPIG1ListNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIG1ListNoAsync(string InXml) {
            this.GetPIG1ListNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetPIG1ListNoAsync(string InXml, object userState) {
            if ((this.GetPIG1ListNoOperationCompleted == null)) {
                this.GetPIG1ListNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIG1ListNoOperationCompleted);
            }
            this.InvokeAsync("GetPIG1ListNo", new object[] {
                        InXml}, this.GetPIG1ListNoOperationCompleted, userState);
        }
        
        private void OnGetPIG1ListNoOperationCompleted(object arg) {
            if ((this.GetPIG1ListNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIG1ListNoCompleted(this, new GetPIG1ListNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetPIG1LotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPIG1LotState(string LotNo, string MONo) {
            object[] results = this.Invoke("GetPIG1LotState", new object[] {
                        LotNo,
                        MONo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIG1LotStateAsync(string LotNo, string MONo) {
            this.GetPIG1LotStateAsync(LotNo, MONo, null);
        }
        
        /// <remarks/>
        public void GetPIG1LotStateAsync(string LotNo, string MONo, object userState) {
            if ((this.GetPIG1LotStateOperationCompleted == null)) {
                this.GetPIG1LotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIG1LotStateOperationCompleted);
            }
            this.InvokeAsync("GetPIG1LotState", new object[] {
                        LotNo,
                        MONo}, this.GetPIG1LotStateOperationCompleted, userState);
        }
        
        private void OnGetPIG1LotStateOperationCompleted(object arg) {
            if ((this.GetPIG1LotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIG1LotStateCompleted(this, new GetPIG1LotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetWaitPackQty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWaitPackQty(string MONo) {
            object[] results = this.Invoke("GetWaitPackQty", new object[] {
                        MONo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaitPackQtyAsync(string MONo) {
            this.GetWaitPackQtyAsync(MONo, null);
        }
        
        /// <remarks/>
        public void GetWaitPackQtyAsync(string MONo, object userState) {
            if ((this.GetWaitPackQtyOperationCompleted == null)) {
                this.GetWaitPackQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaitPackQtyOperationCompleted);
            }
            this.InvokeAsync("GetWaitPackQty", new object[] {
                        MONo}, this.GetWaitPackQtyOperationCompleted, userState);
        }
        
        private void OnGetWaitPackQtyOperationCompleted(object arg) {
            if ((this.GetWaitPackQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaitPackQtyCompleted(this, new GetWaitPackQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetBoxLock", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBoxLock(string InXml) {
            object[] results = this.Invoke("GetBoxLock", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxLockAsync(string InXml) {
            this.GetBoxLockAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetBoxLockAsync(string InXml, object userState) {
            if ((this.GetBoxLockOperationCompleted == null)) {
                this.GetBoxLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxLockOperationCompleted);
            }
            this.InvokeAsync("GetBoxLock", new object[] {
                        InXml}, this.GetBoxLockOperationCompleted, userState);
        }
        
        private void OnGetBoxLockOperationCompleted(object arg) {
            if ((this.GetBoxLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxLockCompleted(this, new GetBoxLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdBoxLock", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdBoxLock(string UserNo, string MONo, int LastBoxQty, int BoxQtySet) {
            object[] results = this.Invoke("UpdBoxLock", new object[] {
                        UserNo,
                        MONo,
                        LastBoxQty,
                        BoxQtySet});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdBoxLockAsync(string UserNo, string MONo, int LastBoxQty, int BoxQtySet) {
            this.UpdBoxLockAsync(UserNo, MONo, LastBoxQty, BoxQtySet, null);
        }
        
        /// <remarks/>
        public void UpdBoxLockAsync(string UserNo, string MONo, int LastBoxQty, int BoxQtySet, object userState) {
            if ((this.UpdBoxLockOperationCompleted == null)) {
                this.UpdBoxLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdBoxLockOperationCompleted);
            }
            this.InvokeAsync("UpdBoxLock", new object[] {
                        UserNo,
                        MONo,
                        LastBoxQty,
                        BoxQtySet}, this.UpdBoxLockOperationCompleted, userState);
        }
        
        private void OnUpdBoxLockOperationCompleted(object arg) {
            if ((this.UpdBoxLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdBoxLockCompleted(this, new UpdBoxLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PackUnLock", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PackUnLock(string UserNo, string MONo) {
            object[] results = this.Invoke("PackUnLock", new object[] {
                        UserNo,
                        MONo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PackUnLockAsync(string UserNo, string MONo) {
            this.PackUnLockAsync(UserNo, MONo, null);
        }
        
        /// <remarks/>
        public void PackUnLockAsync(string UserNo, string MONo, object userState) {
            if ((this.PackUnLockOperationCompleted == null)) {
                this.PackUnLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPackUnLockOperationCompleted);
            }
            this.InvokeAsync("PackUnLock", new object[] {
                        UserNo,
                        MONo}, this.PackUnLockOperationCompleted, userState);
        }
        
        private void OnPackUnLockOperationCompleted(object arg) {
            if ((this.PackUnLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PackUnLockCompleted(this, new PackUnLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/funIsPIG1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string funIsPIG1(string InXml) {
            object[] results = this.Invoke("funIsPIG1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void funIsPIG1Async(string InXml) {
            this.funIsPIG1Async(InXml, null);
        }
        
        /// <remarks/>
        public void funIsPIG1Async(string InXml, object userState) {
            if ((this.funIsPIG1OperationCompleted == null)) {
                this.funIsPIG1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfunIsPIG1OperationCompleted);
            }
            this.InvokeAsync("funIsPIG1", new object[] {
                        InXml}, this.funIsPIG1OperationCompleted, userState);
        }
        
        private void OnfunIsPIG1OperationCompleted(object arg) {
            if ((this.funIsPIG1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.funIsPIG1Completed(this, new funIsPIG1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetPackingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPackingBasis(string InXml) {
            object[] results = this.Invoke("GetPackingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackingBasisAsync(string InXml) {
            this.GetPackingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetPackingBasisAsync(string InXml, object userState) {
            if ((this.GetPackingBasisOperationCompleted == null)) {
                this.GetPackingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackingBasisOperationCompleted);
            }
            this.InvokeAsync("GetPackingBasis", new object[] {
                        InXml}, this.GetPackingBasisOperationCompleted, userState);
        }
        
        private void OnGetPackingBasisOperationCompleted(object arg) {
            if ((this.GetPackingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackingBasisCompleted(this, new GetPackingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPIG1BoxBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPIG1BoxBasis(string InXml) {
            object[] results = this.Invoke("LoadPIG1BoxBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPIG1BoxBasisAsync(string InXml) {
            this.LoadPIG1BoxBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPIG1BoxBasisAsync(string InXml, object userState) {
            if ((this.LoadPIG1BoxBasisOperationCompleted == null)) {
                this.LoadPIG1BoxBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPIG1BoxBasisOperationCompleted);
            }
            this.InvokeAsync("LoadPIG1BoxBasis", new object[] {
                        InXml}, this.LoadPIG1BoxBasisOperationCompleted, userState);
        }
        
        private void OnLoadPIG1BoxBasisOperationCompleted(object arg) {
            if ((this.LoadPIG1BoxBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPIG1BoxBasisCompleted(this, new LoadPIG1BoxBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetFRN", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFRN(string InXml) {
            object[] results = this.Invoke("GetFRN", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFRNAsync(string InXml) {
            this.GetFRNAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetFRNAsync(string InXml, object userState) {
            if ((this.GetFRNOperationCompleted == null)) {
                this.GetFRNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFRNOperationCompleted);
            }
            this.InvokeAsync("GetFRN", new object[] {
                        InXml}, this.GetFRNOperationCompleted, userState);
        }
        
        private void OnGetFRNOperationCompleted(object arg) {
            if ((this.GetFRNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFRNCompleted(this, new GetFRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PIG1Inventory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PIG1Inventory(string UserNo, string BoxNoList) {
            object[] results = this.Invoke("PIG1Inventory", new object[] {
                        UserNo,
                        BoxNoList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PIG1InventoryAsync(string UserNo, string BoxNoList) {
            this.PIG1InventoryAsync(UserNo, BoxNoList, null);
        }
        
        /// <remarks/>
        public void PIG1InventoryAsync(string UserNo, string BoxNoList, object userState) {
            if ((this.PIG1InventoryOperationCompleted == null)) {
                this.PIG1InventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPIG1InventoryOperationCompleted);
            }
            this.InvokeAsync("PIG1Inventory", new object[] {
                        UserNo,
                        BoxNoList}, this.PIG1InventoryOperationCompleted, userState);
        }
        
        private void OnPIG1InventoryOperationCompleted(object arg) {
            if ((this.PIG1InventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PIG1InventoryCompleted(this, new PIG1InventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PIG1SplitBox", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PIG1SplitBox(string BoxNo, string BoxNoSpl, int SNQtySpl, string UserNo) {
            object[] results = this.Invoke("PIG1SplitBox", new object[] {
                        BoxNo,
                        BoxNoSpl,
                        SNQtySpl,
                        UserNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PIG1SplitBoxAsync(string BoxNo, string BoxNoSpl, int SNQtySpl, string UserNo) {
            this.PIG1SplitBoxAsync(BoxNo, BoxNoSpl, SNQtySpl, UserNo, null);
        }
        
        /// <remarks/>
        public void PIG1SplitBoxAsync(string BoxNo, string BoxNoSpl, int SNQtySpl, string UserNo, object userState) {
            if ((this.PIG1SplitBoxOperationCompleted == null)) {
                this.PIG1SplitBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPIG1SplitBoxOperationCompleted);
            }
            this.InvokeAsync("PIG1SplitBox", new object[] {
                        BoxNo,
                        BoxNoSpl,
                        SNQtySpl,
                        UserNo}, this.PIG1SplitBoxOperationCompleted, userState);
        }
        
        private void OnPIG1SplitBoxOperationCompleted(object arg) {
            if ((this.PIG1SplitBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PIG1SplitBoxCompleted(this, new PIG1SplitBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PIG1MergeBox", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PIG1MergeBox(string BoxNoNew, string BoxNo, string BoxNoMer, string UserNo) {
            object[] results = this.Invoke("PIG1MergeBox", new object[] {
                        BoxNoNew,
                        BoxNo,
                        BoxNoMer,
                        UserNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PIG1MergeBoxAsync(string BoxNoNew, string BoxNo, string BoxNoMer, string UserNo) {
            this.PIG1MergeBoxAsync(BoxNoNew, BoxNo, BoxNoMer, UserNo, null);
        }
        
        /// <remarks/>
        public void PIG1MergeBoxAsync(string BoxNoNew, string BoxNo, string BoxNoMer, string UserNo, object userState) {
            if ((this.PIG1MergeBoxOperationCompleted == null)) {
                this.PIG1MergeBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPIG1MergeBoxOperationCompleted);
            }
            this.InvokeAsync("PIG1MergeBox", new object[] {
                        BoxNoNew,
                        BoxNo,
                        BoxNoMer,
                        UserNo}, this.PIG1MergeBoxOperationCompleted, userState);
        }
        
        private void OnPIG1MergeBoxOperationCompleted(object arg) {
            if ((this.PIG1MergeBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PIG1MergeBoxCompleted(this, new PIG1MergeBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/PIG1InvOut", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PIG1InvOut(string UserNo, string BoxNoList) {
            object[] results = this.Invoke("PIG1InvOut", new object[] {
                        UserNo,
                        BoxNoList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PIG1InvOutAsync(string UserNo, string BoxNoList) {
            this.PIG1InvOutAsync(UserNo, BoxNoList, null);
        }
        
        /// <remarks/>
        public void PIG1InvOutAsync(string UserNo, string BoxNoList, object userState) {
            if ((this.PIG1InvOutOperationCompleted == null)) {
                this.PIG1InvOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPIG1InvOutOperationCompleted);
            }
            this.InvokeAsync("PIG1InvOut", new object[] {
                        UserNo,
                        BoxNoList}, this.PIG1InvOutOperationCompleted, userState);
        }
        
        private void OnPIG1InvOutOperationCompleted(object arg) {
            if ((this.PIG1InvOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PIG1InvOutCompleted(this, new PIG1InvOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPackingLabelDataCreate_PIG1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPackingLabelDataCreate_PIG1(string InXml) {
            object[] results = this.Invoke("ExeMOPackingLabelDataCreate_PIG1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_PIG1Async(string InXml) {
            this.ExeMOPackingLabelDataCreate_PIG1Async(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_PIG1Async(string InXml, object userState) {
            if ((this.ExeMOPackingLabelDataCreate_PIG1OperationCompleted == null)) {
                this.ExeMOPackingLabelDataCreate_PIG1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPackingLabelDataCreate_PIG1OperationCompleted);
            }
            this.InvokeAsync("ExeMOPackingLabelDataCreate_PIG1", new object[] {
                        InXml}, this.ExeMOPackingLabelDataCreate_PIG1OperationCompleted, userState);
        }
        
        private void OnExeMOPackingLabelDataCreate_PIG1OperationCompleted(object arg) {
            if ((this.ExeMOPackingLabelDataCreate_PIG1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPackingLabelDataCreate_PIG1Completed(this, new ExeMOPackingLabelDataCreate_PIG1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingPrintLabel_PIG1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingPrintLabel_PIG1(string InXml) {
            object[] results = this.Invoke("LoadMOPackingPrintLabel_PIG1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingPrintLabel_PIG1Async(string InXml) {
            this.LoadMOPackingPrintLabel_PIG1Async(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingPrintLabel_PIG1Async(string InXml, object userState) {
            if ((this.LoadMOPackingPrintLabel_PIG1OperationCompleted == null)) {
                this.LoadMOPackingPrintLabel_PIG1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingPrintLabel_PIG1OperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingPrintLabel_PIG1", new object[] {
                        InXml}, this.LoadMOPackingPrintLabel_PIG1OperationCompleted, userState);
        }
        
        private void OnLoadMOPackingPrintLabel_PIG1OperationCompleted(object arg) {
            if ((this.LoadMOPackingPrintLabel_PIG1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingPrintLabel_PIG1Completed(this, new LoadMOPackingPrintLabel_PIG1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeTRSCombinePickup_PIG1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeTRSCombinePickup_PIG1(string InXml) {
            object[] results = this.Invoke("ExeTRSCombinePickup_PIG1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeTRSCombinePickup_PIG1Async(string InXml) {
            this.ExeTRSCombinePickup_PIG1Async(InXml, null);
        }
        
        /// <remarks/>
        public void ExeTRSCombinePickup_PIG1Async(string InXml, object userState) {
            if ((this.ExeTRSCombinePickup_PIG1OperationCompleted == null)) {
                this.ExeTRSCombinePickup_PIG1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeTRSCombinePickup_PIG1OperationCompleted);
            }
            this.InvokeAsync("ExeTRSCombinePickup_PIG1", new object[] {
                        InXml}, this.ExeTRSCombinePickup_PIG1OperationCompleted, userState);
        }
        
        private void OnExeTRSCombinePickup_PIG1OperationCompleted(object arg) {
            if ((this.ExeTRSCombinePickup_PIG1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeTRSCombinePickup_PIG1Completed(this, new ExeTRSCombinePickup_PIG1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetPIG1BoxNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPIG1BoxNo(string SNNo) {
            object[] results = this.Invoke("GetPIG1BoxNo", new object[] {
                        SNNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIG1BoxNoAsync(string SNNo) {
            this.GetPIG1BoxNoAsync(SNNo, null);
        }
        
        /// <remarks/>
        public void GetPIG1BoxNoAsync(string SNNo, object userState) {
            if ((this.GetPIG1BoxNoOperationCompleted == null)) {
                this.GetPIG1BoxNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIG1BoxNoOperationCompleted);
            }
            this.InvokeAsync("GetPIG1BoxNo", new object[] {
                        SNNo}, this.GetPIG1BoxNoOperationCompleted, userState);
        }
        
        private void OnGetPIG1BoxNoOperationCompleted(object arg) {
            if ((this.GetPIG1BoxNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIG1BoxNoCompleted(this, new GetPIG1BoxNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadHMILotMonoInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadHMILotMonoInfo(string InXml) {
            object[] results = this.Invoke("LoadHMILotMonoInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadHMILotMonoInfoAsync(string InXml) {
            this.LoadHMILotMonoInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadHMILotMonoInfoAsync(string InXml, object userState) {
            if ((this.LoadHMILotMonoInfoOperationCompleted == null)) {
                this.LoadHMILotMonoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadHMILotMonoInfoOperationCompleted);
            }
            this.InvokeAsync("LoadHMILotMonoInfo", new object[] {
                        InXml}, this.LoadHMILotMonoInfoOperationCompleted, userState);
        }
        
        private void OnLoadHMILotMonoInfoOperationCompleted(object arg) {
            if ((this.LoadHMILotMonoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadHMILotMonoInfoCompleted(this, new LoadHMILotMonoInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPLMBomDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPLMBomDetail(string InXml) {
            object[] results = this.Invoke("LoadPLMBomDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPLMBomDetailAsync(string InXml) {
            this.LoadPLMBomDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPLMBomDetailAsync(string InXml, object userState) {
            if ((this.LoadPLMBomDetailOperationCompleted == null)) {
                this.LoadPLMBomDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPLMBomDetailOperationCompleted);
            }
            this.InvokeAsync("LoadPLMBomDetail", new object[] {
                        InXml}, this.LoadPLMBomDetailOperationCompleted, userState);
        }
        
        private void OnLoadPLMBomDetailOperationCompleted(object arg) {
            if ((this.LoadPLMBomDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPLMBomDetailCompleted(this, new LoadPLMBomDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLaserBasePoint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLaserBasePoint(string InXml) {
            object[] results = this.Invoke("LoadLaserBasePoint", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLaserBasePointAsync(string InXml) {
            this.LoadLaserBasePointAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLaserBasePointAsync(string InXml, object userState) {
            if ((this.LoadLaserBasePointOperationCompleted == null)) {
                this.LoadLaserBasePointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLaserBasePointOperationCompleted);
            }
            this.InvokeAsync("LoadLaserBasePoint", new object[] {
                        InXml}, this.LoadLaserBasePointOperationCompleted, userState);
        }
        
        private void OnLoadLaserBasePointOperationCompleted(object arg) {
            if ((this.LoadLaserBasePointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLaserBasePointCompleted(this, new LoadLaserBasePointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPackingLabelDataCreate_SIS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPackingLabelDataCreate_SIS(string InXml) {
            object[] results = this.Invoke("ExeMOPackingLabelDataCreate_SIS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_SISAsync(string InXml) {
            this.ExeMOPackingLabelDataCreate_SISAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreate_SISAsync(string InXml, object userState) {
            if ((this.ExeMOPackingLabelDataCreate_SISOperationCompleted == null)) {
                this.ExeMOPackingLabelDataCreate_SISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPackingLabelDataCreate_SISOperationCompleted);
            }
            this.InvokeAsync("ExeMOPackingLabelDataCreate_SIS", new object[] {
                        InXml}, this.ExeMOPackingLabelDataCreate_SISOperationCompleted, userState);
        }
        
        private void OnExeMOPackingLabelDataCreate_SISOperationCompleted(object arg) {
            if ((this.ExeMOPackingLabelDataCreate_SISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPackingLabelDataCreate_SISCompleted(this, new ExeMOPackingLabelDataCreate_SISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Loadsysdate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Loadsysdate(string InXml) {
            object[] results = this.Invoke("Loadsysdate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadsysdateAsync(string InXml) {
            this.LoadsysdateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadsysdateAsync(string InXml, object userState) {
            if ((this.LoadsysdateOperationCompleted == null)) {
                this.LoadsysdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadsysdateOperationCompleted);
            }
            this.InvokeAsync("Loadsysdate", new object[] {
                        InXml}, this.LoadsysdateOperationCompleted, userState);
        }
        
        private void OnLoadsysdateOperationCompleted(object arg) {
            if ((this.LoadsysdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadsysdateCompleted(this, new LoadsysdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOASMProcedure", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOASMProcedure(string InXml) {
            object[] results = this.Invoke("LoadMOASMProcedure", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOASMProcedureAsync(string InXml) {
            this.LoadMOASMProcedureAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOASMProcedureAsync(string InXml, object userState) {
            if ((this.LoadMOASMProcedureOperationCompleted == null)) {
                this.LoadMOASMProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOASMProcedureOperationCompleted);
            }
            this.InvokeAsync("LoadMOASMProcedure", new object[] {
                        InXml}, this.LoadMOASMProcedureOperationCompleted, userState);
        }
        
        private void OnLoadMOASMProcedureOperationCompleted(object arg) {
            if ((this.LoadMOASMProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOASMProcedureCompleted(this, new LoadMOASMProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOASMSubOPNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOASMSubOPNo(string InXml) {
            object[] results = this.Invoke("LoadMOASMSubOPNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOASMSubOPNoAsync(string InXml) {
            this.LoadMOASMSubOPNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOASMSubOPNoAsync(string InXml, object userState) {
            if ((this.LoadMOASMSubOPNoOperationCompleted == null)) {
                this.LoadMOASMSubOPNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOASMSubOPNoOperationCompleted);
            }
            this.InvokeAsync("LoadMOASMSubOPNo", new object[] {
                        InXml}, this.LoadMOASMSubOPNoOperationCompleted, userState);
        }
        
        private void OnLoadMOASMSubOPNoOperationCompleted(object arg) {
            if ((this.LoadMOASMSubOPNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOASMSubOPNoCompleted(this, new LoadMOASMSubOPNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/BindMOASMProcedure", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BindMOASMProcedure(string UserNo, string MONo, System.Data.DataSet dsMU, ref string ErrMsg) {
            object[] results = this.Invoke("BindMOASMProcedure", new object[] {
                        UserNo,
                        MONo,
                        dsMU,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BindMOASMProcedureAsync(string UserNo, string MONo, System.Data.DataSet dsMU, string ErrMsg) {
            this.BindMOASMProcedureAsync(UserNo, MONo, dsMU, ErrMsg, null);
        }
        
        /// <remarks/>
        public void BindMOASMProcedureAsync(string UserNo, string MONo, System.Data.DataSet dsMU, string ErrMsg, object userState) {
            if ((this.BindMOASMProcedureOperationCompleted == null)) {
                this.BindMOASMProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindMOASMProcedureOperationCompleted);
            }
            this.InvokeAsync("BindMOASMProcedure", new object[] {
                        UserNo,
                        MONo,
                        dsMU,
                        ErrMsg}, this.BindMOASMProcedureOperationCompleted, userState);
        }
        
        private void OnBindMOASMProcedureOperationCompleted(object arg) {
            if ((this.BindMOASMProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindMOASMProcedureCompleted(this, new BindMOASMProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateMOASMProcedure", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMOASMProcedure(string MONo, string OPNo, string SubOPNo, int ASMSeq, string ComponentNo, ref string ErrMsg) {
            object[] results = this.Invoke("UpdateMOASMProcedure", new object[] {
                        MONo,
                        OPNo,
                        SubOPNo,
                        ASMSeq,
                        ComponentNo,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMOASMProcedureAsync(string MONo, string OPNo, string SubOPNo, int ASMSeq, string ComponentNo, string ErrMsg) {
            this.UpdateMOASMProcedureAsync(MONo, OPNo, SubOPNo, ASMSeq, ComponentNo, ErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateMOASMProcedureAsync(string MONo, string OPNo, string SubOPNo, int ASMSeq, string ComponentNo, string ErrMsg, object userState) {
            if ((this.UpdateMOASMProcedureOperationCompleted == null)) {
                this.UpdateMOASMProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMOASMProcedureOperationCompleted);
            }
            this.InvokeAsync("UpdateMOASMProcedure", new object[] {
                        MONo,
                        OPNo,
                        SubOPNo,
                        ASMSeq,
                        ComponentNo,
                        ErrMsg}, this.UpdateMOASMProcedureOperationCompleted, userState);
        }
        
        private void OnUpdateMOASMProcedureOperationCompleted(object arg) {
            if ((this.UpdateMOASMProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMOASMProcedureCompleted(this, new UpdateMOASMProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateMOASMProcedureAll", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMOASMProcedureAll(string UserNo, string MONo, string OPNo, System.Data.DataSet ASMProcedure, ref string ErrMsg) {
            object[] results = this.Invoke("UpdateMOASMProcedureAll", new object[] {
                        UserNo,
                        MONo,
                        OPNo,
                        ASMProcedure,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMOASMProcedureAllAsync(string UserNo, string MONo, string OPNo, System.Data.DataSet ASMProcedure, string ErrMsg) {
            this.UpdateMOASMProcedureAllAsync(UserNo, MONo, OPNo, ASMProcedure, ErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateMOASMProcedureAllAsync(string UserNo, string MONo, string OPNo, System.Data.DataSet ASMProcedure, string ErrMsg, object userState) {
            if ((this.UpdateMOASMProcedureAllOperationCompleted == null)) {
                this.UpdateMOASMProcedureAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMOASMProcedureAllOperationCompleted);
            }
            this.InvokeAsync("UpdateMOASMProcedureAll", new object[] {
                        UserNo,
                        MONo,
                        OPNo,
                        ASMProcedure,
                        ErrMsg}, this.UpdateMOASMProcedureAllOperationCompleted, userState);
        }
        
        private void OnUpdateMOASMProcedureAllOperationCompleted(object arg) {
            if ((this.UpdateMOASMProcedureAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMOASMProcedureAllCompleted(this, new UpdateMOASMProcedureAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelMOASMProcedure", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelMOASMProcedure(string UserNo, string MONo, string OPNo, string SubOPNo, ref string ErrMsg) {
            object[] results = this.Invoke("DelMOASMProcedure", new object[] {
                        UserNo,
                        MONo,
                        OPNo,
                        SubOPNo,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelMOASMProcedureAsync(string UserNo, string MONo, string OPNo, string SubOPNo, string ErrMsg) {
            this.DelMOASMProcedureAsync(UserNo, MONo, OPNo, SubOPNo, ErrMsg, null);
        }
        
        /// <remarks/>
        public void DelMOASMProcedureAsync(string UserNo, string MONo, string OPNo, string SubOPNo, string ErrMsg, object userState) {
            if ((this.DelMOASMProcedureOperationCompleted == null)) {
                this.DelMOASMProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMOASMProcedureOperationCompleted);
            }
            this.InvokeAsync("DelMOASMProcedure", new object[] {
                        UserNo,
                        MONo,
                        OPNo,
                        SubOPNo,
                        ErrMsg}, this.DelMOASMProcedureOperationCompleted, userState);
        }
        
        private void OnDelMOASMProcedureOperationCompleted(object arg) {
            if ((this.DelMOASMProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMOASMProcedureCompleted(this, new DelMOASMProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTASMMachineInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTASMMachineInfo(string InXml) {
            object[] results = this.Invoke("LoadSMTASMMachineInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTASMMachineInfoAsync(string InXml) {
            this.LoadSMTASMMachineInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTASMMachineInfoAsync(string InXml, object userState) {
            if ((this.LoadSMTASMMachineInfoOperationCompleted == null)) {
                this.LoadSMTASMMachineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTASMMachineInfoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTASMMachineInfo", new object[] {
                        InXml}, this.LoadSMTASMMachineInfoOperationCompleted, userState);
        }
        
        private void OnLoadSMTASMMachineInfoOperationCompleted(object arg) {
            if ((this.LoadSMTASMMachineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTASMMachineInfoCompleted(this, new LoadSMTASMMachineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTASMOITransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTASMOITransfer(string InXml) {
            object[] results = this.Invoke("LoadSMTASMOITransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTASMOITransferAsync(string InXml) {
            this.LoadSMTASMOITransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTASMOITransferAsync(string InXml, object userState) {
            if ((this.LoadSMTASMOITransferOperationCompleted == null)) {
                this.LoadSMTASMOITransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTASMOITransferOperationCompleted);
            }
            this.InvokeAsync("LoadSMTASMOITransfer", new object[] {
                        InXml}, this.LoadSMTASMOITransferOperationCompleted, userState);
        }
        
        private void OnLoadSMTASMOITransferOperationCompleted(object arg) {
            if ((this.LoadSMTASMOITransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTASMOITransferCompleted(this, new LoadSMTASMOITransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTASMPartRefilTransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTASMPartRefilTransfer(string InXml) {
            object[] results = this.Invoke("LoadSMTASMPartRefilTransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTASMPartRefilTransferAsync(string InXml) {
            this.LoadSMTASMPartRefilTransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTASMPartRefilTransferAsync(string InXml, object userState) {
            if ((this.LoadSMTASMPartRefilTransferOperationCompleted == null)) {
                this.LoadSMTASMPartRefilTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTASMPartRefilTransferOperationCompleted);
            }
            this.InvokeAsync("LoadSMTASMPartRefilTransfer", new object[] {
                        InXml}, this.LoadSMTASMPartRefilTransferOperationCompleted, userState);
        }
        
        private void OnLoadSMTASMPartRefilTransferOperationCompleted(object arg) {
            if ((this.LoadSMTASMPartRefilTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTASMPartRefilTransferCompleted(this, new LoadSMTASMPartRefilTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTASMMaterialByFeederNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTASMMaterialByFeederNo(string InXml) {
            object[] results = this.Invoke("LoadSMTASMMaterialByFeederNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTASMMaterialByFeederNoAsync(string InXml) {
            this.LoadSMTASMMaterialByFeederNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTASMMaterialByFeederNoAsync(string InXml, object userState) {
            if ((this.LoadSMTASMMaterialByFeederNoOperationCompleted == null)) {
                this.LoadSMTASMMaterialByFeederNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTASMMaterialByFeederNoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTASMMaterialByFeederNo", new object[] {
                        InXml}, this.LoadSMTASMMaterialByFeederNoOperationCompleted, userState);
        }
        
        private void OnLoadSMTASMMaterialByFeederNoOperationCompleted(object arg) {
            if ((this.LoadSMTASMMaterialByFeederNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTASMMaterialByFeederNoCompleted(this, new LoadSMTASMMaterialByFeederNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTASMFeederSetup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTASMFeederSetup(string InXml) {
            object[] results = this.Invoke("Exe_SMTASMFeederSetup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTASMFeederSetupAsync(string InXml) {
            this.Exe_SMTASMFeederSetupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTASMFeederSetupAsync(string InXml, object userState) {
            if ((this.Exe_SMTASMFeederSetupOperationCompleted == null)) {
                this.Exe_SMTASMFeederSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTASMFeederSetupOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTASMFeederSetup", new object[] {
                        InXml}, this.Exe_SMTASMFeederSetupOperationCompleted, userState);
        }
        
        private void OnExe_SMTASMFeederSetupOperationCompleted(object arg) {
            if ((this.Exe_SMTASMFeederSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTASMFeederSetupCompleted(this, new Exe_SMTASMFeederSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTASMUnloadComp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTASMUnloadComp(string InXml) {
            object[] results = this.Invoke("Exe_SMTASMUnloadComp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTASMUnloadCompAsync(string InXml) {
            this.Exe_SMTASMUnloadCompAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTASMUnloadCompAsync(string InXml, object userState) {
            if ((this.Exe_SMTASMUnloadCompOperationCompleted == null)) {
                this.Exe_SMTASMUnloadCompOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTASMUnloadCompOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTASMUnloadComp", new object[] {
                        InXml}, this.Exe_SMTASMUnloadCompOperationCompleted, userState);
        }
        
        private void OnExe_SMTASMUnloadCompOperationCompleted(object arg) {
            if ((this.Exe_SMTASMUnloadCompCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTASMUnloadCompCompleted(this, new Exe_SMTASMUnloadCompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTASMFeederList", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTASMFeederList(string InXml) {
            object[] results = this.Invoke("Exe_SMTASMFeederList", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTASMFeederListAsync(string InXml) {
            this.Exe_SMTASMFeederListAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTASMFeederListAsync(string InXml, object userState) {
            if ((this.Exe_SMTASMFeederListOperationCompleted == null)) {
                this.Exe_SMTASMFeederListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTASMFeederListOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTASMFeederList", new object[] {
                        InXml}, this.Exe_SMTASMFeederListOperationCompleted, userState);
        }
        
        private void OnExe_SMTASMFeederListOperationCompleted(object arg) {
            if ((this.Exe_SMTASMFeederListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTASMFeederListCompleted(this, new Exe_SMTASMFeederListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTASMPartsRefil", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTASMPartsRefil(string InXml) {
            object[] results = this.Invoke("Exe_SMTASMPartsRefil", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTASMPartsRefilAsync(string InXml) {
            this.Exe_SMTASMPartsRefilAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTASMPartsRefilAsync(string InXml, object userState) {
            if ((this.Exe_SMTASMPartsRefilOperationCompleted == null)) {
                this.Exe_SMTASMPartsRefilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTASMPartsRefilOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTASMPartsRefil", new object[] {
                        InXml}, this.Exe_SMTASMPartsRefilOperationCompleted, userState);
        }
        
        private void OnExe_SMTASMPartsRefilOperationCompleted(object arg) {
            if ((this.Exe_SMTASMPartsRefilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTASMPartsRefilCompleted(this, new Exe_SMTASMPartsRefilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLine_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLine_Syn(string InXml) {
            object[] results = this.Invoke("LoadLine_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLine_SynAsync(string InXml) {
            this.LoadLine_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLine_SynAsync(string InXml, object userState) {
            if ((this.LoadLine_SynOperationCompleted == null)) {
                this.LoadLine_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLine_SynOperationCompleted);
            }
            this.InvokeAsync("LoadLine_Syn", new object[] {
                        InXml}, this.LoadLine_SynOperationCompleted, userState);
        }
        
        private void OnLoadLine_SynOperationCompleted(object arg) {
            if ((this.LoadLine_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLine_SynCompleted(this, new LoadLine_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Line_Syn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Line_Syn(string InXml) {
            object[] results = this.Invoke("Exe_Line_Syn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Line_SynAsync(string InXml) {
            this.Exe_Line_SynAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Line_SynAsync(string InXml, object userState) {
            if ((this.Exe_Line_SynOperationCompleted == null)) {
                this.Exe_Line_SynOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Line_SynOperationCompleted);
            }
            this.InvokeAsync("Exe_Line_Syn", new object[] {
                        InXml}, this.Exe_Line_SynOperationCompleted, userState);
        }
        
        private void OnExe_Line_SynOperationCompleted(object arg) {
            if ((this.Exe_Line_SynCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Line_SynCompleted(this, new Exe_Line_SynCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederTransferDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederTransferDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederTransferDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederTransferDetailAsync(string InXml) {
            this.LoadSMTFeederTransferDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederTransferDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederTransferDetailOperationCompleted == null)) {
                this.LoadSMTFeederTransferDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederTransferDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederTransferDetail", new object[] {
                        InXml}, this.LoadSMTFeederTransferDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederTransferDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederTransferDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederTransferDetailCompleted(this, new LoadSMTFeederTransferDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederPickupMaterialDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederPickupMaterialDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederPickupMaterialDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupMaterialDetailAsync(string InXml) {
            this.LoadSMTFeederPickupMaterialDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupMaterialDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederPickupMaterialDetailOperationCompleted == null)) {
                this.LoadSMTFeederPickupMaterialDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederPickupMaterialDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederPickupMaterialDetail", new object[] {
                        InXml}, this.LoadSMTFeederPickupMaterialDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederPickupMaterialDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederPickupMaterialDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederPickupMaterialDetailCompleted(this, new LoadSMTFeederPickupMaterialDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederReturnTransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederReturnTransfer(string InXml) {
            object[] results = this.Invoke("SMTFeederReturnTransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederReturnTransferAsync(string InXml) {
            this.SMTFeederReturnTransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederReturnTransferAsync(string InXml, object userState) {
            if ((this.SMTFeederReturnTransferOperationCompleted == null)) {
                this.SMTFeederReturnTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederReturnTransferOperationCompleted);
            }
            this.InvokeAsync("SMTFeederReturnTransfer", new object[] {
                        InXml}, this.SMTFeederReturnTransferOperationCompleted, userState);
        }
        
        private void OnSMTFeederReturnTransferOperationCompleted(object arg) {
            if ((this.SMTFeederReturnTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederReturnTransferCompleted(this, new SMTFeederReturnTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupTransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupTransfer(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupTransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupTransferAsync(string InXml) {
            this.SMTFeederPickupTransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupTransferAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupTransferOperationCompleted == null)) {
                this.SMTFeederPickupTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupTransferOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupTransfer", new object[] {
                        InXml}, this.SMTFeederPickupTransferOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupTransferOperationCompleted(object arg) {
            if ((this.SMTFeederPickupTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupTransferCompleted(this, new SMTFeederPickupTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupToMES", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupToMES(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupToMES", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupToMESAsync(string InXml) {
            this.SMTFeederPickupToMESAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupToMESAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupToMESOperationCompleted == null)) {
                this.SMTFeederPickupToMESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupToMESOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupToMES", new object[] {
                        InXml}, this.SMTFeederPickupToMESOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupToMESOperationCompleted(object arg) {
            if ((this.SMTFeederPickupToMESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupToMESCompleted(this, new SMTFeederPickupToMESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederComplete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederComplete(string InXml) {
            object[] results = this.Invoke("SMTFeederComplete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederCompleteAsync(string InXml) {
            this.SMTFeederCompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederCompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederCompleteOperationCompleted == null)) {
                this.SMTFeederCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederCompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederComplete", new object[] {
                        InXml}, this.SMTFeederCompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederCompleteOperationCompleted(object arg) {
            if ((this.SMTFeederCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederCompleteCompleted(this, new SMTFeederCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupConfirm(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupConfirmAsync(string InXml) {
            this.SMTFeederPickupConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupConfirmAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupConfirmOperationCompleted == null)) {
                this.SMTFeederPickupConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupConfirmOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupConfirm", new object[] {
                        InXml}, this.SMTFeederPickupConfirmOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupConfirmOperationCompleted(object arg) {
            if ((this.SMTFeederPickupConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupConfirmCompleted(this, new SMTFeederPickupConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederReturnConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederReturnConfirm(string InXml) {
            object[] results = this.Invoke("SMTFeederReturnConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederReturnConfirmAsync(string InXml) {
            this.SMTFeederReturnConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederReturnConfirmAsync(string InXml, object userState) {
            if ((this.SMTFeederReturnConfirmOperationCompleted == null)) {
                this.SMTFeederReturnConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederReturnConfirmOperationCompleted);
            }
            this.InvokeAsync("SMTFeederReturnConfirm", new object[] {
                        InXml}, this.SMTFeederReturnConfirmOperationCompleted, userState);
        }
        
        private void OnSMTFeederReturnConfirmOperationCompleted(object arg) {
            if ((this.SMTFeederReturnConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederReturnConfirmCompleted(this, new SMTFeederReturnConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTransferInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTransferInfo(string InXml) {
            object[] results = this.Invoke("LoadTransferInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTransferInfoAsync(string InXml) {
            this.LoadTransferInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTransferInfoAsync(string InXml, object userState) {
            if ((this.LoadTransferInfoOperationCompleted == null)) {
                this.LoadTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTransferInfoOperationCompleted);
            }
            this.InvokeAsync("LoadTransferInfo", new object[] {
                        InXml}, this.LoadTransferInfoOperationCompleted, userState);
        }
        
        private void OnLoadTransferInfoOperationCompleted(object arg) {
            if ((this.LoadTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTransferInfoCompleted(this, new LoadTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeederArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeederArea(string InXml) {
            object[] results = this.Invoke("AddSMTFeederArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeederAreaAsync(string InXml) {
            this.AddSMTFeederAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeederAreaAsync(string InXml, object userState) {
            if ((this.AddSMTFeederAreaOperationCompleted == null)) {
                this.AddSMTFeederAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeederAreaOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeederArea", new object[] {
                        InXml}, this.AddSMTFeederAreaOperationCompleted, userState);
        }
        
        private void OnAddSMTFeederAreaOperationCompleted(object arg) {
            if ((this.AddSMTFeederAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeederAreaCompleted(this, new AddSMTFeederAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSMTFeederArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMTFeederArea(string InXml) {
            object[] results = this.Invoke("UpdateSMTFeederArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMTFeederAreaAsync(string InXml) {
            this.UpdateSMTFeederAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSMTFeederAreaAsync(string InXml, object userState) {
            if ((this.UpdateSMTFeederAreaOperationCompleted == null)) {
                this.UpdateSMTFeederAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMTFeederAreaOperationCompleted);
            }
            this.InvokeAsync("UpdateSMTFeederArea", new object[] {
                        InXml}, this.UpdateSMTFeederAreaOperationCompleted, userState);
        }
        
        private void OnUpdateSMTFeederAreaOperationCompleted(object arg) {
            if ((this.UpdateSMTFeederAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMTFeederAreaCompleted(this, new UpdateSMTFeederAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelSMTFeederArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelSMTFeederArea(string InXml) {
            object[] results = this.Invoke("DelSMTFeederArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelSMTFeederAreaAsync(string InXml) {
            this.DelSMTFeederAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelSMTFeederAreaAsync(string InXml, object userState) {
            if ((this.DelSMTFeederAreaOperationCompleted == null)) {
                this.DelSMTFeederAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSMTFeederAreaOperationCompleted);
            }
            this.InvokeAsync("DelSMTFeederArea", new object[] {
                        InXml}, this.DelSMTFeederAreaOperationCompleted, userState);
        }
        
        private void OnDelSMTFeederAreaOperationCompleted(object arg) {
            if ((this.DelSMTFeederAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSMTFeederAreaCompleted(this, new DelSMTFeederAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederBinInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederBinInfo(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederBinInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederBinInfoAsync(string InXml) {
            this.LoadSMTFeederBinInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederBinInfoAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederBinInfoOperationCompleted == null)) {
                this.LoadSMTFeederBinInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederBinInfoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederBinInfo", new object[] {
                        InXml}, this.LoadSMTFeederBinInfoOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederBinInfoOperationCompleted(object arg) {
            if ((this.LoadSMTFeederBinInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederBinInfoCompleted(this, new LoadSMTFeederBinInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeederBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeederBin(string InXml) {
            object[] results = this.Invoke("AddSMTFeederBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeederBinAsync(string InXml) {
            this.AddSMTFeederBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeederBinAsync(string InXml, object userState) {
            if ((this.AddSMTFeederBinOperationCompleted == null)) {
                this.AddSMTFeederBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeederBinOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeederBin", new object[] {
                        InXml}, this.AddSMTFeederBinOperationCompleted, userState);
        }
        
        private void OnAddSMTFeederBinOperationCompleted(object arg) {
            if ((this.AddSMTFeederBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeederBinCompleted(this, new AddSMTFeederBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSMTFeederBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMTFeederBin(string InXml) {
            object[] results = this.Invoke("UpdateSMTFeederBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMTFeederBinAsync(string InXml) {
            this.UpdateSMTFeederBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSMTFeederBinAsync(string InXml, object userState) {
            if ((this.UpdateSMTFeederBinOperationCompleted == null)) {
                this.UpdateSMTFeederBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMTFeederBinOperationCompleted);
            }
            this.InvokeAsync("UpdateSMTFeederBin", new object[] {
                        InXml}, this.UpdateSMTFeederBinOperationCompleted, userState);
        }
        
        private void OnUpdateSMTFeederBinOperationCompleted(object arg) {
            if ((this.UpdateSMTFeederBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMTFeederBinCompleted(this, new UpdateSMTFeederBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelSMTFeederBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelSMTFeederBin(string InXml) {
            object[] results = this.Invoke("DelSMTFeederBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelSMTFeederBinAsync(string InXml) {
            this.DelSMTFeederBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelSMTFeederBinAsync(string InXml, object userState) {
            if ((this.DelSMTFeederBinOperationCompleted == null)) {
                this.DelSMTFeederBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSMTFeederBinOperationCompleted);
            }
            this.InvokeAsync("DelSMTFeederBin", new object[] {
                        InXml}, this.DelSMTFeederBinOperationCompleted, userState);
        }
        
        private void OnDelSMTFeederBinOperationCompleted(object arg) {
            if ((this.DelSMTFeederBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSMTFeederBinCompleted(this, new DelSMTFeederBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederEquipmentType", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederEquipmentType(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederEquipmentType", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederEquipmentTypeAsync(string InXml) {
            this.LoadSMTFeederEquipmentTypeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederEquipmentTypeAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederEquipmentTypeOperationCompleted == null)) {
                this.LoadSMTFeederEquipmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederEquipmentTypeOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederEquipmentType", new object[] {
                        InXml}, this.LoadSMTFeederEquipmentTypeOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederEquipmentTypeOperationCompleted(object arg) {
            if ((this.LoadSMTFeederEquipmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederEquipmentTypeCompleted(this, new LoadSMTFeederEquipmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSMTFeederEquipmentType", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMTFeederEquipmentType(string InXml) {
            object[] results = this.Invoke("UpdateSMTFeederEquipmentType", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMTFeederEquipmentTypeAsync(string InXml) {
            this.UpdateSMTFeederEquipmentTypeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSMTFeederEquipmentTypeAsync(string InXml, object userState) {
            if ((this.UpdateSMTFeederEquipmentTypeOperationCompleted == null)) {
                this.UpdateSMTFeederEquipmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMTFeederEquipmentTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateSMTFeederEquipmentType", new object[] {
                        InXml}, this.UpdateSMTFeederEquipmentTypeOperationCompleted, userState);
        }
        
        private void OnUpdateSMTFeederEquipmentTypeOperationCompleted(object arg) {
            if ((this.UpdateSMTFeederEquipmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMTFeederEquipmentTypeCompleted(this, new UpdateSMTFeederEquipmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckSmtFeederMaterialSerial_Delta", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSmtFeederMaterialSerial_Delta(string InXml) {
            object[] results = this.Invoke("CheckSmtFeederMaterialSerial_Delta", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSmtFeederMaterialSerial_DeltaAsync(string InXml) {
            this.CheckSmtFeederMaterialSerial_DeltaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckSmtFeederMaterialSerial_DeltaAsync(string InXml, object userState) {
            if ((this.CheckSmtFeederMaterialSerial_DeltaOperationCompleted == null)) {
                this.CheckSmtFeederMaterialSerial_DeltaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSmtFeederMaterialSerial_DeltaOperationCompleted);
            }
            this.InvokeAsync("CheckSmtFeederMaterialSerial_Delta", new object[] {
                        InXml}, this.CheckSmtFeederMaterialSerial_DeltaOperationCompleted, userState);
        }
        
        private void OnCheckSmtFeederMaterialSerial_DeltaOperationCompleted(object arg) {
            if ((this.CheckSmtFeederMaterialSerial_DeltaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSmtFeederMaterialSerial_DeltaCompleted(this, new CheckSmtFeederMaterialSerial_DeltaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckCombinepickupnoAccountStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckCombinepickupnoAccountStatus(string InXml) {
            object[] results = this.Invoke("CheckCombinepickupnoAccountStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCombinepickupnoAccountStatusAsync(string InXml) {
            this.CheckCombinepickupnoAccountStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckCombinepickupnoAccountStatusAsync(string InXml, object userState) {
            if ((this.CheckCombinepickupnoAccountStatusOperationCompleted == null)) {
                this.CheckCombinepickupnoAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCombinepickupnoAccountStatusOperationCompleted);
            }
            this.InvokeAsync("CheckCombinepickupnoAccountStatus", new object[] {
                        InXml}, this.CheckCombinepickupnoAccountStatusOperationCompleted, userState);
        }
        
        private void OnCheckCombinepickupnoAccountStatusOperationCompleted(object arg) {
            if ((this.CheckCombinepickupnoAccountStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCombinepickupnoAccountStatusCompleted(this, new CheckCombinepickupnoAccountStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtSuperMarketMtl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtSuperMarketMtl(string InXml) {
            object[] results = this.Invoke("LoadSmtSuperMarketMtl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtSuperMarketMtlAsync(string InXml) {
            this.LoadSmtSuperMarketMtlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSmtSuperMarketMtlAsync(string InXml, object userState) {
            if ((this.LoadSmtSuperMarketMtlOperationCompleted == null)) {
                this.LoadSmtSuperMarketMtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtSuperMarketMtlOperationCompleted);
            }
            this.InvokeAsync("LoadSmtSuperMarketMtl", new object[] {
                        InXml}, this.LoadSmtSuperMarketMtlOperationCompleted, userState);
        }
        
        private void OnLoadSmtSuperMarketMtlOperationCompleted(object arg) {
            if ((this.LoadSmtSuperMarketMtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtSuperMarketMtlCompleted(this, new LoadSmtSuperMarketMtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederCombineNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederCombineNo(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederCombineNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederCombineNoAsync(string InXml) {
            this.LoadSMTFeederCombineNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederCombineNoAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederCombineNoOperationCompleted == null)) {
                this.LoadSMTFeederCombineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederCombineNoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederCombineNo", new object[] {
                        InXml}, this.LoadSMTFeederCombineNoOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederCombineNoOperationCompleted(object arg) {
            if ((this.LoadSMTFeederCombineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederCombineNoCompleted(this, new LoadSMTFeederCombineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeederCombinePickupNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeederCombinePickupNo(string InXml) {
            object[] results = this.Invoke("AddSMTFeederCombinePickupNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeederCombinePickupNoAsync(string InXml) {
            this.AddSMTFeederCombinePickupNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeederCombinePickupNoAsync(string InXml, object userState) {
            if ((this.AddSMTFeederCombinePickupNoOperationCompleted == null)) {
                this.AddSMTFeederCombinePickupNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeederCombinePickupNoOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeederCombinePickupNo", new object[] {
                        InXml}, this.AddSMTFeederCombinePickupNoOperationCompleted, userState);
        }
        
        private void OnAddSMTFeederCombinePickupNoOperationCompleted(object arg) {
            if ((this.AddSMTFeederCombinePickupNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeederCombinePickupNoCompleted(this, new AddSMTFeederCombinePickupNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSMTFeederCombinePickupNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMTFeederCombinePickupNo(string InXml) {
            object[] results = this.Invoke("UpdateSMTFeederCombinePickupNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMTFeederCombinePickupNoAsync(string InXml) {
            this.UpdateSMTFeederCombinePickupNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSMTFeederCombinePickupNoAsync(string InXml, object userState) {
            if ((this.UpdateSMTFeederCombinePickupNoOperationCompleted == null)) {
                this.UpdateSMTFeederCombinePickupNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMTFeederCombinePickupNoOperationCompleted);
            }
            this.InvokeAsync("UpdateSMTFeederCombinePickupNo", new object[] {
                        InXml}, this.UpdateSMTFeederCombinePickupNoOperationCompleted, userState);
        }
        
        private void OnUpdateSMTFeederCombinePickupNoOperationCompleted(object arg) {
            if ((this.UpdateSMTFeederCombinePickupNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMTFeederCombinePickupNoCompleted(this, new UpdateSMTFeederCombinePickupNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelSMTFeederCombinePickupNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelSMTFeederCombinePickupNo(string InXml) {
            object[] results = this.Invoke("DelSMTFeederCombinePickupNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelSMTFeederCombinePickupNoAsync(string InXml) {
            this.DelSMTFeederCombinePickupNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelSMTFeederCombinePickupNoAsync(string InXml, object userState) {
            if ((this.DelSMTFeederCombinePickupNoOperationCompleted == null)) {
                this.DelSMTFeederCombinePickupNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSMTFeederCombinePickupNoOperationCompleted);
            }
            this.InvokeAsync("DelSMTFeederCombinePickupNo", new object[] {
                        InXml}, this.DelSMTFeederCombinePickupNoOperationCompleted, userState);
        }
        
        private void OnDelSMTFeederCombinePickupNoOperationCompleted(object arg) {
            if ((this.DelSMTFeederCombinePickupNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSMTFeederCombinePickupNoCompleted(this, new DelSMTFeederCombinePickupNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkSMTFeedePickupDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkSMTFeedePickupDetail(string InXml) {
            object[] results = this.Invoke("ChkSMTFeedePickupDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkSMTFeedePickupDetailAsync(string InXml) {
            this.ChkSMTFeedePickupDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkSMTFeedePickupDetailAsync(string InXml, object userState) {
            if ((this.ChkSMTFeedePickupDetailOperationCompleted == null)) {
                this.ChkSMTFeedePickupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkSMTFeedePickupDetailOperationCompleted);
            }
            this.InvokeAsync("ChkSMTFeedePickupDetail", new object[] {
                        InXml}, this.ChkSMTFeedePickupDetailOperationCompleted, userState);
        }
        
        private void OnChkSMTFeedePickupDetailOperationCompleted(object arg) {
            if ((this.ChkSMTFeedePickupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkSMTFeedePickupDetailCompleted(this, new ChkSMTFeedePickupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkSMTFeederTransfer", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkSMTFeederTransfer(string InXml) {
            object[] results = this.Invoke("ChkSMTFeederTransfer", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkSMTFeederTransferAsync(string InXml) {
            this.ChkSMTFeederTransferAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkSMTFeederTransferAsync(string InXml, object userState) {
            if ((this.ChkSMTFeederTransferOperationCompleted == null)) {
                this.ChkSMTFeederTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkSMTFeederTransferOperationCompleted);
            }
            this.InvokeAsync("ChkSMTFeederTransfer", new object[] {
                        InXml}, this.ChkSMTFeederTransferOperationCompleted, userState);
        }
        
        private void OnChkSMTFeederTransferOperationCompleted(object arg) {
            if ((this.ChkSMTFeederTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkSMTFeederTransferCompleted(this, new ChkSMTFeederTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelSMTFeederCombineNoSpecial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelSMTFeederCombineNoSpecial(string InXml) {
            object[] results = this.Invoke("DelSMTFeederCombineNoSpecial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelSMTFeederCombineNoSpecialAsync(string InXml) {
            this.DelSMTFeederCombineNoSpecialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelSMTFeederCombineNoSpecialAsync(string InXml, object userState) {
            if ((this.DelSMTFeederCombineNoSpecialOperationCompleted == null)) {
                this.DelSMTFeederCombineNoSpecialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSMTFeederCombineNoSpecialOperationCompleted);
            }
            this.InvokeAsync("DelSMTFeederCombineNoSpecial", new object[] {
                        InXml}, this.DelSMTFeederCombineNoSpecialOperationCompleted, userState);
        }
        
        private void OnDelSMTFeederCombineNoSpecialOperationCompleted(object arg) {
            if ((this.DelSMTFeederCombineNoSpecialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSMTFeederCombineNoSpecialCompleted(this, new DelSMTFeederCombineNoSpecialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFeederTransferQuery", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFeederTransferQuery(string InXml) {
            object[] results = this.Invoke("LoadFeederTransferQuery", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFeederTransferQueryAsync(string InXml) {
            this.LoadFeederTransferQueryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFeederTransferQueryAsync(string InXml, object userState) {
            if ((this.LoadFeederTransferQueryOperationCompleted == null)) {
                this.LoadFeederTransferQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFeederTransferQueryOperationCompleted);
            }
            this.InvokeAsync("LoadFeederTransferQuery", new object[] {
                        InXml}, this.LoadFeederTransferQueryOperationCompleted, userState);
        }
        
        private void OnLoadFeederTransferQueryOperationCompleted(object arg) {
            if ((this.LoadFeederTransferQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFeederTransferQueryCompleted(this, new LoadFeederTransferQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFeederTrsErrorMsg", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFeederTrsErrorMsg(string InXml) {
            object[] results = this.Invoke("DelFeederTrsErrorMsg", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFeederTrsErrorMsgAsync(string InXml) {
            this.DelFeederTrsErrorMsgAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFeederTrsErrorMsgAsync(string InXml, object userState) {
            if ((this.DelFeederTrsErrorMsgOperationCompleted == null)) {
                this.DelFeederTrsErrorMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFeederTrsErrorMsgOperationCompleted);
            }
            this.InvokeAsync("DelFeederTrsErrorMsg", new object[] {
                        InXml}, this.DelFeederTrsErrorMsgOperationCompleted, userState);
        }
        
        private void OnDelFeederTrsErrorMsgOperationCompleted(object arg) {
            if ((this.DelFeederTrsErrorMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFeederTrsErrorMsgCompleted(this, new DelFeederTrsErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeedReturnDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeedReturnDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeedReturnDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeedReturnDetailAsync(string InXml) {
            this.LoadSMTFeedReturnDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeedReturnDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeedReturnDetailOperationCompleted == null)) {
                this.LoadSMTFeedReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeedReturnDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeedReturnDetail", new object[] {
                        InXml}, this.LoadSMTFeedReturnDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeedReturnDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeedReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeedReturnDetailCompleted(this, new LoadSMTFeedReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetSMTFeederBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSMTFeederBin() {
            object[] results = this.Invoke("GetSMTFeederBin", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTFeederBinAsync() {
            this.GetSMTFeederBinAsync(null);
        }
        
        /// <remarks/>
        public void GetSMTFeederBinAsync(object userState) {
            if ((this.GetSMTFeederBinOperationCompleted == null)) {
                this.GetSMTFeederBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTFeederBinOperationCompleted);
            }
            this.InvokeAsync("GetSMTFeederBin", new object[0], this.GetSMTFeederBinOperationCompleted, userState);
        }
        
        private void OnGetSMTFeederBinOperationCompleted(object arg) {
            if ((this.GetSMTFeederBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTFeederBinCompleted(this, new GetSMTFeederBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetSMTFeederReturnBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSMTFeederReturnBin(string InXml) {
            object[] results = this.Invoke("GetSMTFeederReturnBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTFeederReturnBinAsync(string InXml) {
            this.GetSMTFeederReturnBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetSMTFeederReturnBinAsync(string InXml, object userState) {
            if ((this.GetSMTFeederReturnBinOperationCompleted == null)) {
                this.GetSMTFeederReturnBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTFeederReturnBinOperationCompleted);
            }
            this.InvokeAsync("GetSMTFeederReturnBin", new object[] {
                        InXml}, this.GetSMTFeederReturnBinOperationCompleted, userState);
        }
        
        private void OnGetSMTFeederReturnBinOperationCompleted(object arg) {
            if ((this.GetSMTFeederReturnBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTFeederReturnBinCompleted(this, new GetSMTFeederReturnBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetSMTFeederReturnBin2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSMTFeederReturnBin2(string InXml) {
            object[] results = this.Invoke("GetSMTFeederReturnBin2", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTFeederReturnBin2Async(string InXml) {
            this.GetSMTFeederReturnBin2Async(InXml, null);
        }
        
        /// <remarks/>
        public void GetSMTFeederReturnBin2Async(string InXml, object userState) {
            if ((this.GetSMTFeederReturnBin2OperationCompleted == null)) {
                this.GetSMTFeederReturnBin2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTFeederReturnBin2OperationCompleted);
            }
            this.InvokeAsync("GetSMTFeederReturnBin2", new object[] {
                        InXml}, this.GetSMTFeederReturnBin2OperationCompleted, userState);
        }
        
        private void OnGetSMTFeederReturnBin2OperationCompleted(object arg) {
            if ((this.GetSMTFeederReturnBin2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTFeederReturnBin2Completed(this, new GetSMTFeederReturnBin2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DeleteSmtFeederReturnmDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSmtFeederReturnmDetail(string InXml) {
            object[] results = this.Invoke("DeleteSmtFeederReturnmDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSmtFeederReturnmDetailAsync(string InXml) {
            this.DeleteSmtFeederReturnmDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DeleteSmtFeederReturnmDetailAsync(string InXml, object userState) {
            if ((this.DeleteSmtFeederReturnmDetailOperationCompleted == null)) {
                this.DeleteSmtFeederReturnmDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSmtFeederReturnmDetailOperationCompleted);
            }
            this.InvokeAsync("DeleteSmtFeederReturnmDetail", new object[] {
                        InXml}, this.DeleteSmtFeederReturnmDetailOperationCompleted, userState);
        }
        
        private void OnDeleteSmtFeederReturnmDetailOperationCompleted(object arg) {
            if ((this.DeleteSmtFeederReturnmDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSmtFeederReturnmDetailCompleted(this, new DeleteSmtFeederReturnmDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeederReturnInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeederReturnInfo(string InXml) {
            object[] results = this.Invoke("AddSMTFeederReturnInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeederReturnInfoAsync(string InXml) {
            this.AddSMTFeederReturnInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeederReturnInfoAsync(string InXml, object userState) {
            if ((this.AddSMTFeederReturnInfoOperationCompleted == null)) {
                this.AddSMTFeederReturnInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeederReturnInfoOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeederReturnInfo", new object[] {
                        InXml}, this.AddSMTFeederReturnInfoOperationCompleted, userState);
        }
        
        private void OnAddSMTFeederReturnInfoOperationCompleted(object arg) {
            if ((this.AddSMTFeederReturnInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeederReturnInfoCompleted(this, new AddSMTFeederReturnInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeedBinRequest", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeedBinRequest(string InXml) {
            object[] results = this.Invoke("AddSMTFeedBinRequest", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeedBinRequestAsync(string InXml) {
            this.AddSMTFeedBinRequestAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeedBinRequestAsync(string InXml, object userState) {
            if ((this.AddSMTFeedBinRequestOperationCompleted == null)) {
                this.AddSMTFeedBinRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeedBinRequestOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeedBinRequest", new object[] {
                        InXml}, this.AddSMTFeedBinRequestOperationCompleted, userState);
        }
        
        private void OnAddSMTFeedBinRequestOperationCompleted(object arg) {
            if ((this.AddSMTFeedBinRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeedBinRequestCompleted(this, new AddSMTFeedBinRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeedBinRequestHistory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeedBinRequestHistory(string InXml) {
            object[] results = this.Invoke("AddSMTFeedBinRequestHistory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeedBinRequestHistoryAsync(string InXml) {
            this.AddSMTFeedBinRequestHistoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeedBinRequestHistoryAsync(string InXml, object userState) {
            if ((this.AddSMTFeedBinRequestHistoryOperationCompleted == null)) {
                this.AddSMTFeedBinRequestHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeedBinRequestHistoryOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeedBinRequestHistory", new object[] {
                        InXml}, this.AddSMTFeedBinRequestHistoryOperationCompleted, userState);
        }
        
        private void OnAddSMTFeedBinRequestHistoryOperationCompleted(object arg) {
            if ((this.AddSMTFeedBinRequestHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeedBinRequestHistoryCompleted(this, new AddSMTFeedBinRequestHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSMTFeederAreaUseInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSMTFeederAreaUseInfo(string InXml) {
            object[] results = this.Invoke("AddSMTFeederAreaUseInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSMTFeederAreaUseInfoAsync(string InXml) {
            this.AddSMTFeederAreaUseInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSMTFeederAreaUseInfoAsync(string InXml, object userState) {
            if ((this.AddSMTFeederAreaUseInfoOperationCompleted == null)) {
                this.AddSMTFeederAreaUseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSMTFeederAreaUseInfoOperationCompleted);
            }
            this.InvokeAsync("AddSMTFeederAreaUseInfo", new object[] {
                        InXml}, this.AddSMTFeederAreaUseInfoOperationCompleted, userState);
        }
        
        private void OnAddSMTFeederAreaUseInfoOperationCompleted(object arg) {
            if ((this.AddSMTFeederAreaUseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSMTFeederAreaUseInfoCompleted(this, new AddSMTFeederAreaUseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DeleteSMTFeederAreaUseInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSMTFeederAreaUseInfo(string InXml) {
            object[] results = this.Invoke("DeleteSMTFeederAreaUseInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSMTFeederAreaUseInfoAsync(string InXml) {
            this.DeleteSMTFeederAreaUseInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DeleteSMTFeederAreaUseInfoAsync(string InXml, object userState) {
            if ((this.DeleteSMTFeederAreaUseInfoOperationCompleted == null)) {
                this.DeleteSMTFeederAreaUseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSMTFeederAreaUseInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteSMTFeederAreaUseInfo", new object[] {
                        InXml}, this.DeleteSMTFeederAreaUseInfoOperationCompleted, userState);
        }
        
        private void OnDeleteSMTFeederAreaUseInfoOperationCompleted(object arg) {
            if ((this.DeleteSMTFeederAreaUseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSMTFeederAreaUseInfoCompleted(this, new DeleteSMTFeederAreaUseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DeleteSMTFeedBinRequest", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSMTFeedBinRequest(string InXml) {
            object[] results = this.Invoke("DeleteSMTFeedBinRequest", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSMTFeedBinRequestAsync(string InXml) {
            this.DeleteSMTFeedBinRequestAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DeleteSMTFeedBinRequestAsync(string InXml, object userState) {
            if ((this.DeleteSMTFeedBinRequestOperationCompleted == null)) {
                this.DeleteSMTFeedBinRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSMTFeedBinRequestOperationCompleted);
            }
            this.InvokeAsync("DeleteSMTFeedBinRequest", new object[] {
                        InXml}, this.DeleteSMTFeedBinRequestOperationCompleted, userState);
        }
        
        private void OnDeleteSMTFeedBinRequestOperationCompleted(object arg) {
            if ((this.DeleteSMTFeedBinRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSMTFeedBinRequestCompleted(this, new DeleteSMTFeedBinRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ADDSMTFeederMFUDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ADDSMTFeederMFUDetail(string InXml) {
            object[] results = this.Invoke("ADDSMTFeederMFUDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ADDSMTFeederMFUDetailAsync(string InXml) {
            this.ADDSMTFeederMFUDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ADDSMTFeederMFUDetailAsync(string InXml, object userState) {
            if ((this.ADDSMTFeederMFUDetailOperationCompleted == null)) {
                this.ADDSMTFeederMFUDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnADDSMTFeederMFUDetailOperationCompleted);
            }
            this.InvokeAsync("ADDSMTFeederMFUDetail", new object[] {
                        InXml}, this.ADDSMTFeederMFUDetailOperationCompleted, userState);
        }
        
        private void OnADDSMTFeederMFUDetailOperationCompleted(object arg) {
            if ((this.ADDSMTFeederMFUDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ADDSMTFeederMFUDetailCompleted(this, new ADDSMTFeederMFUDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederMFUDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederMFUDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederMFUDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederMFUDetailAsync(string InXml) {
            this.LoadSMTFeederMFUDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederMFUDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederMFUDetailOperationCompleted == null)) {
                this.LoadSMTFeederMFUDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederMFUDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederMFUDetail", new object[] {
                        InXml}, this.LoadSMTFeederMFUDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederMFUDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederMFUDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederMFUDetailCompleted(this, new LoadSMTFeederMFUDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederReturnAcountDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederReturnAcountDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederReturnAcountDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnAcountDetailAsync(string InXml) {
            this.LoadSMTFeederReturnAcountDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnAcountDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederReturnAcountDetailOperationCompleted == null)) {
                this.LoadSMTFeederReturnAcountDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederReturnAcountDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederReturnAcountDetail", new object[] {
                        InXml}, this.LoadSMTFeederReturnAcountDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederReturnAcountDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederReturnAcountDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederReturnAcountDetailCompleted(this, new LoadSMTFeederReturnAcountDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederReturnDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederReturnDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederReturnDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnDetailAsync(string InXml) {
            this.LoadSMTFeederReturnDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederReturnDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederReturnDetailOperationCompleted == null)) {
                this.LoadSMTFeederReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederReturnDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederReturnDetail", new object[] {
                        InXml}, this.LoadSMTFeederReturnDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederReturnDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederReturnDetailCompleted(this, new LoadSMTFeederReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederReturnComplete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederReturnComplete(string InXml) {
            object[] results = this.Invoke("SMTFeederReturnComplete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederReturnCompleteAsync(string InXml) {
            this.SMTFeederReturnCompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederReturnCompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederReturnCompleteOperationCompleted == null)) {
                this.SMTFeederReturnCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederReturnCompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederReturnComplete", new object[] {
                        InXml}, this.SMTFeederReturnCompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederReturnCompleteOperationCompleted(object arg) {
            if ((this.SMTFeederReturnCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederReturnCompleteCompleted(this, new SMTFeederReturnCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederReturnToMES", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederReturnToMES(string InXml) {
            object[] results = this.Invoke("SMTFeederReturnToMES", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederReturnToMESAsync(string InXml) {
            this.SMTFeederReturnToMESAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederReturnToMESAsync(string InXml, object userState) {
            if ((this.SMTFeederReturnToMESOperationCompleted == null)) {
                this.SMTFeederReturnToMESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederReturnToMESOperationCompleted);
            }
            this.InvokeAsync("SMTFeederReturnToMES", new object[] {
                        InXml}, this.SMTFeederReturnToMESOperationCompleted, userState);
        }
        
        private void OnSMTFeederReturnToMESOperationCompleted(object arg) {
            if ((this.SMTFeederReturnToMESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederReturnToMESCompleted(this, new SMTFeederReturnToMESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TESTInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TESTInfo(int DType, string sBin) {
            object[] results = this.Invoke("TESTInfo", new object[] {
                        DType,
                        sBin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TESTInfoAsync(int DType, string sBin) {
            this.TESTInfoAsync(DType, sBin, null);
        }
        
        /// <remarks/>
        public void TESTInfoAsync(int DType, string sBin, object userState) {
            if ((this.TESTInfoOperationCompleted == null)) {
                this.TESTInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTESTInfoOperationCompleted);
            }
            this.InvokeAsync("TESTInfo", new object[] {
                        DType,
                        sBin}, this.TESTInfoOperationCompleted, userState);
        }
        
        private void OnTESTInfoOperationCompleted(object arg) {
            if ((this.TESTInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TESTInfoCompleted(this, new TESTInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSuperMarkMtl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSuperMarkMtl(string InXml) {
            object[] results = this.Invoke("LoadSuperMarkMtl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSuperMarkMtlAsync(string InXml) {
            this.LoadSuperMarkMtlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSuperMarkMtlAsync(string InXml, object userState) {
            if ((this.LoadSuperMarkMtlOperationCompleted == null)) {
                this.LoadSuperMarkMtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSuperMarkMtlOperationCompleted);
            }
            this.InvokeAsync("LoadSuperMarkMtl", new object[] {
                        InXml}, this.LoadSuperMarkMtlOperationCompleted, userState);
        }
        
        private void OnLoadSuperMarkMtlOperationCompleted(object arg) {
            if ((this.LoadSuperMarkMtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSuperMarkMtlCompleted(this, new LoadSuperMarkMtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InsertSmtsupermarketMtl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSmtsupermarketMtl(string InXml) {
            object[] results = this.Invoke("InsertSmtsupermarketMtl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSmtsupermarketMtlAsync(string InXml) {
            this.InsertSmtsupermarketMtlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void InsertSmtsupermarketMtlAsync(string InXml, object userState) {
            if ((this.InsertSmtsupermarketMtlOperationCompleted == null)) {
                this.InsertSmtsupermarketMtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSmtsupermarketMtlOperationCompleted);
            }
            this.InvokeAsync("InsertSmtsupermarketMtl", new object[] {
                        InXml}, this.InsertSmtsupermarketMtlOperationCompleted, userState);
        }
        
        private void OnInsertSmtsupermarketMtlOperationCompleted(object arg) {
            if ((this.InsertSmtsupermarketMtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSmtsupermarketMtlCompleted(this, new InsertSmtsupermarketMtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSmtsupermarketMtl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSmtsupermarketMtl(string InXml) {
            object[] results = this.Invoke("UpdateSmtsupermarketMtl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSmtsupermarketMtlAsync(string InXml) {
            this.UpdateSmtsupermarketMtlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSmtsupermarketMtlAsync(string InXml, object userState) {
            if ((this.UpdateSmtsupermarketMtlOperationCompleted == null)) {
                this.UpdateSmtsupermarketMtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSmtsupermarketMtlOperationCompleted);
            }
            this.InvokeAsync("UpdateSmtsupermarketMtl", new object[] {
                        InXml}, this.UpdateSmtsupermarketMtlOperationCompleted, userState);
        }
        
        private void OnUpdateSmtsupermarketMtlOperationCompleted(object arg) {
            if ((this.UpdateSmtsupermarketMtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSmtsupermarketMtlCompleted(this, new UpdateSmtsupermarketMtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DeleteSmtsupermarketMtl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSmtsupermarketMtl(string InXml) {
            object[] results = this.Invoke("DeleteSmtsupermarketMtl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSmtsupermarketMtlAsync(string InXml) {
            this.DeleteSmtsupermarketMtlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DeleteSmtsupermarketMtlAsync(string InXml, object userState) {
            if ((this.DeleteSmtsupermarketMtlOperationCompleted == null)) {
                this.DeleteSmtsupermarketMtlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSmtsupermarketMtlOperationCompleted);
            }
            this.InvokeAsync("DeleteSmtsupermarketMtl", new object[] {
                        InXml}, this.DeleteSmtsupermarketMtlOperationCompleted, userState);
        }
        
        private void OnDeleteSmtsupermarketMtlOperationCompleted(object arg) {
            if ((this.DeleteSmtsupermarketMtlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSmtsupermarketMtlCompleted(this, new DeleteSmtsupermarketMtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SmtFeederSensorStatus_New2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmtFeederSensorStatus_New2(string InXml) {
            object[] results = this.Invoke("SmtFeederSensorStatus_New2", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatus_New2Async(string InXml) {
            this.SmtFeederSensorStatus_New2Async(InXml, null);
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatus_New2Async(string InXml, object userState) {
            if ((this.SmtFeederSensorStatus_New2OperationCompleted == null)) {
                this.SmtFeederSensorStatus_New2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmtFeederSensorStatus_New2OperationCompleted);
            }
            this.InvokeAsync("SmtFeederSensorStatus_New2", new object[] {
                        InXml}, this.SmtFeederSensorStatus_New2OperationCompleted, userState);
        }
        
        private void OnSmtFeederSensorStatus_New2OperationCompleted(object arg) {
            if ((this.SmtFeederSensorStatus_New2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmtFeederSensorStatus_New2Completed(this, new SmtFeederSensorStatus_New2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SmtFeederSensorStatus_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmtFeederSensorStatus_New(string InXml) {
            object[] results = this.Invoke("SmtFeederSensorStatus_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatus_NewAsync(string InXml) {
            this.SmtFeederSensorStatus_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatus_NewAsync(string InXml, object userState) {
            if ((this.SmtFeederSensorStatus_NewOperationCompleted == null)) {
                this.SmtFeederSensorStatus_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmtFeederSensorStatus_NewOperationCompleted);
            }
            this.InvokeAsync("SmtFeederSensorStatus_New", new object[] {
                        InXml}, this.SmtFeederSensorStatus_NewOperationCompleted, userState);
        }
        
        private void OnSmtFeederSensorStatus_NewOperationCompleted(object arg) {
            if ((this.SmtFeederSensorStatus_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmtFeederSensorStatus_NewCompleted(this, new SmtFeederSensorStatus_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SmtFeederSensorStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmtFeederSensorStatus(string InXml) {
            object[] results = this.Invoke("SmtFeederSensorStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatusAsync(string InXml) {
            this.SmtFeederSensorStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SmtFeederSensorStatusAsync(string InXml, object userState) {
            if ((this.SmtFeederSensorStatusOperationCompleted == null)) {
                this.SmtFeederSensorStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmtFeederSensorStatusOperationCompleted);
            }
            this.InvokeAsync("SmtFeederSensorStatus", new object[] {
                        InXml}, this.SmtFeederSensorStatusOperationCompleted, userState);
        }
        
        private void OnSmtFeederSensorStatusOperationCompleted(object arg) {
            if ((this.SmtFeederSensorStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmtFeederSensorStatusCompleted(this, new SmtFeederSensorStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SmtReturnLossAlarmLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmtReturnLossAlarmLog(string InXml) {
            object[] results = this.Invoke("SmtReturnLossAlarmLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmtReturnLossAlarmLogAsync(string InXml) {
            this.SmtReturnLossAlarmLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SmtReturnLossAlarmLogAsync(string InXml, object userState) {
            if ((this.SmtReturnLossAlarmLogOperationCompleted == null)) {
                this.SmtReturnLossAlarmLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmtReturnLossAlarmLogOperationCompleted);
            }
            this.InvokeAsync("SmtReturnLossAlarmLog", new object[] {
                        InXml}, this.SmtReturnLossAlarmLogOperationCompleted, userState);
        }
        
        private void OnSmtReturnLossAlarmLogOperationCompleted(object arg) {
            if ((this.SmtReturnLossAlarmLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmtReturnLossAlarmLogCompleted(this, new SmtReturnLossAlarmLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InsertSmtFeederPickupPrint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSmtFeederPickupPrint(string InXml) {
            object[] results = this.Invoke("InsertSmtFeederPickupPrint", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSmtFeederPickupPrintAsync(string InXml) {
            this.InsertSmtFeederPickupPrintAsync(InXml, null);
        }
        
        /// <remarks/>
        public void InsertSmtFeederPickupPrintAsync(string InXml, object userState) {
            if ((this.InsertSmtFeederPickupPrintOperationCompleted == null)) {
                this.InsertSmtFeederPickupPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSmtFeederPickupPrintOperationCompleted);
            }
            this.InvokeAsync("InsertSmtFeederPickupPrint", new object[] {
                        InXml}, this.InsertSmtFeederPickupPrintOperationCompleted, userState);
        }
        
        private void OnInsertSmtFeederPickupPrintOperationCompleted(object arg) {
            if ((this.InsertSmtFeederPickupPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSmtFeederPickupPrintCompleted(this, new InsertSmtFeederPickupPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederBoard_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederBoard_New() {
            object[] results = this.Invoke("LoadSmtFeederBoard_New", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederBoard_NewAsync() {
            this.LoadSmtFeederBoard_NewAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederBoard_NewAsync(object userState) {
            if ((this.LoadSmtFeederBoard_NewOperationCompleted == null)) {
                this.LoadSmtFeederBoard_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederBoard_NewOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederBoard_New", new object[0], this.LoadSmtFeederBoard_NewOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederBoard_NewOperationCompleted(object arg) {
            if ((this.LoadSmtFeederBoard_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederBoard_NewCompleted(this, new LoadSmtFeederBoard_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederBoard", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederBoard() {
            object[] results = this.Invoke("LoadSmtFeederBoard", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederBoardAsync() {
            this.LoadSmtFeederBoardAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederBoardAsync(object userState) {
            if ((this.LoadSmtFeederBoardOperationCompleted == null)) {
                this.LoadSmtFeederBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederBoardOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederBoard", new object[0], this.LoadSmtFeederBoardOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederBoardOperationCompleted(object arg) {
            if ((this.LoadSmtFeederBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederBoardCompleted(this, new LoadSmtFeederBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/FindCombinePickupNoByMoNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindCombinePickupNoByMoNo(string mono) {
            object[] results = this.Invoke("FindCombinePickupNoByMoNo", new object[] {
                        mono});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindCombinePickupNoByMoNoAsync(string mono) {
            this.FindCombinePickupNoByMoNoAsync(mono, null);
        }
        
        /// <remarks/>
        public void FindCombinePickupNoByMoNoAsync(string mono, object userState) {
            if ((this.FindCombinePickupNoByMoNoOperationCompleted == null)) {
                this.FindCombinePickupNoByMoNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCombinePickupNoByMoNoOperationCompleted);
            }
            this.InvokeAsync("FindCombinePickupNoByMoNo", new object[] {
                        mono}, this.FindCombinePickupNoByMoNoOperationCompleted, userState);
        }
        
        private void OnFindCombinePickupNoByMoNoOperationCompleted(object arg) {
            if ((this.FindCombinePickupNoByMoNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCombinePickupNoByMoNoCompleted(this, new FindCombinePickupNoByMoNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederPalletStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederPalletStatus() {
            object[] results = this.Invoke("LoadSmtFeederPalletStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederPalletStatusAsync() {
            this.LoadSmtFeederPalletStatusAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederPalletStatusAsync(object userState) {
            if ((this.LoadSmtFeederPalletStatusOperationCompleted == null)) {
                this.LoadSmtFeederPalletStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederPalletStatusOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederPalletStatus", new object[0], this.LoadSmtFeederPalletStatusOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederPalletStatusOperationCompleted(object arg) {
            if ((this.LoadSmtFeederPalletStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederPalletStatusCompleted(this, new LoadSmtFeederPalletStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtExcessStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtExcessStatus() {
            object[] results = this.Invoke("LoadSmtExcessStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtExcessStatusAsync() {
            this.LoadSmtExcessStatusAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtExcessStatusAsync(object userState) {
            if ((this.LoadSmtExcessStatusOperationCompleted == null)) {
                this.LoadSmtExcessStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtExcessStatusOperationCompleted);
            }
            this.InvokeAsync("LoadSmtExcessStatus", new object[0], this.LoadSmtExcessStatusOperationCompleted, userState);
        }
        
        private void OnLoadSmtExcessStatusOperationCompleted(object arg) {
            if ((this.LoadSmtExcessStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtExcessStatusCompleted(this, new LoadSmtExcessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederOverdueBinTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederOverdueBinTable() {
            object[] results = this.Invoke("LoadSmtFeederOverdueBinTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederOverdueBinTableAsync() {
            this.LoadSmtFeederOverdueBinTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederOverdueBinTableAsync(object userState) {
            if ((this.LoadSmtFeederOverdueBinTableOperationCompleted == null)) {
                this.LoadSmtFeederOverdueBinTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederOverdueBinTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederOverdueBinTable", new object[0], this.LoadSmtFeederOverdueBinTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederOverdueBinTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederOverdueBinTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederOverdueBinTableCompleted(this, new LoadSmtFeederOverdueBinTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederSensorWeekBinTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederSensorWeekBinTable() {
            object[] results = this.Invoke("LoadSmtFeederSensorWeekBinTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorWeekBinTableAsync() {
            this.LoadSmtFeederSensorWeekBinTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorWeekBinTableAsync(object userState) {
            if ((this.LoadSmtFeederSensorWeekBinTableOperationCompleted == null)) {
                this.LoadSmtFeederSensorWeekBinTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederSensorWeekBinTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederSensorWeekBinTable", new object[0], this.LoadSmtFeederSensorWeekBinTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederSensorWeekBinTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederSensorWeekBinTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederSensorWeekBinTableCompleted(this, new LoadSmtFeederSensorWeekBinTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederSensorWeekErroeTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederSensorWeekErroeTable() {
            object[] results = this.Invoke("LoadSmtFeederSensorWeekErroeTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorWeekErroeTableAsync() {
            this.LoadSmtFeederSensorWeekErroeTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorWeekErroeTableAsync(object userState) {
            if ((this.LoadSmtFeederSensorWeekErroeTableOperationCompleted == null)) {
                this.LoadSmtFeederSensorWeekErroeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederSensorWeekErroeTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederSensorWeekErroeTable", new object[0], this.LoadSmtFeederSensorWeekErroeTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederSensorWeekErroeTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederSensorWeekErroeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederSensorWeekErroeTableCompleted(this, new LoadSmtFeederSensorWeekErroeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederBinDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederBinDetail(string BinId) {
            object[] results = this.Invoke("LoadSmtFeederBinDetail", new object[] {
                        BinId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederBinDetailAsync(string BinId) {
            this.LoadSmtFeederBinDetailAsync(BinId, null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederBinDetailAsync(string BinId, object userState) {
            if ((this.LoadSmtFeederBinDetailOperationCompleted == null)) {
                this.LoadSmtFeederBinDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederBinDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederBinDetail", new object[] {
                        BinId}, this.LoadSmtFeederBinDetailOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederBinDetailOperationCompleted(object arg) {
            if ((this.LoadSmtFeederBinDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederBinDetailCompleted(this, new LoadSmtFeederBinDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederOverdueErroeTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederOverdueErroeTable() {
            object[] results = this.Invoke("LoadSmtFeederOverdueErroeTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederOverdueErroeTableAsync() {
            this.LoadSmtFeederOverdueErroeTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederOverdueErroeTableAsync(object userState) {
            if ((this.LoadSmtFeederOverdueErroeTableOperationCompleted == null)) {
                this.LoadSmtFeederOverdueErroeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederOverdueErroeTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederOverdueErroeTable", new object[0], this.LoadSmtFeederOverdueErroeTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederOverdueErroeTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederOverdueErroeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederOverdueErroeTableCompleted(this, new LoadSmtFeederOverdueErroeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederSensorErroeTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederSensorErroeTable() {
            object[] results = this.Invoke("LoadSmtFeederSensorErroeTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorErroeTableAsync() {
            this.LoadSmtFeederSensorErroeTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorErroeTableAsync(object userState) {
            if ((this.LoadSmtFeederSensorErroeTableOperationCompleted == null)) {
                this.LoadSmtFeederSensorErroeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederSensorErroeTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederSensorErroeTable", new object[0], this.LoadSmtFeederSensorErroeTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederSensorErroeTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederSensorErroeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederSensorErroeTableCompleted(this, new LoadSmtFeederSensorErroeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederSensorBinTable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederSensorBinTable() {
            object[] results = this.Invoke("LoadSmtFeederSensorBinTable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorBinTableAsync() {
            this.LoadSmtFeederSensorBinTableAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederSensorBinTableAsync(object userState) {
            if ((this.LoadSmtFeederSensorBinTableOperationCompleted == null)) {
                this.LoadSmtFeederSensorBinTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederSensorBinTableOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederSensorBinTable", new object[0], this.LoadSmtFeederSensorBinTableOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederSensorBinTableOperationCompleted(object arg) {
            if ((this.LoadSmtFeederSensorBinTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederSensorBinTableCompleted(this, new LoadSmtFeederSensorBinTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederAccountStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederAccountStatus() {
            object[] results = this.Invoke("LoadSmtFeederAccountStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederAccountStatusAsync() {
            this.LoadSmtFeederAccountStatusAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederAccountStatusAsync(object userState) {
            if ((this.LoadSmtFeederAccountStatusOperationCompleted == null)) {
                this.LoadSmtFeederAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederAccountStatusOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederAccountStatus", new object[0], this.LoadSmtFeederAccountStatusOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederAccountStatusOperationCompleted(object arg) {
            if ((this.LoadSmtFeederAccountStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederAccountStatusCompleted(this, new LoadSmtFeederAccountStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederMoStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederMoStatus() {
            object[] results = this.Invoke("LoadSmtFeederMoStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederMoStatusAsync() {
            this.LoadSmtFeederMoStatusAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederMoStatusAsync(object userState) {
            if ((this.LoadSmtFeederMoStatusOperationCompleted == null)) {
                this.LoadSmtFeederMoStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederMoStatusOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederMoStatus", new object[0], this.LoadSmtFeederMoStatusOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederMoStatusOperationCompleted(object arg) {
            if ((this.LoadSmtFeederMoStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederMoStatusCompleted(this, new LoadSmtFeederMoStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederPickupPrint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederPickupPrint() {
            object[] results = this.Invoke("LoadSmtFeederPickupPrint", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederPickupPrintAsync() {
            this.LoadSmtFeederPickupPrintAsync(null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederPickupPrintAsync(object userState) {
            if ((this.LoadSmtFeederPickupPrintOperationCompleted == null)) {
                this.LoadSmtFeederPickupPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederPickupPrintOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederPickupPrint", new object[0], this.LoadSmtFeederPickupPrintOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederPickupPrintOperationCompleted(object arg) {
            if ((this.LoadSmtFeederPickupPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederPickupPrintCompleted(this, new LoadSmtFeederPickupPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateSmtExcessDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSmtExcessDetail(string InXml) {
            object[] results = this.Invoke("UpdateSmtExcessDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSmtExcessDetailAsync(string InXml) {
            this.UpdateSmtExcessDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateSmtExcessDetailAsync(string InXml, object userState) {
            if ((this.UpdateSmtExcessDetailOperationCompleted == null)) {
                this.UpdateSmtExcessDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSmtExcessDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateSmtExcessDetail", new object[] {
                        InXml}, this.UpdateSmtExcessDetailOperationCompleted, userState);
        }
        
        private void OnUpdateSmtExcessDetailOperationCompleted(object arg) {
            if ((this.UpdateSmtExcessDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSmtExcessDetailCompleted(this, new UpdateSmtExcessDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DeleteSmtExcessDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSmtExcessDetail(string InXml) {
            object[] results = this.Invoke("DeleteSmtExcessDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSmtExcessDetailAsync(string InXml) {
            this.DeleteSmtExcessDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DeleteSmtExcessDetailAsync(string InXml, object userState) {
            if ((this.DeleteSmtExcessDetailOperationCompleted == null)) {
                this.DeleteSmtExcessDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSmtExcessDetailOperationCompleted);
            }
            this.InvokeAsync("DeleteSmtExcessDetail", new object[] {
                        InXml}, this.DeleteSmtExcessDetailOperationCompleted, userState);
        }
        
        private void OnDeleteSmtExcessDetailOperationCompleted(object arg) {
            if ((this.DeleteSmtExcessDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSmtExcessDetailCompleted(this, new DeleteSmtExcessDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InsertSmtExcessDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSmtExcessDetail(string InXml) {
            object[] results = this.Invoke("InsertSmtExcessDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSmtExcessDetailAsync(string InXml) {
            this.InsertSmtExcessDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void InsertSmtExcessDetailAsync(string InXml, object userState) {
            if ((this.InsertSmtExcessDetailOperationCompleted == null)) {
                this.InsertSmtExcessDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSmtExcessDetailOperationCompleted);
            }
            this.InvokeAsync("InsertSmtExcessDetail", new object[] {
                        InXml}, this.InsertSmtExcessDetailOperationCompleted, userState);
        }
        
        private void OnInsertSmtExcessDetailOperationCompleted(object arg) {
            if ((this.InsertSmtExcessDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSmtExcessDetailCompleted(this, new InsertSmtExcessDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/FindSmtExcesssMono", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindSmtExcesssMono(string lotno) {
            object[] results = this.Invoke("FindSmtExcesssMono", new object[] {
                        lotno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindSmtExcesssMonoAsync(string lotno) {
            this.FindSmtExcesssMonoAsync(lotno, null);
        }
        
        /// <remarks/>
        public void FindSmtExcesssMonoAsync(string lotno, object userState) {
            if ((this.FindSmtExcesssMonoOperationCompleted == null)) {
                this.FindSmtExcesssMonoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSmtExcesssMonoOperationCompleted);
            }
            this.InvokeAsync("FindSmtExcesssMono", new object[] {
                        lotno}, this.FindSmtExcesssMonoOperationCompleted, userState);
        }
        
        private void OnFindSmtExcesssMonoOperationCompleted(object arg) {
            if ((this.FindSmtExcesssMonoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSmtExcesssMonoCompleted(this, new FindSmtExcesssMonoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckPartSupermarkAccount", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckPartSupermarkAccount(string InXml) {
            object[] results = this.Invoke("CheckPartSupermarkAccount", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPartSupermarkAccountAsync(string InXml) {
            this.CheckPartSupermarkAccountAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckPartSupermarkAccountAsync(string InXml, object userState) {
            if ((this.CheckPartSupermarkAccountOperationCompleted == null)) {
                this.CheckPartSupermarkAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPartSupermarkAccountOperationCompleted);
            }
            this.InvokeAsync("CheckPartSupermarkAccount", new object[] {
                        InXml}, this.CheckPartSupermarkAccountOperationCompleted, userState);
        }
        
        private void OnCheckPartSupermarkAccountOperationCompleted(object arg) {
            if ((this.CheckPartSupermarkAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPartSupermarkAccountCompleted(this, new CheckPartSupermarkAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtExcesssDetailByExcessno", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtExcesssDetailByExcessno(string EXCESSNO) {
            object[] results = this.Invoke("LoadSmtExcesssDetailByExcessno", new object[] {
                        EXCESSNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtExcesssDetailByExcessnoAsync(string EXCESSNO) {
            this.LoadSmtExcesssDetailByExcessnoAsync(EXCESSNO, null);
        }
        
        /// <remarks/>
        public void LoadSmtExcesssDetailByExcessnoAsync(string EXCESSNO, object userState) {
            if ((this.LoadSmtExcesssDetailByExcessnoOperationCompleted == null)) {
                this.LoadSmtExcesssDetailByExcessnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtExcesssDetailByExcessnoOperationCompleted);
            }
            this.InvokeAsync("LoadSmtExcesssDetailByExcessno", new object[] {
                        EXCESSNO}, this.LoadSmtExcesssDetailByExcessnoOperationCompleted, userState);
        }
        
        private void OnLoadSmtExcesssDetailByExcessnoOperationCompleted(object arg) {
            if ((this.LoadSmtExcesssDetailByExcessnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtExcesssDetailByExcessnoCompleted(this, new LoadSmtExcesssDetailByExcessnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSmtFeederAreaUseList", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSmtFeederAreaUseList(string InXml) {
            object[] results = this.Invoke("LoadSmtFeederAreaUseList", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSmtFeederAreaUseListAsync(string InXml) {
            this.LoadSmtFeederAreaUseListAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSmtFeederAreaUseListAsync(string InXml, object userState) {
            if ((this.LoadSmtFeederAreaUseListOperationCompleted == null)) {
                this.LoadSmtFeederAreaUseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSmtFeederAreaUseListOperationCompleted);
            }
            this.InvokeAsync("LoadSmtFeederAreaUseList", new object[] {
                        InXml}, this.LoadSmtFeederAreaUseListOperationCompleted, userState);
        }
        
        private void OnLoadSmtFeederAreaUseListOperationCompleted(object arg) {
            if ((this.LoadSmtFeederAreaUseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSmtFeederAreaUseListCompleted(this, new LoadSmtFeederAreaUseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeReworkChangeSerial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeReworkChangeSerial(string InXml) {
            object[] results = this.Invoke("ExeReworkChangeSerial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeReworkChangeSerialAsync(string InXml) {
            this.ExeReworkChangeSerialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeReworkChangeSerialAsync(string InXml, object userState) {
            if ((this.ExeReworkChangeSerialOperationCompleted == null)) {
                this.ExeReworkChangeSerialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeReworkChangeSerialOperationCompleted);
            }
            this.InvokeAsync("ExeReworkChangeSerial", new object[] {
                        InXml}, this.ExeReworkChangeSerialOperationCompleted, userState);
        }
        
        private void OnExeReworkChangeSerialOperationCompleted(object arg) {
            if ((this.ExeReworkChangeSerialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeReworkChangeSerialCompleted(this, new ExeReworkChangeSerialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ReloadMaterial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ReloadMaterial(string InXml) {
            object[] results = this.Invoke("Exe_ReloadMaterial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ReloadMaterialAsync(string InXml) {
            this.Exe_ReloadMaterialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ReloadMaterialAsync(string InXml, object userState) {
            if ((this.Exe_ReloadMaterialOperationCompleted == null)) {
                this.Exe_ReloadMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ReloadMaterialOperationCompleted);
            }
            this.InvokeAsync("Exe_ReloadMaterial", new object[] {
                        InXml}, this.Exe_ReloadMaterialOperationCompleted, userState);
        }
        
        private void OnExe_ReloadMaterialOperationCompleted(object arg) {
            if ((this.Exe_ReloadMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ReloadMaterialCompleted(this, new Exe_ReloadMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPDLineJoinSMDAreaBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPDLineJoinSMDAreaBasis(string InXml) {
            object[] results = this.Invoke("LoadPDLineJoinSMDAreaBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPDLineJoinSMDAreaBasisAsync(string InXml) {
            this.LoadPDLineJoinSMDAreaBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPDLineJoinSMDAreaBasisAsync(string InXml, object userState) {
            if ((this.LoadPDLineJoinSMDAreaBasisOperationCompleted == null)) {
                this.LoadPDLineJoinSMDAreaBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPDLineJoinSMDAreaBasisOperationCompleted);
            }
            this.InvokeAsync("LoadPDLineJoinSMDAreaBasis", new object[] {
                        InXml}, this.LoadPDLineJoinSMDAreaBasisOperationCompleted, userState);
        }
        
        private void OnLoadPDLineJoinSMDAreaBasisOperationCompleted(object arg) {
            if ((this.LoadPDLineJoinSMDAreaBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPDLineJoinSMDAreaBasisCompleted(this, new LoadPDLineJoinSMDAreaBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ChangeFeeder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ChangeFeeder(string InXml) {
            object[] results = this.Invoke("Exe_ChangeFeeder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ChangeFeederAsync(string InXml) {
            this.Exe_ChangeFeederAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ChangeFeederAsync(string InXml, object userState) {
            if ((this.Exe_ChangeFeederOperationCompleted == null)) {
                this.Exe_ChangeFeederOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ChangeFeederOperationCompleted);
            }
            this.InvokeAsync("Exe_ChangeFeeder", new object[] {
                        InXml}, this.Exe_ChangeFeederOperationCompleted, userState);
        }
        
        private void OnExe_ChangeFeederOperationCompleted(object arg) {
            if ((this.Exe_ChangeFeederCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ChangeFeederCompleted(this, new Exe_ChangeFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LoadMaterial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LoadMaterial(string InXml) {
            object[] results = this.Invoke("Exe_LoadMaterial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LoadMaterialAsync(string InXml) {
            this.Exe_LoadMaterialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LoadMaterialAsync(string InXml, object userState) {
            if ((this.Exe_LoadMaterialOperationCompleted == null)) {
                this.Exe_LoadMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LoadMaterialOperationCompleted);
            }
            this.InvokeAsync("Exe_LoadMaterial", new object[] {
                        InXml}, this.Exe_LoadMaterialOperationCompleted, userState);
        }
        
        private void OnExe_LoadMaterialOperationCompleted(object arg) {
            if ((this.Exe_LoadMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LoadMaterialCompleted(this, new Exe_LoadMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LoadMaterial_new", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LoadMaterial_new(string InXml) {
            object[] results = this.Invoke("Exe_LoadMaterial_new", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LoadMaterial_newAsync(string InXml) {
            this.Exe_LoadMaterial_newAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LoadMaterial_newAsync(string InXml, object userState) {
            if ((this.Exe_LoadMaterial_newOperationCompleted == null)) {
                this.Exe_LoadMaterial_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LoadMaterial_newOperationCompleted);
            }
            this.InvokeAsync("Exe_LoadMaterial_new", new object[] {
                        InXml}, this.Exe_LoadMaterial_newOperationCompleted, userState);
        }
        
        private void OnExe_LoadMaterial_newOperationCompleted(object arg) {
            if ((this.Exe_LoadMaterial_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LoadMaterial_newCompleted(this, new Exe_LoadMaterial_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LoadMaterial_newLogic", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LoadMaterial_newLogic(string InXml) {
            object[] results = this.Invoke("Exe_LoadMaterial_newLogic", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LoadMaterial_newLogicAsync(string InXml) {
            this.Exe_LoadMaterial_newLogicAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LoadMaterial_newLogicAsync(string InXml, object userState) {
            if ((this.Exe_LoadMaterial_newLogicOperationCompleted == null)) {
                this.Exe_LoadMaterial_newLogicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LoadMaterial_newLogicOperationCompleted);
            }
            this.InvokeAsync("Exe_LoadMaterial_newLogic", new object[] {
                        InXml}, this.Exe_LoadMaterial_newLogicOperationCompleted, userState);
        }
        
        private void OnExe_LoadMaterial_newLogicOperationCompleted(object arg) {
            if ((this.Exe_LoadMaterial_newLogicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LoadMaterial_newLogicCompleted(this, new Exe_LoadMaterial_newLogicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFU(string InXml) {
            object[] results = this.Invoke("LoadMFU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFUAsync(string InXml) {
            this.LoadMFUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFUAsync(string InXml, object userState) {
            if ((this.LoadMFUOperationCompleted == null)) {
                this.LoadMFUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFUOperationCompleted);
            }
            this.InvokeAsync("LoadMFU", new object[] {
                        InXml}, this.LoadMFUOperationCompleted, userState);
        }
        
        private void OnLoadMFUOperationCompleted(object arg) {
            if ((this.LoadMFUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFUCompleted(this, new LoadMFUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCounterState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCounterState(string InXml) {
            object[] results = this.Invoke("LoadWIPCounterState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateAsync(string InXml) {
            this.LoadWIPCounterStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateAsync(string InXml, object userState) {
            if ((this.LoadWIPCounterStateOperationCompleted == null)) {
                this.LoadWIPCounterStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCounterStateOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCounterState", new object[] {
                        InXml}, this.LoadWIPCounterStateOperationCompleted, userState);
        }
        
        private void OnLoadWIPCounterStateOperationCompleted(object arg) {
            if ((this.LoadWIPCounterStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCounterStateCompleted(this, new LoadWIPCounterStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCounterStateJoinMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCounterStateJoinMOBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPCounterStateJoinMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateJoinMOBasisAsync(string InXml) {
            this.LoadWIPCounterStateJoinMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateJoinMOBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPCounterStateJoinMOBasisOperationCompleted == null)) {
                this.LoadWIPCounterStateJoinMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCounterStateJoinMOBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCounterStateJoinMOBasis", new object[] {
                        InXml}, this.LoadWIPCounterStateJoinMOBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPCounterStateJoinMOBasisOperationCompleted(object arg) {
            if ((this.LoadWIPCounterStateJoinMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCounterStateJoinMOBasisCompleted(this, new LoadWIPCounterStateJoinMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCounterLogJoinMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCounterLogJoinMOBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPCounterLogJoinMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCounterLogJoinMOBasisAsync(string InXml) {
            this.LoadWIPCounterLogJoinMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCounterLogJoinMOBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPCounterLogJoinMOBasisOperationCompleted == null)) {
                this.LoadWIPCounterLogJoinMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCounterLogJoinMOBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCounterLogJoinMOBasis", new object[] {
                        InXml}, this.LoadWIPCounterLogJoinMOBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPCounterLogJoinMOBasisOperationCompleted(object arg) {
            if ((this.LoadWIPCounterLogJoinMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCounterLogJoinMOBasisCompleted(this, new LoadWIPCounterLogJoinMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCounterStateAndLogJoinMOBasis_HMI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCounterStateAndLogJoinMOBasis_HMI(string InXml) {
            object[] results = this.Invoke("LoadWIPCounterStateAndLogJoinMOBasis_HMI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateAndLogJoinMOBasis_HMIAsync(string InXml) {
            this.LoadWIPCounterStateAndLogJoinMOBasis_HMIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCounterStateAndLogJoinMOBasis_HMIAsync(string InXml, object userState) {
            if ((this.LoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted == null)) {
                this.LoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCounterStateAndLogJoinMOBasis_HMI", new object[] {
                        InXml}, this.LoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted, userState);
        }
        
        private void OnLoadWIPCounterStateAndLogJoinMOBasis_HMIOperationCompleted(object arg) {
            if ((this.LoadWIPCounterStateAndLogJoinMOBasis_HMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCounterStateAndLogJoinMOBasis_HMICompleted(this, new LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCounterState_Active", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCounterState_Active(string InXml) {
            object[] results = this.Invoke("LoadWIPCounterState_Active", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCounterState_ActiveAsync(string InXml) {
            this.LoadWIPCounterState_ActiveAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCounterState_ActiveAsync(string InXml, object userState) {
            if ((this.LoadWIPCounterState_ActiveOperationCompleted == null)) {
                this.LoadWIPCounterState_ActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCounterState_ActiveOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCounterState_Active", new object[] {
                        InXml}, this.LoadWIPCounterState_ActiveOperationCompleted, userState);
        }
        
        private void OnLoadWIPCounterState_ActiveOperationCompleted(object arg) {
            if ((this.LoadWIPCounterState_ActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCounterState_ActiveCompleted(this, new LoadWIPCounterState_ActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotOnMOLineDispatch_EQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotOnMOLineDispatch_EQP(string InXml) {
            object[] results = this.Invoke("LoadLotOnMOLineDispatch_EQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotOnMOLineDispatch_EQPAsync(string InXml) {
            this.LoadLotOnMOLineDispatch_EQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotOnMOLineDispatch_EQPAsync(string InXml, object userState) {
            if ((this.LoadLotOnMOLineDispatch_EQPOperationCompleted == null)) {
                this.LoadLotOnMOLineDispatch_EQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotOnMOLineDispatch_EQPOperationCompleted);
            }
            this.InvokeAsync("LoadLotOnMOLineDispatch_EQP", new object[] {
                        InXml}, this.LoadLotOnMOLineDispatch_EQPOperationCompleted, userState);
        }
        
        private void OnLoadLotOnMOLineDispatch_EQPOperationCompleted(object arg) {
            if ((this.LoadLotOnMOLineDispatch_EQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotOnMOLineDispatch_EQPCompleted(this, new LoadLotOnMOLineDispatch_EQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetFinishQty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFinishQty(string InXml) {
            object[] results = this.Invoke("GetFinishQty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishQtyAsync(string InXml) {
            this.GetFinishQtyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetFinishQtyAsync(string InXml, object userState) {
            if ((this.GetFinishQtyOperationCompleted == null)) {
                this.GetFinishQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishQtyOperationCompleted);
            }
            this.InvokeAsync("GetFinishQty", new object[] {
                        InXml}, this.GetFinishQtyOperationCompleted, userState);
        }
        
        private void OnGetFinishQtyOperationCompleted(object arg) {
            if ((this.GetFinishQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishQtyCompleted(this, new GetFinishQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotState_PDLineNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotState_PDLineNo(string InXml) {
            object[] results = this.Invoke("EditLotState_PDLineNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotState_PDLineNoAsync(string InXml) {
            this.EditLotState_PDLineNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotState_PDLineNoAsync(string InXml, object userState) {
            if ((this.EditLotState_PDLineNoOperationCompleted == null)) {
                this.EditLotState_PDLineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotState_PDLineNoOperationCompleted);
            }
            this.InvokeAsync("EditLotState_PDLineNo", new object[] {
                        InXml}, this.EditLotState_PDLineNoOperationCompleted, userState);
        }
        
        private void OnEditLotState_PDLineNoOperationCompleted(object arg) {
            if ((this.EditLotState_PDLineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotState_PDLineNoCompleted(this, new EditLotState_PDLineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_MaintainAction_Accumulate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_MaintainAction_Accumulate(string InXml) {
            object[] results = this.Invoke("Exe_MaintainAction_Accumulate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_MaintainAction_AccumulateAsync(string InXml) {
            this.Exe_MaintainAction_AccumulateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_MaintainAction_AccumulateAsync(string InXml, object userState) {
            if ((this.Exe_MaintainAction_AccumulateOperationCompleted == null)) {
                this.Exe_MaintainAction_AccumulateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_MaintainAction_AccumulateOperationCompleted);
            }
            this.InvokeAsync("Exe_MaintainAction_Accumulate", new object[] {
                        InXml}, this.Exe_MaintainAction_AccumulateOperationCompleted, userState);
        }
        
        private void OnExe_MaintainAction_AccumulateOperationCompleted(object arg) {
            if ((this.Exe_MaintainAction_AccumulateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_MaintainAction_AccumulateCompleted(this, new Exe_MaintainAction_AccumulateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Chk_MaintainAction_Accumulate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Chk_MaintainAction_Accumulate(string InXml) {
            object[] results = this.Invoke("Chk_MaintainAction_Accumulate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Chk_MaintainAction_AccumulateAsync(string InXml) {
            this.Chk_MaintainAction_AccumulateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Chk_MaintainAction_AccumulateAsync(string InXml, object userState) {
            if ((this.Chk_MaintainAction_AccumulateOperationCompleted == null)) {
                this.Chk_MaintainAction_AccumulateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChk_MaintainAction_AccumulateOperationCompleted);
            }
            this.InvokeAsync("Chk_MaintainAction_Accumulate", new object[] {
                        InXml}, this.Chk_MaintainAction_AccumulateOperationCompleted, userState);
        }
        
        private void OnChk_MaintainAction_AccumulateOperationCompleted(object arg) {
            if ((this.Chk_MaintainAction_AccumulateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Chk_MaintainAction_AccumulateCompleted(this, new Chk_MaintainAction_AccumulateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWeighingDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWeighingDetail(string InXml) {
            object[] results = this.Invoke("AddWeighingDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWeighingDetailAsync(string InXml) {
            this.AddWeighingDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWeighingDetailAsync(string InXml, object userState) {
            if ((this.AddWeighingDetailOperationCompleted == null)) {
                this.AddWeighingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWeighingDetailOperationCompleted);
            }
            this.InvokeAsync("AddWeighingDetail", new object[] {
                        InXml}, this.AddWeighingDetailOperationCompleted, userState);
        }
        
        private void OnAddWeighingDetailOperationCompleted(object arg) {
            if ((this.AddWeighingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWeighingDetailCompleted(this, new AddWeighingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWeighingDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWeighingDetail(string InXml) {
            object[] results = this.Invoke("UpdWeighingDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWeighingDetailAsync(string InXml) {
            this.UpdWeighingDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWeighingDetailAsync(string InXml, object userState) {
            if ((this.UpdWeighingDetailOperationCompleted == null)) {
                this.UpdWeighingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWeighingDetailOperationCompleted);
            }
            this.InvokeAsync("UpdWeighingDetail", new object[] {
                        InXml}, this.UpdWeighingDetailOperationCompleted, userState);
        }
        
        private void OnUpdWeighingDetailOperationCompleted(object arg) {
            if ((this.UpdWeighingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWeighingDetailCompleted(this, new UpdWeighingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWeighingDetail_Others", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWeighingDetail_Others(string InXml) {
            object[] results = this.Invoke("UpdWeighingDetail_Others", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWeighingDetail_OthersAsync(string InXml) {
            this.UpdWeighingDetail_OthersAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWeighingDetail_OthersAsync(string InXml, object userState) {
            if ((this.UpdWeighingDetail_OthersOperationCompleted == null)) {
                this.UpdWeighingDetail_OthersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWeighingDetail_OthersOperationCompleted);
            }
            this.InvokeAsync("UpdWeighingDetail_Others", new object[] {
                        InXml}, this.UpdWeighingDetail_OthersOperationCompleted, userState);
        }
        
        private void OnUpdWeighingDetail_OthersOperationCompleted(object arg) {
            if ((this.UpdWeighingDetail_OthersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWeighingDetail_OthersCompleted(this, new UpdWeighingDetail_OthersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWeighingPrintLabel_dtMessage", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWeighingPrintLabel_dtMessage(string InXml) {
            object[] results = this.Invoke("AddWeighingPrintLabel_dtMessage", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWeighingPrintLabel_dtMessageAsync(string InXml) {
            this.AddWeighingPrintLabel_dtMessageAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWeighingPrintLabel_dtMessageAsync(string InXml, object userState) {
            if ((this.AddWeighingPrintLabel_dtMessageOperationCompleted == null)) {
                this.AddWeighingPrintLabel_dtMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWeighingPrintLabel_dtMessageOperationCompleted);
            }
            this.InvokeAsync("AddWeighingPrintLabel_dtMessage", new object[] {
                        InXml}, this.AddWeighingPrintLabel_dtMessageOperationCompleted, userState);
        }
        
        private void OnAddWeighingPrintLabel_dtMessageOperationCompleted(object arg) {
            if ((this.AddWeighingPrintLabel_dtMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWeighingPrintLabel_dtMessageCompleted(this, new AddWeighingPrintLabel_dtMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWeighingPrintLabel", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWeighingPrintLabel(string InXml) {
            object[] results = this.Invoke("AddWeighingPrintLabel", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWeighingPrintLabelAsync(string InXml) {
            this.AddWeighingPrintLabelAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWeighingPrintLabelAsync(string InXml, object userState) {
            if ((this.AddWeighingPrintLabelOperationCompleted == null)) {
                this.AddWeighingPrintLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWeighingPrintLabelOperationCompleted);
            }
            this.InvokeAsync("AddWeighingPrintLabel", new object[] {
                        InXml}, this.AddWeighingPrintLabelOperationCompleted, userState);
        }
        
        private void OnAddWeighingPrintLabelOperationCompleted(object arg) {
            if ((this.AddWeighingPrintLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWeighingPrintLabelCompleted(this, new AddWeighingPrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWeighingPrintLabel_dtMessage", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWeighingPrintLabel_dtMessage(string InXml) {
            object[] results = this.Invoke("UpdWeighingPrintLabel_dtMessage", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWeighingPrintLabel_dtMessageAsync(string InXml) {
            this.UpdWeighingPrintLabel_dtMessageAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWeighingPrintLabel_dtMessageAsync(string InXml, object userState) {
            if ((this.UpdWeighingPrintLabel_dtMessageOperationCompleted == null)) {
                this.UpdWeighingPrintLabel_dtMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWeighingPrintLabel_dtMessageOperationCompleted);
            }
            this.InvokeAsync("UpdWeighingPrintLabel_dtMessage", new object[] {
                        InXml}, this.UpdWeighingPrintLabel_dtMessageOperationCompleted, userState);
        }
        
        private void OnUpdWeighingPrintLabel_dtMessageOperationCompleted(object arg) {
            if ((this.UpdWeighingPrintLabel_dtMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWeighingPrintLabel_dtMessageCompleted(this, new UpdWeighingPrintLabel_dtMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWeighingPrintLabel", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWeighingPrintLabel(string InXml) {
            object[] results = this.Invoke("UpdWeighingPrintLabel", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWeighingPrintLabelAsync(string InXml) {
            this.UpdWeighingPrintLabelAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWeighingPrintLabelAsync(string InXml, object userState) {
            if ((this.UpdWeighingPrintLabelOperationCompleted == null)) {
                this.UpdWeighingPrintLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWeighingPrintLabelOperationCompleted);
            }
            this.InvokeAsync("UpdWeighingPrintLabel", new object[] {
                        InXml}, this.UpdWeighingPrintLabelOperationCompleted, userState);
        }
        
        private void OnUpdWeighingPrintLabelOperationCompleted(object arg) {
            if ((this.UpdWeighingPrintLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWeighingPrintLabelCompleted(this, new UpdWeighingPrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWeighingDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWeighingDetail(string InXml) {
            object[] results = this.Invoke("LoadWeighingDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWeighingDetailAsync(string InXml) {
            this.LoadWeighingDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWeighingDetailAsync(string InXml, object userState) {
            if ((this.LoadWeighingDetailOperationCompleted == null)) {
                this.LoadWeighingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWeighingDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWeighingDetail", new object[] {
                        InXml}, this.LoadWeighingDetailOperationCompleted, userState);
        }
        
        private void OnLoadWeighingDetailOperationCompleted(object arg) {
            if ((this.LoadWeighingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWeighingDetailCompleted(this, new LoadWeighingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckAssyDEJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAssyDEJ(string InXml) {
            object[] results = this.Invoke("CheckAssyDEJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAssyDEJAsync(string InXml) {
            this.CheckAssyDEJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckAssyDEJAsync(string InXml, object userState) {
            if ((this.CheckAssyDEJOperationCompleted == null)) {
                this.CheckAssyDEJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAssyDEJOperationCompleted);
            }
            this.InvokeAsync("CheckAssyDEJ", new object[] {
                        InXml}, this.CheckAssyDEJOperationCompleted, userState);
        }
        
        private void OnCheckAssyDEJOperationCompleted(object arg) {
            if ((this.CheckAssyDEJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAssyDEJCompleted(this, new CheckAssyDEJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TMOCheckDEJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TMOCheckDEJ(string InXml) {
            object[] results = this.Invoke("TMOCheckDEJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TMOCheckDEJAsync(string InXml) {
            this.TMOCheckDEJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void TMOCheckDEJAsync(string InXml, object userState) {
            if ((this.TMOCheckDEJOperationCompleted == null)) {
                this.TMOCheckDEJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTMOCheckDEJOperationCompleted);
            }
            this.InvokeAsync("TMOCheckDEJ", new object[] {
                        InXml}, this.TMOCheckDEJOperationCompleted, userState);
        }
        
        private void OnTMOCheckDEJOperationCompleted(object arg) {
            if ((this.TMOCheckDEJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TMOCheckDEJCompleted(this, new TMOCheckDEJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCUS_MOShipConstraint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCUS_MOShipConstraint(string InXml) {
            object[] results = this.Invoke("LoadCUS_MOShipConstraint", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCUS_MOShipConstraintAsync(string InXml) {
            this.LoadCUS_MOShipConstraintAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCUS_MOShipConstraintAsync(string InXml, object userState) {
            if ((this.LoadCUS_MOShipConstraintOperationCompleted == null)) {
                this.LoadCUS_MOShipConstraintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCUS_MOShipConstraintOperationCompleted);
            }
            this.InvokeAsync("LoadCUS_MOShipConstraint", new object[] {
                        InXml}, this.LoadCUS_MOShipConstraintOperationCompleted, userState);
        }
        
        private void OnLoadCUS_MOShipConstraintOperationCompleted(object arg) {
            if ((this.LoadCUS_MOShipConstraintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCUS_MOShipConstraintCompleted(this, new LoadCUS_MOShipConstraintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPacking_PreCCDEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPacking_PreCCDEquipment(string InXml) {
            object[] results = this.Invoke("LoadPacking_PreCCDEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPacking_PreCCDEquipmentAsync(string InXml) {
            this.LoadPacking_PreCCDEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPacking_PreCCDEquipmentAsync(string InXml, object userState) {
            if ((this.LoadPacking_PreCCDEquipmentOperationCompleted == null)) {
                this.LoadPacking_PreCCDEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPacking_PreCCDEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadPacking_PreCCDEquipment", new object[] {
                        InXml}, this.LoadPacking_PreCCDEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadPacking_PreCCDEquipmentOperationCompleted(object arg) {
            if ((this.LoadPacking_PreCCDEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPacking_PreCCDEquipmentCompleted(this, new LoadPacking_PreCCDEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ChangeFeeder_WJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ChangeFeeder_WJ(string InXml) {
            object[] results = this.Invoke("Exe_ChangeFeeder_WJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ChangeFeeder_WJAsync(string InXml) {
            this.Exe_ChangeFeeder_WJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ChangeFeeder_WJAsync(string InXml, object userState) {
            if ((this.Exe_ChangeFeeder_WJOperationCompleted == null)) {
                this.Exe_ChangeFeeder_WJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ChangeFeeder_WJOperationCompleted);
            }
            this.InvokeAsync("Exe_ChangeFeeder_WJ", new object[] {
                        InXml}, this.Exe_ChangeFeeder_WJOperationCompleted, userState);
        }
        
        private void OnExe_ChangeFeeder_WJOperationCompleted(object arg) {
            if ((this.Exe_ChangeFeeder_WJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ChangeFeeder_WJCompleted(this, new Exe_ChangeFeeder_WJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ReloadMaterial_WJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ReloadMaterial_WJ(string InXml) {
            object[] results = this.Invoke("Exe_ReloadMaterial_WJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ReloadMaterial_WJAsync(string InXml) {
            this.Exe_ReloadMaterial_WJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ReloadMaterial_WJAsync(string InXml, object userState) {
            if ((this.Exe_ReloadMaterial_WJOperationCompleted == null)) {
                this.Exe_ReloadMaterial_WJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ReloadMaterial_WJOperationCompleted);
            }
            this.InvokeAsync("Exe_ReloadMaterial_WJ", new object[] {
                        InXml}, this.Exe_ReloadMaterial_WJOperationCompleted, userState);
        }
        
        private void OnExe_ReloadMaterial_WJOperationCompleted(object arg) {
            if ((this.Exe_ReloadMaterial_WJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ReloadMaterial_WJCompleted(this, new Exe_ReloadMaterial_WJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdFeederMFU_WJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdFeederMFU_WJ(string InXml) {
            object[] results = this.Invoke("UpdFeederMFU_WJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdFeederMFU_WJAsync(string InXml) {
            this.UpdFeederMFU_WJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdFeederMFU_WJAsync(string InXml, object userState) {
            if ((this.UpdFeederMFU_WJOperationCompleted == null)) {
                this.UpdFeederMFU_WJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdFeederMFU_WJOperationCompleted);
            }
            this.InvokeAsync("UpdFeederMFU_WJ", new object[] {
                        InXml}, this.UpdFeederMFU_WJOperationCompleted, userState);
        }
        
        private void OnUpdFeederMFU_WJOperationCompleted(object arg) {
            if ((this.UpdFeederMFU_WJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdFeederMFU_WJCompleted(this, new UpdFeederMFU_WJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOOISpec_WJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOOISpec_WJ(string InXml) {
            object[] results = this.Invoke("LoadMOOISpec_WJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOOISpec_WJAsync(string InXml) {
            this.LoadMOOISpec_WJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOOISpec_WJAsync(string InXml, object userState) {
            if ((this.LoadMOOISpec_WJOperationCompleted == null)) {
                this.LoadMOOISpec_WJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOOISpec_WJOperationCompleted);
            }
            this.InvokeAsync("LoadMOOISpec_WJ", new object[] {
                        InXml}, this.LoadMOOISpec_WJOperationCompleted, userState);
        }
        
        private void OnLoadMOOISpec_WJOperationCompleted(object arg) {
            if ((this.LoadMOOISpec_WJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOOISpec_WJCompleted(this, new LoadMOOISpec_WJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOCombine_MONo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOCombine_MONo(string InXml) {
            object[] results = this.Invoke("LoadMOCombine_MONo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOCombine_MONoAsync(string InXml) {
            this.LoadMOCombine_MONoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOCombine_MONoAsync(string InXml, object userState) {
            if ((this.LoadMOCombine_MONoOperationCompleted == null)) {
                this.LoadMOCombine_MONoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOCombine_MONoOperationCompleted);
            }
            this.InvokeAsync("LoadMOCombine_MONo", new object[] {
                        InXml}, this.LoadMOCombine_MONoOperationCompleted, userState);
        }
        
        private void OnLoadMOCombine_MONoOperationCompleted(object arg) {
            if ((this.LoadMOCombine_MONoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOCombine_MONoCompleted(this, new LoadMOCombine_MONoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetEQPLoss_WJ", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEQPLoss_WJ(string InXml) {
            object[] results = this.Invoke("GetEQPLoss_WJ", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEQPLoss_WJAsync(string InXml) {
            this.GetEQPLoss_WJAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetEQPLoss_WJAsync(string InXml, object userState) {
            if ((this.GetEQPLoss_WJOperationCompleted == null)) {
                this.GetEQPLoss_WJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEQPLoss_WJOperationCompleted);
            }
            this.InvokeAsync("GetEQPLoss_WJ", new object[] {
                        InXml}, this.GetEQPLoss_WJOperationCompleted, userState);
        }
        
        private void OnGetEQPLoss_WJOperationCompleted(object arg) {
            if ((this.GetEQPLoss_WJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEQPLoss_WJCompleted(this, new GetEQPLoss_WJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/RecordEQPLossLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecordEQPLossLog(string InXml) {
            object[] results = this.Invoke("RecordEQPLossLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecordEQPLossLogAsync(string InXml) {
            this.RecordEQPLossLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void RecordEQPLossLogAsync(string InXml, object userState) {
            if ((this.RecordEQPLossLogOperationCompleted == null)) {
                this.RecordEQPLossLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordEQPLossLogOperationCompleted);
            }
            this.InvokeAsync("RecordEQPLossLog", new object[] {
                        InXml}, this.RecordEQPLossLogOperationCompleted, userState);
        }
        
        private void OnRecordEQPLossLogOperationCompleted(object arg) {
            if ((this.RecordEQPLossLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordEQPLossLogCompleted(this, new RecordEQPLossLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWIPMOFittingTotalWeight", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWIPMOFittingTotalWeight(string InXml) {
            object[] results = this.Invoke("UpdWIPMOFittingTotalWeight", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWIPMOFittingTotalWeightAsync(string InXml) {
            this.UpdWIPMOFittingTotalWeightAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWIPMOFittingTotalWeightAsync(string InXml, object userState) {
            if ((this.UpdWIPMOFittingTotalWeightOperationCompleted == null)) {
                this.UpdWIPMOFittingTotalWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWIPMOFittingTotalWeightOperationCompleted);
            }
            this.InvokeAsync("UpdWIPMOFittingTotalWeight", new object[] {
                        InXml}, this.UpdWIPMOFittingTotalWeightOperationCompleted, userState);
        }
        
        private void OnUpdWIPMOFittingTotalWeightOperationCompleted(object arg) {
            if ((this.UpdWIPMOFittingTotalWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWIPMOFittingTotalWeightCompleted(this, new UpdWIPMOFittingTotalWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPMOFittingTotalWeight", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPMOFittingTotalWeight(string InXml) {
            object[] results = this.Invoke("LoadWIPMOFittingTotalWeight", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPMOFittingTotalWeightAsync(string InXml) {
            this.LoadWIPMOFittingTotalWeightAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPMOFittingTotalWeightAsync(string InXml, object userState) {
            if ((this.LoadWIPMOFittingTotalWeightOperationCompleted == null)) {
                this.LoadWIPMOFittingTotalWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPMOFittingTotalWeightOperationCompleted);
            }
            this.InvokeAsync("LoadWIPMOFittingTotalWeight", new object[] {
                        InXml}, this.LoadWIPMOFittingTotalWeightOperationCompleted, userState);
        }
        
        private void OnLoadWIPMOFittingTotalWeightOperationCompleted(object arg) {
            if ((this.LoadWIPMOFittingTotalWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPMOFittingTotalWeightCompleted(this, new LoadWIPMOFittingTotalWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadIFMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadIFMOBasis(string InXml) {
            object[] results = this.Invoke("LoadIFMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadIFMOBasisAsync(string InXml) {
            this.LoadIFMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadIFMOBasisAsync(string InXml, object userState) {
            if ((this.LoadIFMOBasisOperationCompleted == null)) {
                this.LoadIFMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadIFMOBasisOperationCompleted);
            }
            this.InvokeAsync("LoadIFMOBasis", new object[] {
                        InXml}, this.LoadIFMOBasisOperationCompleted, userState);
        }
        
        private void OnLoadIFMOBasisOperationCompleted(object arg) {
            if ((this.LoadIFMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadIFMOBasisCompleted(this, new LoadIFMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddIFMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddIFMOBasis(string InXml) {
            object[] results = this.Invoke("AddIFMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddIFMOBasisAsync(string InXml) {
            this.AddIFMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddIFMOBasisAsync(string InXml, object userState) {
            if ((this.AddIFMOBasisOperationCompleted == null)) {
                this.AddIFMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIFMOBasisOperationCompleted);
            }
            this.InvokeAsync("AddIFMOBasis", new object[] {
                        InXml}, this.AddIFMOBasisOperationCompleted, userState);
        }
        
        private void OnAddIFMOBasisOperationCompleted(object arg) {
            if ((this.AddIFMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIFMOBasisCompleted(this, new AddIFMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddIFPackingListBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddIFPackingListBasis(string InXml) {
            object[] results = this.Invoke("AddIFPackingListBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddIFPackingListBasisAsync(string InXml) {
            this.AddIFPackingListBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddIFPackingListBasisAsync(string InXml, object userState) {
            if ((this.AddIFPackingListBasisOperationCompleted == null)) {
                this.AddIFPackingListBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIFPackingListBasisOperationCompleted);
            }
            this.InvokeAsync("AddIFPackingListBasis", new object[] {
                        InXml}, this.AddIFPackingListBasisOperationCompleted, userState);
        }
        
        private void OnAddIFPackingListBasisOperationCompleted(object arg) {
            if ((this.AddIFPackingListBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIFPackingListBasisCompleted(this, new AddIFPackingListBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddIFPackingListDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddIFPackingListDetail(string InXml) {
            object[] results = this.Invoke("AddIFPackingListDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddIFPackingListDetailAsync(string InXml) {
            this.AddIFPackingListDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddIFPackingListDetailAsync(string InXml, object userState) {
            if ((this.AddIFPackingListDetailOperationCompleted == null)) {
                this.AddIFPackingListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIFPackingListDetailOperationCompleted);
            }
            this.InvokeAsync("AddIFPackingListDetail", new object[] {
                        InXml}, this.AddIFPackingListDetailOperationCompleted, userState);
        }
        
        private void OnAddIFPackingListDetailOperationCompleted(object arg) {
            if ((this.AddIFPackingListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIFPackingListDetailCompleted(this, new AddIFPackingListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadIFPackingListDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadIFPackingListDetail(string InXml) {
            object[] results = this.Invoke("LoadIFPackingListDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadIFPackingListDetailAsync(string InXml) {
            this.LoadIFPackingListDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadIFPackingListDetailAsync(string InXml, object userState) {
            if ((this.LoadIFPackingListDetailOperationCompleted == null)) {
                this.LoadIFPackingListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadIFPackingListDetailOperationCompleted);
            }
            this.InvokeAsync("LoadIFPackingListDetail", new object[] {
                        InXml}, this.LoadIFPackingListDetailOperationCompleted, userState);
        }
        
        private void OnLoadIFPackingListDetailOperationCompleted(object arg) {
            if ((this.LoadIFPackingListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadIFPackingListDetailCompleted(this, new LoadIFPackingListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingCartonJoinPackingBoxDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingCartonJoinPackingBoxDetail(string InXml) {
            object[] results = this.Invoke("LoadMOPackingCartonJoinPackingBoxDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingCartonJoinPackingBoxDetailAsync(string InXml) {
            this.LoadMOPackingCartonJoinPackingBoxDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingCartonJoinPackingBoxDetailAsync(string InXml, object userState) {
            if ((this.LoadMOPackingCartonJoinPackingBoxDetailOperationCompleted == null)) {
                this.LoadMOPackingCartonJoinPackingBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingCartonJoinPackingBoxDetailOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingCartonJoinPackingBoxDetail", new object[] {
                        InXml}, this.LoadMOPackingCartonJoinPackingBoxDetailOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingCartonJoinPackingBoxDetailOperationCompleted(object arg) {
            if ((this.LoadMOPackingCartonJoinPackingBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingCartonJoinPackingBoxDetailCompleted(this, new LoadMOPackingCartonJoinPackingBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMOConfirmContent", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMOConfirmContent(string InXml) {
            object[] results = this.Invoke("GetMOConfirmContent", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMOConfirmContentAsync(string InXml) {
            this.GetMOConfirmContentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMOConfirmContentAsync(string InXml, object userState) {
            if ((this.GetMOConfirmContentOperationCompleted == null)) {
                this.GetMOConfirmContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMOConfirmContentOperationCompleted);
            }
            this.InvokeAsync("GetMOConfirmContent", new object[] {
                        InXml}, this.GetMOConfirmContentOperationCompleted, userState);
        }
        
        private void OnGetMOConfirmContentOperationCompleted(object arg) {
            if ((this.GetMOConfirmContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMOConfirmContentCompleted(this, new GetMOConfirmContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOConfirm(string InXml, System.Data.DataSet dsEffectiveUsage) {
            object[] results = this.Invoke("ExeMOConfirm", new object[] {
                        InXml,
                        dsEffectiveUsage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOConfirmAsync(string InXml, System.Data.DataSet dsEffectiveUsage) {
            this.ExeMOConfirmAsync(InXml, dsEffectiveUsage, null);
        }
        
        /// <remarks/>
        public void ExeMOConfirmAsync(string InXml, System.Data.DataSet dsEffectiveUsage, object userState) {
            if ((this.ExeMOConfirmOperationCompleted == null)) {
                this.ExeMOConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOConfirmOperationCompleted);
            }
            this.InvokeAsync("ExeMOConfirm", new object[] {
                        InXml,
                        dsEffectiveUsage}, this.ExeMOConfirmOperationCompleted, userState);
        }
        
        private void OnExeMOConfirmOperationCompleted(object arg) {
            if ((this.ExeMOConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOConfirmCompleted(this, new ExeMOConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeBackflush", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeBackflush(string InXml) {
            object[] results = this.Invoke("ExeBackflush", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeBackflushAsync(string InXml) {
            this.ExeBackflushAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeBackflushAsync(string InXml, object userState) {
            if ((this.ExeBackflushOperationCompleted == null)) {
                this.ExeBackflushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeBackflushOperationCompleted);
            }
            this.InvokeAsync("ExeBackflush", new object[] {
                        InXml}, this.ExeBackflushOperationCompleted, userState);
        }
        
        private void OnExeBackflushOperationCompleted(object arg) {
            if ((this.ExeBackflushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeBackflushCompleted(this, new ExeBackflushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOConfirm_NoBatch", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOConfirm_NoBatch(string InXml) {
            object[] results = this.Invoke("ExeMOConfirm_NoBatch", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOConfirm_NoBatchAsync(string InXml) {
            this.ExeMOConfirm_NoBatchAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOConfirm_NoBatchAsync(string InXml, object userState) {
            if ((this.ExeMOConfirm_NoBatchOperationCompleted == null)) {
                this.ExeMOConfirm_NoBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOConfirm_NoBatchOperationCompleted);
            }
            this.InvokeAsync("ExeMOConfirm_NoBatch", new object[] {
                        InXml}, this.ExeMOConfirm_NoBatchOperationCompleted, userState);
        }
        
        private void OnExeMOConfirm_NoBatchOperationCompleted(object arg) {
            if ((this.ExeMOConfirm_NoBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOConfirm_NoBatchCompleted(this, new ExeMOConfirm_NoBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPrepareMaterialTemp_NEW", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPrepareMaterialTemp_NEW(string InXml) {
            object[] results = this.Invoke("LoadPrepareMaterialTemp_NEW", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPrepareMaterialTemp_NEWAsync(string InXml) {
            this.LoadPrepareMaterialTemp_NEWAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPrepareMaterialTemp_NEWAsync(string InXml, object userState) {
            if ((this.LoadPrepareMaterialTemp_NEWOperationCompleted == null)) {
                this.LoadPrepareMaterialTemp_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPrepareMaterialTemp_NEWOperationCompleted);
            }
            this.InvokeAsync("LoadPrepareMaterialTemp_NEW", new object[] {
                        InXml}, this.LoadPrepareMaterialTemp_NEWOperationCompleted, userState);
        }
        
        private void OnLoadPrepareMaterialTemp_NEWOperationCompleted(object arg) {
            if ((this.LoadPrepareMaterialTemp_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPrepareMaterialTemp_NEWCompleted(this, new LoadPrepareMaterialTemp_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdTryRunTypeCheck_D3D4", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdTryRunTypeCheck_D3D4(string InXml) {
            object[] results = this.Invoke("UpdTryRunTypeCheck_D3D4", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdTryRunTypeCheck_D3D4Async(string InXml) {
            this.UpdTryRunTypeCheck_D3D4Async(InXml, null);
        }
        
        /// <remarks/>
        public void UpdTryRunTypeCheck_D3D4Async(string InXml, object userState) {
            if ((this.UpdTryRunTypeCheck_D3D4OperationCompleted == null)) {
                this.UpdTryRunTypeCheck_D3D4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdTryRunTypeCheck_D3D4OperationCompleted);
            }
            this.InvokeAsync("UpdTryRunTypeCheck_D3D4", new object[] {
                        InXml}, this.UpdTryRunTypeCheck_D3D4OperationCompleted, userState);
        }
        
        private void OnUpdTryRunTypeCheck_D3D4OperationCompleted(object arg) {
            if ((this.UpdTryRunTypeCheck_D3D4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdTryRunTypeCheck_D3D4Completed(this, new UpdTryRunTypeCheck_D3D4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWeighingDetail_Reprint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWeighingDetail_Reprint(string InXml) {
            object[] results = this.Invoke("LoadWeighingDetail_Reprint", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWeighingDetail_ReprintAsync(string InXml) {
            this.LoadWeighingDetail_ReprintAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWeighingDetail_ReprintAsync(string InXml, object userState) {
            if ((this.LoadWeighingDetail_ReprintOperationCompleted == null)) {
                this.LoadWeighingDetail_ReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWeighingDetail_ReprintOperationCompleted);
            }
            this.InvokeAsync("LoadWeighingDetail_Reprint", new object[] {
                        InXml}, this.LoadWeighingDetail_ReprintOperationCompleted, userState);
        }
        
        private void OnLoadWeighingDetail_ReprintOperationCompleted(object arg) {
            if ((this.LoadWeighingDetail_ReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWeighingDetail_ReprintCompleted(this, new LoadWeighingDetail_ReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWeighingPrintLabel_dtMessage_Reprint", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWeighingPrintLabel_dtMessage_Reprint(string InXml) {
            object[] results = this.Invoke("LoadWeighingPrintLabel_dtMessage_Reprint", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWeighingPrintLabel_dtMessage_ReprintAsync(string InXml) {
            this.LoadWeighingPrintLabel_dtMessage_ReprintAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWeighingPrintLabel_dtMessage_ReprintAsync(string InXml, object userState) {
            if ((this.LoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted == null)) {
                this.LoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted);
            }
            this.InvokeAsync("LoadWeighingPrintLabel_dtMessage_Reprint", new object[] {
                        InXml}, this.LoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted, userState);
        }
        
        private void OnLoadWeighingPrintLabel_dtMessage_ReprintOperationCompleted(object arg) {
            if ((this.LoadWeighingPrintLabel_dtMessage_ReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWeighingPrintLabel_dtMessage_ReprintCompleted(this, new LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPacking_PreT2Equipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPacking_PreT2Equipment(string InXml) {
            object[] results = this.Invoke("LoadPacking_PreT2Equipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPacking_PreT2EquipmentAsync(string InXml) {
            this.LoadPacking_PreT2EquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPacking_PreT2EquipmentAsync(string InXml, object userState) {
            if ((this.LoadPacking_PreT2EquipmentOperationCompleted == null)) {
                this.LoadPacking_PreT2EquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPacking_PreT2EquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadPacking_PreT2Equipment", new object[] {
                        InXml}, this.LoadPacking_PreT2EquipmentOperationCompleted, userState);
        }
        
        private void OnLoadPacking_PreT2EquipmentOperationCompleted(object arg) {
            if ((this.LoadPacking_PreT2EquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPacking_PreT2EquipmentCompleted(this, new LoadPacking_PreT2EquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadBinNoState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadBinNoState(string InXml) {
            object[] results = this.Invoke("LoadBinNoState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBinNoStateAsync(string InXml) {
            this.LoadBinNoStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadBinNoStateAsync(string InXml, object userState) {
            if ((this.LoadBinNoStateOperationCompleted == null)) {
                this.LoadBinNoStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBinNoStateOperationCompleted);
            }
            this.InvokeAsync("LoadBinNoState", new object[] {
                        InXml}, this.LoadBinNoStateOperationCompleted, userState);
        }
        
        private void OnLoadBinNoStateOperationCompleted(object arg) {
            if ((this.LoadBinNoStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBinNoStateCompleted(this, new LoadBinNoStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdBinNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdBinNo(string InXml) {
            object[] results = this.Invoke("UpdBinNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdBinNoAsync(string InXml) {
            this.UpdBinNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdBinNoAsync(string InXml, object userState) {
            if ((this.UpdBinNoOperationCompleted == null)) {
                this.UpdBinNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdBinNoOperationCompleted);
            }
            this.InvokeAsync("UpdBinNo", new object[] {
                        InXml}, this.UpdBinNoOperationCompleted, userState);
        }
        
        private void OnUpdBinNoOperationCompleted(object arg) {
            if ((this.UpdBinNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdBinNoCompleted(this, new UpdBinNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRoomNoState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRoomNoState(string InXml) {
            object[] results = this.Invoke("LoadRoomNoState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRoomNoStateAsync(string InXml) {
            this.LoadRoomNoStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRoomNoStateAsync(string InXml, object userState) {
            if ((this.LoadRoomNoStateOperationCompleted == null)) {
                this.LoadRoomNoStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRoomNoStateOperationCompleted);
            }
            this.InvokeAsync("LoadRoomNoState", new object[] {
                        InXml}, this.LoadRoomNoStateOperationCompleted, userState);
        }
        
        private void OnLoadRoomNoStateOperationCompleted(object arg) {
            if ((this.LoadRoomNoStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRoomNoStateCompleted(this, new LoadRoomNoStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdRoomNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdRoomNo(string InXml) {
            object[] results = this.Invoke("UpdRoomNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdRoomNoAsync(string InXml) {
            this.UpdRoomNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdRoomNoAsync(string InXml, object userState) {
            if ((this.UpdRoomNoOperationCompleted == null)) {
                this.UpdRoomNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdRoomNoOperationCompleted);
            }
            this.InvokeAsync("UpdRoomNo", new object[] {
                        InXml}, this.UpdRoomNoOperationCompleted, userState);
        }
        
        private void OnUpdRoomNoOperationCompleted(object arg) {
            if ((this.UpdRoomNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdRoomNoCompleted(this, new UpdRoomNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateWeight_Packing", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateWeight_Packing(string InXml) {
            object[] results = this.Invoke("UpdateWeight_Packing", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWeight_PackingAsync(string InXml) {
            this.UpdateWeight_PackingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateWeight_PackingAsync(string InXml, object userState) {
            if ((this.UpdateWeight_PackingOperationCompleted == null)) {
                this.UpdateWeight_PackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWeight_PackingOperationCompleted);
            }
            this.InvokeAsync("UpdateWeight_Packing", new object[] {
                        InXml}, this.UpdateWeight_PackingOperationCompleted, userState);
        }
        
        private void OnUpdateWeight_PackingOperationCompleted(object arg) {
            if ((this.UpdateWeight_PackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWeight_PackingCompleted(this, new UpdateWeight_PackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPState(string InXml) {
            object[] results = this.Invoke("LoadWIPState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPStateAsync(string InXml) {
            this.LoadWIPStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPStateAsync(string InXml, object userState) {
            if ((this.LoadWIPStateOperationCompleted == null)) {
                this.LoadWIPStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPStateOperationCompleted);
            }
            this.InvokeAsync("LoadWIPState", new object[] {
                        InXml}, this.LoadWIPStateOperationCompleted, userState);
        }
        
        private void OnLoadWIPStateOperationCompleted(object arg) {
            if ((this.LoadWIPStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPStateCompleted(this, new LoadWIPStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPState_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPState_Semi(string InXml) {
            object[] results = this.Invoke("LoadWIPState_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPState_SemiAsync(string InXml) {
            this.LoadWIPState_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPState_SemiAsync(string InXml, object userState) {
            if ((this.LoadWIPState_SemiOperationCompleted == null)) {
                this.LoadWIPState_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPState_SemiOperationCompleted);
            }
            this.InvokeAsync("LoadWIPState_Semi", new object[] {
                        InXml}, this.LoadWIPState_SemiOperationCompleted, userState);
        }
        
        private void OnLoadWIPState_SemiOperationCompleted(object arg) {
            if ((this.LoadWIPState_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPState_SemiCompleted(this, new LoadWIPState_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTGBParameter", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTGBParameter() {
            object[] results = this.Invoke("LoadSMTGBParameter", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTGBParameterAsync() {
            this.LoadSMTGBParameterAsync(null);
        }
        
        /// <remarks/>
        public void LoadSMTGBParameterAsync(object userState) {
            if ((this.LoadSMTGBParameterOperationCompleted == null)) {
                this.LoadSMTGBParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTGBParameterOperationCompleted);
            }
            this.InvokeAsync("LoadSMTGBParameter", new object[0], this.LoadSMTGBParameterOperationCompleted, userState);
        }
        
        private void OnLoadSMTGBParameterOperationCompleted(object arg) {
            if ((this.LoadSMTGBParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTGBParameterCompleted(this, new LoadSMTGBParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateGBParameter", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGBParameter(string InXml) {
            object[] results = this.Invoke("UpdateGBParameter", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGBParameterAsync(string InXml) {
            this.UpdateGBParameterAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateGBParameterAsync(string InXml, object userState) {
            if ((this.UpdateGBParameterOperationCompleted == null)) {
                this.UpdateGBParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGBParameterOperationCompleted);
            }
            this.InvokeAsync("UpdateGBParameter", new object[] {
                        InXml}, this.UpdateGBParameterOperationCompleted, userState);
        }
        
        private void OnUpdateGBParameterOperationCompleted(object arg) {
            if ((this.UpdateGBParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGBParameterCompleted(this, new UpdateGBParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddGBTestInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddGBTestInfo(string InXml) {
            object[] results = this.Invoke("AddGBTestInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGBTestInfoAsync(string InXml) {
            this.AddGBTestInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddGBTestInfoAsync(string InXml, object userState) {
            if ((this.AddGBTestInfoOperationCompleted == null)) {
                this.AddGBTestInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGBTestInfoOperationCompleted);
            }
            this.InvokeAsync("AddGBTestInfo", new object[] {
                        InXml}, this.AddGBTestInfoOperationCompleted, userState);
        }
        
        private void OnAddGBTestInfoOperationCompleted(object arg) {
            if ((this.AddGBTestInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGBTestInfoCompleted(this, new AddGBTestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckFileExist", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFileExist(string fileName) {
            object[] results = this.Invoke("CheckFileExist", new object[] {
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFileExistAsync(string fileName) {
            this.CheckFileExistAsync(fileName, null);
        }
        
        /// <remarks/>
        public void CheckFileExistAsync(string fileName, object userState) {
            if ((this.CheckFileExistOperationCompleted == null)) {
                this.CheckFileExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFileExistOperationCompleted);
            }
            this.InvokeAsync("CheckFileExist", new object[] {
                        fileName}, this.CheckFileExistOperationCompleted, userState);
        }
        
        private void OnCheckFileExistOperationCompleted(object arg) {
            if ((this.CheckFileExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFileExistCompleted(this, new CheckFileExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMaterialSerial_Delta_byMFU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMaterialSerial_Delta_byMFU(string InXml) {
            object[] results = this.Invoke("LoadMaterialSerial_Delta_byMFU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMaterialSerial_Delta_byMFUAsync(string InXml) {
            this.LoadMaterialSerial_Delta_byMFUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMaterialSerial_Delta_byMFUAsync(string InXml, object userState) {
            if ((this.LoadMaterialSerial_Delta_byMFUOperationCompleted == null)) {
                this.LoadMaterialSerial_Delta_byMFUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMaterialSerial_Delta_byMFUOperationCompleted);
            }
            this.InvokeAsync("LoadMaterialSerial_Delta_byMFU", new object[] {
                        InXml}, this.LoadMaterialSerial_Delta_byMFUOperationCompleted, userState);
        }
        
        private void OnLoadMaterialSerial_Delta_byMFUOperationCompleted(object arg) {
            if ((this.LoadMaterialSerial_Delta_byMFUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMaterialSerial_Delta_byMFUCompleted(this, new LoadMaterialSerial_Delta_byMFUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFeederMaterialNo_Mapping", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFeederMaterialNo_Mapping(string InXml) {
            object[] results = this.Invoke("LoadFeederMaterialNo_Mapping", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFeederMaterialNo_MappingAsync(string InXml) {
            this.LoadFeederMaterialNo_MappingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFeederMaterialNo_MappingAsync(string InXml, object userState) {
            if ((this.LoadFeederMaterialNo_MappingOperationCompleted == null)) {
                this.LoadFeederMaterialNo_MappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFeederMaterialNo_MappingOperationCompleted);
            }
            this.InvokeAsync("LoadFeederMaterialNo_Mapping", new object[] {
                        InXml}, this.LoadFeederMaterialNo_MappingOperationCompleted, userState);
        }
        
        private void OnLoadFeederMaterialNo_MappingOperationCompleted(object arg) {
            if ((this.LoadFeederMaterialNo_MappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFeederMaterialNo_MappingCompleted(this, new LoadFeederMaterialNo_MappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederArea(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaAsync(string InXml) {
            this.LoadSMTFeederAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederAreaOperationCompleted == null)) {
                this.LoadSMTFeederAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederAreaOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederArea", new object[] {
                        InXml}, this.LoadSMTFeederAreaOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederAreaOperationCompleted(object arg) {
            if ((this.LoadSMTFeederAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederAreaCompleted(this, new LoadSMTFeederAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederUseInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederUseInfo(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederUseInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederUseInfoAsync(string InXml) {
            this.LoadSMTFeederUseInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederUseInfoAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederUseInfoOperationCompleted == null)) {
                this.LoadSMTFeederUseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederUseInfoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederUseInfo", new object[] {
                        InXml}, this.LoadSMTFeederUseInfoOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederUseInfoOperationCompleted(object arg) {
            if ((this.LoadSMTFeederUseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederUseInfoCompleted(this, new LoadSMTFeederUseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFeederAreaJoinFeederTrs", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFeederAreaJoinFeederTrs(string InXml) {
            object[] results = this.Invoke("LoadFeederAreaJoinFeederTrs", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFeederAreaJoinFeederTrsAsync(string InXml) {
            this.LoadFeederAreaJoinFeederTrsAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFeederAreaJoinFeederTrsAsync(string InXml, object userState) {
            if ((this.LoadFeederAreaJoinFeederTrsOperationCompleted == null)) {
                this.LoadFeederAreaJoinFeederTrsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFeederAreaJoinFeederTrsOperationCompleted);
            }
            this.InvokeAsync("LoadFeederAreaJoinFeederTrs", new object[] {
                        InXml}, this.LoadFeederAreaJoinFeederTrsOperationCompleted, userState);
        }
        
        private void OnLoadFeederAreaJoinFeederTrsOperationCompleted(object arg) {
            if ((this.LoadFeederAreaJoinFeederTrsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFeederAreaJoinFeederTrsCompleted(this, new LoadFeederAreaJoinFeederTrsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederMOCombine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederMOCombine(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederMOCombine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederMOCombineAsync(string InXml) {
            this.LoadSMTFeederMOCombineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederMOCombineAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederMOCombineOperationCompleted == null)) {
                this.LoadSMTFeederMOCombineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederMOCombineOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederMOCombine", new object[] {
                        InXml}, this.LoadSMTFeederMOCombineOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederMOCombineOperationCompleted(object arg) {
            if ((this.LoadSMTFeederMOCombineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederMOCombineCompleted(this, new LoadSMTFeederMOCombineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederPickupDeatil", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederPickupDeatil(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederPickupDeatil", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupDeatilAsync(string InXml) {
            this.LoadSMTFeederPickupDeatilAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupDeatilAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederPickupDeatilOperationCompleted == null)) {
                this.LoadSMTFeederPickupDeatilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederPickupDeatilOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederPickupDeatil", new object[] {
                        InXml}, this.LoadSMTFeederPickupDeatilOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederPickupDeatilOperationCompleted(object arg) {
            if ((this.LoadSMTFeederPickupDeatilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederPickupDeatilCompleted(this, new LoadSMTFeederPickupDeatilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederAreaMaterialDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederAreaMaterialDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederAreaMaterialDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaMaterialDetailAsync(string InXml) {
            this.LoadSMTFeederAreaMaterialDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaMaterialDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederAreaMaterialDetailOperationCompleted == null)) {
                this.LoadSMTFeederAreaMaterialDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederAreaMaterialDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederAreaMaterialDetail", new object[] {
                        InXml}, this.LoadSMTFeederAreaMaterialDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederAreaMaterialDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederAreaMaterialDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederAreaMaterialDetailCompleted(this, new LoadSMTFeederAreaMaterialDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederAreaMaterialDetail_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederAreaMaterialDetail_New(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederAreaMaterialDetail_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaMaterialDetail_NewAsync(string InXml) {
            this.LoadSMTFeederAreaMaterialDetail_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaMaterialDetail_NewAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederAreaMaterialDetail_NewOperationCompleted == null)) {
                this.LoadSMTFeederAreaMaterialDetail_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederAreaMaterialDetail_NewOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederAreaMaterialDetail_New", new object[] {
                        InXml}, this.LoadSMTFeederAreaMaterialDetail_NewOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederAreaMaterialDetail_NewOperationCompleted(object arg) {
            if ((this.LoadSMTFeederAreaMaterialDetail_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederAreaMaterialDetail_NewCompleted(this, new LoadSMTFeederAreaMaterialDetail_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederAreaPickingInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederAreaPickingInfo(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederAreaPickingInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaPickingInfoAsync(string InXml) {
            this.LoadSMTFeederAreaPickingInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederAreaPickingInfoAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederAreaPickingInfoOperationCompleted == null)) {
                this.LoadSMTFeederAreaPickingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederAreaPickingInfoOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederAreaPickingInfo", new object[] {
                        InXml}, this.LoadSMTFeederAreaPickingInfoOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederAreaPickingInfoOperationCompleted(object arg) {
            if ((this.LoadSMTFeederAreaPickingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederAreaPickingInfoCompleted(this, new LoadSMTFeederAreaPickingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupCheck", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupCheck(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupCheck", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupCheckAsync(string InXml) {
            this.SMTFeederPickupCheckAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupCheckAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupCheckOperationCompleted == null)) {
                this.SMTFeederPickupCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupCheckOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupCheck", new object[] {
                        InXml}, this.SMTFeederPickupCheckOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupCheckOperationCompleted(object arg) {
            if ((this.SMTFeederPickupCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupCheckCompleted(this, new SMTFeederPickupCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickupDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickupDetail(string InXml) {
            object[] results = this.Invoke("SMTFeederPickupDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickupDetailAsync(string InXml) {
            this.SMTFeederPickupDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickupDetailAsync(string InXml, object userState) {
            if ((this.SMTFeederPickupDetailOperationCompleted == null)) {
                this.SMTFeederPickupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickupDetailOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickupDetail", new object[] {
                        InXml}, this.SMTFeederPickupDetailOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickupDetailOperationCompleted(object arg) {
            if ((this.SMTFeederPickupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickupDetailCompleted(this, new SMTFeederPickupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederUseComplete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederUseComplete(string InXml) {
            object[] results = this.Invoke("SMTFeederUseComplete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederUseCompleteAsync(string InXml) {
            this.SMTFeederUseCompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederUseCompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederUseCompleteOperationCompleted == null)) {
                this.SMTFeederUseCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederUseCompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederUseComplete", new object[] {
                        InXml}, this.SMTFeederUseCompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederUseCompleteOperationCompleted(object arg) {
            if ((this.SMTFeederUseCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederUseCompleteCompleted(this, new SMTFeederUseCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckCombinePickupNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckCombinePickupNo(string InXml) {
            object[] results = this.Invoke("CheckCombinePickupNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCombinePickupNoAsync(string InXml) {
            this.CheckCombinePickupNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckCombinePickupNoAsync(string InXml, object userState) {
            if ((this.CheckCombinePickupNoOperationCompleted == null)) {
                this.CheckCombinePickupNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCombinePickupNoOperationCompleted);
            }
            this.InvokeAsync("CheckCombinePickupNo", new object[] {
                        InXml}, this.CheckCombinePickupNoOperationCompleted, userState);
        }
        
        private void OnCheckCombinePickupNoOperationCompleted(object arg) {
            if ((this.CheckCombinePickupNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCombinePickupNoCompleted(this, new CheckCombinePickupNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederLEDRequest", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederLEDRequest(string InXml) {
            object[] results = this.Invoke("SMTFeederLEDRequest", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederLEDRequestAsync(string InXml) {
            this.SMTFeederLEDRequestAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederLEDRequestAsync(string InXml, object userState) {
            if ((this.SMTFeederLEDRequestOperationCompleted == null)) {
                this.SMTFeederLEDRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederLEDRequestOperationCompleted);
            }
            this.InvokeAsync("SMTFeederLEDRequest", new object[] {
                        InXml}, this.SMTFeederLEDRequestOperationCompleted, userState);
        }
        
        private void OnSMTFeederLEDRequestOperationCompleted(object arg) {
            if ((this.SMTFeederLEDRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederLEDRequestCompleted(this, new SMTFeederLEDRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederClearInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederClearInfo(string InXml) {
            object[] results = this.Invoke("SMTFeederClearInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederClearInfoAsync(string InXml) {
            this.SMTFeederClearInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederClearInfoAsync(string InXml, object userState) {
            if ((this.SMTFeederClearInfoOperationCompleted == null)) {
                this.SMTFeederClearInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederClearInfoOperationCompleted);
            }
            this.InvokeAsync("SMTFeederClearInfo", new object[] {
                        InXml}, this.SMTFeederClearInfoOperationCompleted, userState);
        }
        
        private void OnSMTFeederClearInfoOperationCompleted(object arg) {
            if ((this.SMTFeederClearInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederClearInfoCompleted(this, new SMTFeederClearInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickUpComplete", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickUpComplete(string InXml) {
            object[] results = this.Invoke("SMTFeederPickUpComplete", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickUpCompleteAsync(string InXml) {
            this.SMTFeederPickUpCompleteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickUpCompleteAsync(string InXml, object userState) {
            if ((this.SMTFeederPickUpCompleteOperationCompleted == null)) {
                this.SMTFeederPickUpCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickUpCompleteOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickUpComplete", new object[] {
                        InXml}, this.SMTFeederPickUpCompleteOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickUpCompleteOperationCompleted(object arg) {
            if ((this.SMTFeederPickUpCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickUpCompleteCompleted(this, new SMTFeederPickUpCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SMTFeederPickUpCancel", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMTFeederPickUpCancel(string InXml) {
            object[] results = this.Invoke("SMTFeederPickUpCancel", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMTFeederPickUpCancelAsync(string InXml) {
            this.SMTFeederPickUpCancelAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SMTFeederPickUpCancelAsync(string InXml, object userState) {
            if ((this.SMTFeederPickUpCancelOperationCompleted == null)) {
                this.SMTFeederPickUpCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTFeederPickUpCancelOperationCompleted);
            }
            this.InvokeAsync("SMTFeederPickUpCancel", new object[] {
                        InXml}, this.SMTFeederPickUpCancelOperationCompleted, userState);
        }
        
        private void OnSMTFeederPickUpCancelOperationCompleted(object arg) {
            if ((this.SMTFeederPickUpCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTFeederPickUpCancelCompleted(this, new SMTFeederPickUpCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTFeederPickupDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTFeederPickupDetail(string InXml) {
            object[] results = this.Invoke("LoadSMTFeederPickupDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupDetailAsync(string InXml) {
            this.LoadSMTFeederPickupDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTFeederPickupDetailAsync(string InXml, object userState) {
            if ((this.LoadSMTFeederPickupDetailOperationCompleted == null)) {
                this.LoadSMTFeederPickupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTFeederPickupDetailOperationCompleted);
            }
            this.InvokeAsync("LoadSMTFeederPickupDetail", new object[] {
                        InXml}, this.LoadSMTFeederPickupDetailOperationCompleted, userState);
        }
        
        private void OnLoadSMTFeederPickupDetailOperationCompleted(object arg) {
            if ((this.LoadSMTFeederPickupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTFeederPickupDetailCompleted(this, new LoadSMTFeederPickupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingSMLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingSMLog(string InXml) {
            object[] results = this.Invoke("LoadMOPackingSMLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingSMLogAsync(string InXml) {
            this.LoadMOPackingSMLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingSMLogAsync(string InXml, object userState) {
            if ((this.LoadMOPackingSMLogOperationCompleted == null)) {
                this.LoadMOPackingSMLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingSMLogOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingSMLog", new object[] {
                        InXml}, this.LoadMOPackingSMLogOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingSMLogOperationCompleted(object arg) {
            if ((this.LoadMOPackingSMLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingSMLogCompleted(this, new LoadMOPackingSMLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingBasis(string InXml) {
            object[] results = this.Invoke("LoadMOPackingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingBasisAsync(string InXml) {
            this.LoadMOPackingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingBasisAsync(string InXml, object userState) {
            if ((this.LoadMOPackingBasisOperationCompleted == null)) {
                this.LoadMOPackingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingBasisOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingBasis", new object[] {
                        InXml}, this.LoadMOPackingBasisOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingBasisOperationCompleted(object arg) {
            if ((this.LoadMOPackingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingBasisCompleted(this, new LoadMOPackingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingPallet", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingPallet(string InXml) {
            object[] results = this.Invoke("LoadMOPackingPallet", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingPalletAsync(string InXml) {
            this.LoadMOPackingPalletAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingPalletAsync(string InXml, object userState) {
            if ((this.LoadMOPackingPalletOperationCompleted == null)) {
                this.LoadMOPackingPalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingPalletOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingPallet", new object[] {
                        InXml}, this.LoadMOPackingPalletOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingPalletOperationCompleted(object arg) {
            if ((this.LoadMOPackingPalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingPalletCompleted(this, new LoadMOPackingPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingCarton", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingCarton(string InXml) {
            object[] results = this.Invoke("LoadMOPackingCarton", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingCartonAsync(string InXml) {
            this.LoadMOPackingCartonAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingCartonAsync(string InXml, object userState) {
            if ((this.LoadMOPackingCartonOperationCompleted == null)) {
                this.LoadMOPackingCartonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingCartonOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingCarton", new object[] {
                        InXml}, this.LoadMOPackingCartonOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingCartonOperationCompleted(object arg) {
            if ((this.LoadMOPackingCartonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingCartonCompleted(this, new LoadMOPackingCartonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingBox", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingBox(string InXml) {
            object[] results = this.Invoke("LoadMOPackingBox", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingBoxAsync(string InXml) {
            this.LoadMOPackingBoxAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingBoxAsync(string InXml, object userState) {
            if ((this.LoadMOPackingBoxOperationCompleted == null)) {
                this.LoadMOPackingBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingBoxOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingBox", new object[] {
                        InXml}, this.LoadMOPackingBoxOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingBoxOperationCompleted(object arg) {
            if ((this.LoadMOPackingBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingBoxCompleted(this, new LoadMOPackingBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingBoxDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingBoxDetail(string InXml) {
            object[] results = this.Invoke("LoadMOPackingBoxDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingBoxDetailAsync(string InXml) {
            this.LoadMOPackingBoxDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingBoxDetailAsync(string InXml, object userState) {
            if ((this.LoadMOPackingBoxDetailOperationCompleted == null)) {
                this.LoadMOPackingBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingBoxDetailOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingBoxDetail", new object[] {
                        InXml}, this.LoadMOPackingBoxDetailOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingBoxDetailOperationCompleted(object arg) {
            if ((this.LoadMOPackingBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingBoxDetailCompleted(this, new LoadMOPackingBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPProductNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPProductNo(string InXml) {
            object[] results = this.Invoke("LoadWIPProductNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPProductNoAsync(string InXml) {
            this.LoadWIPProductNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPProductNoAsync(string InXml, object userState) {
            if ((this.LoadWIPProductNoOperationCompleted == null)) {
                this.LoadWIPProductNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPProductNoOperationCompleted);
            }
            this.InvokeAsync("LoadWIPProductNo", new object[] {
                        InXml}, this.LoadWIPProductNoOperationCompleted, userState);
        }
        
        private void OnLoadWIPProductNoOperationCompleted(object arg) {
            if ((this.LoadWIPProductNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPProductNoCompleted(this, new LoadWIPProductNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GenMOPackingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenMOPackingBasis(string InXml) {
            object[] results = this.Invoke("GenMOPackingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenMOPackingBasisAsync(string InXml) {
            this.GenMOPackingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GenMOPackingBasisAsync(string InXml, object userState) {
            if ((this.GenMOPackingBasisOperationCompleted == null)) {
                this.GenMOPackingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenMOPackingBasisOperationCompleted);
            }
            this.InvokeAsync("GenMOPackingBasis", new object[] {
                        InXml}, this.GenMOPackingBasisOperationCompleted, userState);
        }
        
        private void OnGenMOPackingBasisOperationCompleted(object arg) {
            if ((this.GenMOPackingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenMOPackingBasisCompleted(this, new GenMOPackingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPacking", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPacking(string InXml) {
            object[] results = this.Invoke("ExeMOPacking", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPackingAsync(string InXml) {
            this.ExeMOPackingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPackingAsync(string InXml, object userState) {
            if ((this.ExeMOPackingOperationCompleted == null)) {
                this.ExeMOPackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPackingOperationCompleted);
            }
            this.InvokeAsync("ExeMOPacking", new object[] {
                        InXml}, this.ExeMOPackingOperationCompleted, userState);
        }
        
        private void OnExeMOPackingOperationCompleted(object arg) {
            if ((this.ExeMOPackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPackingCompleted(this, new ExeMOPackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPackingLabelDataCreate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPackingLabelDataCreate(string InXml) {
            object[] results = this.Invoke("ExeMOPackingLabelDataCreate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreateAsync(string InXml) {
            this.ExeMOPackingLabelDataCreateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPackingLabelDataCreateAsync(string InXml, object userState) {
            if ((this.ExeMOPackingLabelDataCreateOperationCompleted == null)) {
                this.ExeMOPackingLabelDataCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPackingLabelDataCreateOperationCompleted);
            }
            this.InvokeAsync("ExeMOPackingLabelDataCreate", new object[] {
                        InXml}, this.ExeMOPackingLabelDataCreateOperationCompleted, userState);
        }
        
        private void OnExeMOPackingLabelDataCreateOperationCompleted(object arg) {
            if ((this.ExeMOPackingLabelDataCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPackingLabelDataCreateCompleted(this, new ExeMOPackingLabelDataCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExePackingSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExePackingSplit(string InXml) {
            object[] results = this.Invoke("ExePackingSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExePackingSplitAsync(string InXml) {
            this.ExePackingSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExePackingSplitAsync(string InXml, object userState) {
            if ((this.ExePackingSplitOperationCompleted == null)) {
                this.ExePackingSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExePackingSplitOperationCompleted);
            }
            this.InvokeAsync("ExePackingSplit", new object[] {
                        InXml}, this.ExePackingSplitOperationCompleted, userState);
        }
        
        private void OnExePackingSplitOperationCompleted(object arg) {
            if ((this.ExePackingSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExePackingSplitCompleted(this, new ExePackingSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExePackingSplit_Lot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExePackingSplit_Lot(string InXml) {
            object[] results = this.Invoke("ExePackingSplit_Lot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExePackingSplit_LotAsync(string InXml) {
            this.ExePackingSplit_LotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExePackingSplit_LotAsync(string InXml, object userState) {
            if ((this.ExePackingSplit_LotOperationCompleted == null)) {
                this.ExePackingSplit_LotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExePackingSplit_LotOperationCompleted);
            }
            this.InvokeAsync("ExePackingSplit_Lot", new object[] {
                        InXml}, this.ExePackingSplit_LotOperationCompleted, userState);
        }
        
        private void OnExePackingSplit_LotOperationCompleted(object arg) {
            if ((this.ExePackingSplit_LotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExePackingSplit_LotCompleted(this, new ExePackingSplit_LotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExePackingMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExePackingMerge(string InXml) {
            object[] results = this.Invoke("ExePackingMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExePackingMergeAsync(string InXml) {
            this.ExePackingMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExePackingMergeAsync(string InXml, object userState) {
            if ((this.ExePackingMergeOperationCompleted == null)) {
                this.ExePackingMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExePackingMergeOperationCompleted);
            }
            this.InvokeAsync("ExePackingMerge", new object[] {
                        InXml}, this.ExePackingMergeOperationCompleted, userState);
        }
        
        private void OnExePackingMergeOperationCompleted(object arg) {
            if ((this.ExePackingMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExePackingMergeCompleted(this, new ExePackingMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExePackingMerge_Lot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExePackingMerge_Lot(string InXml) {
            object[] results = this.Invoke("ExePackingMerge_Lot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExePackingMerge_LotAsync(string InXml) {
            this.ExePackingMerge_LotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExePackingMerge_LotAsync(string InXml, object userState) {
            if ((this.ExePackingMerge_LotOperationCompleted == null)) {
                this.ExePackingMerge_LotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExePackingMerge_LotOperationCompleted);
            }
            this.InvokeAsync("ExePackingMerge_Lot", new object[] {
                        InXml}, this.ExePackingMerge_LotOperationCompleted, userState);
        }
        
        private void OnExePackingMerge_LotOperationCompleted(object arg) {
            if ((this.ExePackingMerge_LotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExePackingMerge_LotCompleted(this, new ExePackingMerge_LotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPacking_ToINV", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPacking_ToINV(string InXml) {
            object[] results = this.Invoke("ExeMOPacking_ToINV", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPacking_ToINVAsync(string InXml) {
            this.ExeMOPacking_ToINVAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPacking_ToINVAsync(string InXml, object userState) {
            if ((this.ExeMOPacking_ToINVOperationCompleted == null)) {
                this.ExeMOPacking_ToINVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPacking_ToINVOperationCompleted);
            }
            this.InvokeAsync("ExeMOPacking_ToINV", new object[] {
                        InXml}, this.ExeMOPacking_ToINVOperationCompleted, userState);
        }
        
        private void OnExeMOPacking_ToINVOperationCompleted(object arg) {
            if ((this.ExeMOPacking_ToINVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPacking_ToINVCompleted(this, new ExeMOPacking_ToINVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelMOPacking_UnPack", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelMOPacking_UnPack(string InXml) {
            object[] results = this.Invoke("DelMOPacking_UnPack", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelMOPacking_UnPackAsync(string InXml) {
            this.DelMOPacking_UnPackAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelMOPacking_UnPackAsync(string InXml, object userState) {
            if ((this.DelMOPacking_UnPackOperationCompleted == null)) {
                this.DelMOPacking_UnPackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMOPacking_UnPackOperationCompleted);
            }
            this.InvokeAsync("DelMOPacking_UnPack", new object[] {
                        InXml}, this.DelMOPacking_UnPackOperationCompleted, userState);
        }
        
        private void OnDelMOPacking_UnPackOperationCompleted(object arg) {
            if ((this.DelMOPacking_UnPackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMOPacking_UnPackCompleted(this, new DelMOPacking_UnPackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOUnpacking", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOUnpacking(string InXml) {
            object[] results = this.Invoke("ExeMOUnpacking", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOUnpackingAsync(string InXml) {
            this.ExeMOUnpackingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOUnpackingAsync(string InXml, object userState) {
            if ((this.ExeMOUnpackingOperationCompleted == null)) {
                this.ExeMOUnpackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOUnpackingOperationCompleted);
            }
            this.InvokeAsync("ExeMOUnpacking", new object[] {
                        InXml}, this.ExeMOUnpackingOperationCompleted, userState);
        }
        
        private void OnExeMOUnpackingOperationCompleted(object arg) {
            if ((this.ExeMOUnpackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOUnpackingCompleted(this, new ExeMOUnpackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeMOPacking_Close", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeMOPacking_Close(string InXml) {
            object[] results = this.Invoke("ExeMOPacking_Close", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeMOPacking_CloseAsync(string InXml) {
            this.ExeMOPacking_CloseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeMOPacking_CloseAsync(string InXml, object userState) {
            if ((this.ExeMOPacking_CloseOperationCompleted == null)) {
                this.ExeMOPacking_CloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeMOPacking_CloseOperationCompleted);
            }
            this.InvokeAsync("ExeMOPacking_Close", new object[] {
                        InXml}, this.ExeMOPacking_CloseOperationCompleted, userState);
        }
        
        private void OnExeMOPacking_CloseOperationCompleted(object arg) {
            if ((this.ExeMOPacking_CloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeMOPacking_CloseCompleted(this, new ExeMOPacking_CloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingBasisJoinMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingBasisJoinMOBasis(string InXml) {
            object[] results = this.Invoke("LoadMOPackingBasisJoinMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingBasisJoinMOBasisAsync(string InXml) {
            this.LoadMOPackingBasisJoinMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingBasisJoinMOBasisAsync(string InXml, object userState) {
            if ((this.LoadMOPackingBasisJoinMOBasisOperationCompleted == null)) {
                this.LoadMOPackingBasisJoinMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingBasisJoinMOBasisOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingBasisJoinMOBasis", new object[] {
                        InXml}, this.LoadMOPackingBasisJoinMOBasisOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingBasisJoinMOBasisOperationCompleted(object arg) {
            if ((this.LoadMOPackingBasisJoinMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingBasisJoinMOBasisCompleted(this, new LoadMOPackingBasisJoinMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdateWIPSMTMaterialStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateWIPSMTMaterialStatus(string InXml) {
            object[] results = this.Invoke("UpdateWIPSMTMaterialStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWIPSMTMaterialStatusAsync(string InXml) {
            this.UpdateWIPSMTMaterialStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdateWIPSMTMaterialStatusAsync(string InXml, object userState) {
            if ((this.UpdateWIPSMTMaterialStatusOperationCompleted == null)) {
                this.UpdateWIPSMTMaterialStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWIPSMTMaterialStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateWIPSMTMaterialStatus", new object[] {
                        InXml}, this.UpdateWIPSMTMaterialStatusOperationCompleted, userState);
        }
        
        private void OnUpdateWIPSMTMaterialStatusOperationCompleted(object arg) {
            if ((this.UpdateWIPSMTMaterialStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWIPSMTMaterialStatusCompleted(this, new UpdateWIPSMTMaterialStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPFQCForm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPFQCForm(string InXml) {
            object[] results = this.Invoke("LoadWIPFQCForm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormAsync(string InXml) {
            this.LoadWIPFQCFormAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormAsync(string InXml, object userState) {
            if ((this.LoadWIPFQCFormOperationCompleted == null)) {
                this.LoadWIPFQCFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPFQCFormOperationCompleted);
            }
            this.InvokeAsync("LoadWIPFQCForm", new object[] {
                        InXml}, this.LoadWIPFQCFormOperationCompleted, userState);
        }
        
        private void OnLoadWIPFQCFormOperationCompleted(object arg) {
            if ((this.LoadWIPFQCFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPFQCFormCompleted(this, new LoadWIPFQCFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPFQCFormDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPFQCFormDetail(string InXml) {
            object[] results = this.Invoke("LoadWIPFQCFormDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormDetailAsync(string InXml) {
            this.LoadWIPFQCFormDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormDetailAsync(string InXml, object userState) {
            if ((this.LoadWIPFQCFormDetailOperationCompleted == null)) {
                this.LoadWIPFQCFormDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPFQCFormDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWIPFQCFormDetail", new object[] {
                        InXml}, this.LoadWIPFQCFormDetailOperationCompleted, userState);
        }
        
        private void OnLoadWIPFQCFormDetailOperationCompleted(object arg) {
            if ((this.LoadWIPFQCFormDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPFQCFormDetailCompleted(this, new LoadWIPFQCFormDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPFQCForm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPFQCForm(string InXml, ref System.Data.DataSet dsWIPFQCForm) {
            object[] results = this.Invoke("AddWIPFQCForm", new object[] {
                        InXml,
                        dsWIPFQCForm});
            dsWIPFQCForm = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPFQCFormAsync(string InXml, System.Data.DataSet dsWIPFQCForm) {
            this.AddWIPFQCFormAsync(InXml, dsWIPFQCForm, null);
        }
        
        /// <remarks/>
        public void AddWIPFQCFormAsync(string InXml, System.Data.DataSet dsWIPFQCForm, object userState) {
            if ((this.AddWIPFQCFormOperationCompleted == null)) {
                this.AddWIPFQCFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPFQCFormOperationCompleted);
            }
            this.InvokeAsync("AddWIPFQCForm", new object[] {
                        InXml,
                        dsWIPFQCForm}, this.AddWIPFQCFormOperationCompleted, userState);
        }
        
        private void OnAddWIPFQCFormOperationCompleted(object arg) {
            if ((this.AddWIPFQCFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPFQCFormCompleted(this, new AddWIPFQCFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPFQCForm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPFQCForm(string InXml) {
            object[] results = this.Invoke("DelWIPFQCForm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPFQCFormAsync(string InXml) {
            this.DelWIPFQCFormAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPFQCFormAsync(string InXml, object userState) {
            if ((this.DelWIPFQCFormOperationCompleted == null)) {
                this.DelWIPFQCFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPFQCFormOperationCompleted);
            }
            this.InvokeAsync("DelWIPFQCForm", new object[] {
                        InXml}, this.DelWIPFQCFormOperationCompleted, userState);
        }
        
        private void OnDelWIPFQCFormOperationCompleted(object arg) {
            if ((this.DelWIPFQCFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPFQCFormCompleted(this, new DelWIPFQCFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFQCFormQCItemMap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFQCFormQCItemMap(string InXml) {
            object[] results = this.Invoke("LoadFQCFormQCItemMap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFQCFormQCItemMapAsync(string InXml) {
            this.LoadFQCFormQCItemMapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFQCFormQCItemMapAsync(string InXml, object userState) {
            if ((this.LoadFQCFormQCItemMapOperationCompleted == null)) {
                this.LoadFQCFormQCItemMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFQCFormQCItemMapOperationCompleted);
            }
            this.InvokeAsync("LoadFQCFormQCItemMap", new object[] {
                        InXml}, this.LoadFQCFormQCItemMapOperationCompleted, userState);
        }
        
        private void OnLoadFQCFormQCItemMapOperationCompleted(object arg) {
            if ((this.LoadFQCFormQCItemMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFQCFormQCItemMapCompleted(this, new LoadFQCFormQCItemMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPFQCForm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPFQCForm(string InXml) {
            object[] results = this.Invoke("EditWIPFQCForm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPFQCFormAsync(string InXml) {
            this.EditWIPFQCFormAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPFQCFormAsync(string InXml, object userState) {
            if ((this.EditWIPFQCFormOperationCompleted == null)) {
                this.EditWIPFQCFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPFQCFormOperationCompleted);
            }
            this.InvokeAsync("EditWIPFQCForm", new object[] {
                        InXml}, this.EditWIPFQCFormOperationCompleted, userState);
        }
        
        private void OnEditWIPFQCFormOperationCompleted(object arg) {
            if ((this.EditWIPFQCFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPFQCFormCompleted(this, new EditWIPFQCFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPFQCFormStd", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPFQCFormStd(string InXml) {
            object[] results = this.Invoke("LoadWIPFQCFormStd", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormStdAsync(string InXml) {
            this.LoadWIPFQCFormStdAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormStdAsync(string InXml, object userState) {
            if ((this.LoadWIPFQCFormStdOperationCompleted == null)) {
                this.LoadWIPFQCFormStdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPFQCFormStdOperationCompleted);
            }
            this.InvokeAsync("LoadWIPFQCFormStd", new object[] {
                        InXml}, this.LoadWIPFQCFormStdOperationCompleted, userState);
        }
        
        private void OnLoadWIPFQCFormStdOperationCompleted(object arg) {
            if ((this.LoadWIPFQCFormStdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPFQCFormStdCompleted(this, new LoadWIPFQCFormStdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPFQCFormStdDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPFQCFormStdDetail(string InXml) {
            object[] results = this.Invoke("LoadWIPFQCFormStdDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormStdDetailAsync(string InXml) {
            this.LoadWIPFQCFormStdDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPFQCFormStdDetailAsync(string InXml, object userState) {
            if ((this.LoadWIPFQCFormStdDetailOperationCompleted == null)) {
                this.LoadWIPFQCFormStdDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPFQCFormStdDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWIPFQCFormStdDetail", new object[] {
                        InXml}, this.LoadWIPFQCFormStdDetailOperationCompleted, userState);
        }
        
        private void OnLoadWIPFQCFormStdDetailOperationCompleted(object arg) {
            if ((this.LoadWIPFQCFormStdDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPFQCFormStdDetailCompleted(this, new LoadWIPFQCFormStdDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPFQCFormStd", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPFQCFormStd(string InXml, ref System.Data.DataSet dsWIPFQCFormStd) {
            object[] results = this.Invoke("AddWIPFQCFormStd", new object[] {
                        InXml,
                        dsWIPFQCFormStd});
            dsWIPFQCFormStd = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPFQCFormStdAsync(string InXml, System.Data.DataSet dsWIPFQCFormStd) {
            this.AddWIPFQCFormStdAsync(InXml, dsWIPFQCFormStd, null);
        }
        
        /// <remarks/>
        public void AddWIPFQCFormStdAsync(string InXml, System.Data.DataSet dsWIPFQCFormStd, object userState) {
            if ((this.AddWIPFQCFormStdOperationCompleted == null)) {
                this.AddWIPFQCFormStdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPFQCFormStdOperationCompleted);
            }
            this.InvokeAsync("AddWIPFQCFormStd", new object[] {
                        InXml,
                        dsWIPFQCFormStd}, this.AddWIPFQCFormStdOperationCompleted, userState);
        }
        
        private void OnAddWIPFQCFormStdOperationCompleted(object arg) {
            if ((this.AddWIPFQCFormStdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPFQCFormStdCompleted(this, new AddWIPFQCFormStdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPFQCFormStd", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPFQCFormStd(string InXml) {
            object[] results = this.Invoke("DelWIPFQCFormStd", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPFQCFormStdAsync(string InXml) {
            this.DelWIPFQCFormStdAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPFQCFormStdAsync(string InXml, object userState) {
            if ((this.DelWIPFQCFormStdOperationCompleted == null)) {
                this.DelWIPFQCFormStdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPFQCFormStdOperationCompleted);
            }
            this.InvokeAsync("DelWIPFQCFormStd", new object[] {
                        InXml}, this.DelWIPFQCFormStdOperationCompleted, userState);
        }
        
        private void OnDelWIPFQCFormStdOperationCompleted(object arg) {
            if ((this.DelWIPFQCFormStdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPFQCFormStdCompleted(this, new DelWIPFQCFormStdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFQCFormStdQCItemMap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFQCFormStdQCItemMap(string InXml) {
            object[] results = this.Invoke("LoadFQCFormStdQCItemMap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFQCFormStdQCItemMapAsync(string InXml) {
            this.LoadFQCFormStdQCItemMapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFQCFormStdQCItemMapAsync(string InXml, object userState) {
            if ((this.LoadFQCFormStdQCItemMapOperationCompleted == null)) {
                this.LoadFQCFormStdQCItemMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFQCFormStdQCItemMapOperationCompleted);
            }
            this.InvokeAsync("LoadFQCFormStdQCItemMap", new object[] {
                        InXml}, this.LoadFQCFormStdQCItemMapOperationCompleted, userState);
        }
        
        private void OnLoadFQCFormStdQCItemMapOperationCompleted(object arg) {
            if ((this.LoadFQCFormStdQCItemMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFQCFormStdQCItemMapCompleted(this, new LoadFQCFormStdQCItemMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOPackingPrintLabel", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOPackingPrintLabel(string InXml) {
            object[] results = this.Invoke("LoadMOPackingPrintLabel", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOPackingPrintLabelAsync(string InXml) {
            this.LoadMOPackingPrintLabelAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOPackingPrintLabelAsync(string InXml, object userState) {
            if ((this.LoadMOPackingPrintLabelOperationCompleted == null)) {
                this.LoadMOPackingPrintLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOPackingPrintLabelOperationCompleted);
            }
            this.InvokeAsync("LoadMOPackingPrintLabel", new object[] {
                        InXml}, this.LoadMOPackingPrintLabelOperationCompleted, userState);
        }
        
        private void OnLoadMOPackingPrintLabelOperationCompleted(object arg) {
            if ((this.LoadMOPackingPrintLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOPackingPrintLabelCompleted(this, new LoadMOPackingPrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdMOPackingPrintLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdMOPackingPrintLog(string InXml) {
            object[] results = this.Invoke("UpdMOPackingPrintLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdMOPackingPrintLogAsync(string InXml) {
            this.UpdMOPackingPrintLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdMOPackingPrintLogAsync(string InXml, object userState) {
            if ((this.UpdMOPackingPrintLogOperationCompleted == null)) {
                this.UpdMOPackingPrintLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMOPackingPrintLogOperationCompleted);
            }
            this.InvokeAsync("UpdMOPackingPrintLog", new object[] {
                        InXml}, this.UpdMOPackingPrintLogOperationCompleted, userState);
        }
        
        private void OnUpdMOPackingPrintLogOperationCompleted(object arg) {
            if ((this.UpdMOPackingPrintLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMOPackingPrintLogCompleted(this, new UpdMOPackingPrintLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOBurningLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOBurningLog(string InXml) {
            object[] results = this.Invoke("LoadMOBurningLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOBurningLogAsync(string InXml) {
            this.LoadMOBurningLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOBurningLogAsync(string InXml, object userState) {
            if ((this.LoadMOBurningLogOperationCompleted == null)) {
                this.LoadMOBurningLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOBurningLogOperationCompleted);
            }
            this.InvokeAsync("LoadMOBurningLog", new object[] {
                        InXml}, this.LoadMOBurningLogOperationCompleted, userState);
        }
        
        private void OnLoadMOBurningLogOperationCompleted(object arg) {
            if ((this.LoadMOBurningLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOBurningLogCompleted(this, new LoadMOBurningLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_PackingListBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_PackingListBasis(string InXml) {
            object[] results = this.Invoke("LoadCont_PackingListBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_PackingListBasisAsync(string InXml) {
            this.LoadCont_PackingListBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_PackingListBasisAsync(string InXml, object userState) {
            if ((this.LoadCont_PackingListBasisOperationCompleted == null)) {
                this.LoadCont_PackingListBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_PackingListBasisOperationCompleted);
            }
            this.InvokeAsync("LoadCont_PackingListBasis", new object[] {
                        InXml}, this.LoadCont_PackingListBasisOperationCompleted, userState);
        }
        
        private void OnLoadCont_PackingListBasisOperationCompleted(object arg) {
            if ((this.LoadCont_PackingListBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_PackingListBasisCompleted(this, new LoadCont_PackingListBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadIF_INVWIPInventory_Semi2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadIF_INVWIPInventory_Semi2(string InXml) {
            object[] results = this.Invoke("LoadIF_INVWIPInventory_Semi2", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadIF_INVWIPInventory_Semi2Async(string InXml) {
            this.LoadIF_INVWIPInventory_Semi2Async(InXml, null);
        }
        
        /// <remarks/>
        public void LoadIF_INVWIPInventory_Semi2Async(string InXml, object userState) {
            if ((this.LoadIF_INVWIPInventory_Semi2OperationCompleted == null)) {
                this.LoadIF_INVWIPInventory_Semi2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadIF_INVWIPInventory_Semi2OperationCompleted);
            }
            this.InvokeAsync("LoadIF_INVWIPInventory_Semi2", new object[] {
                        InXml}, this.LoadIF_INVWIPInventory_Semi2OperationCompleted, userState);
        }
        
        private void OnLoadIF_INVWIPInventory_Semi2OperationCompleted(object arg) {
            if ((this.LoadIF_INVWIPInventory_Semi2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadIF_INVWIPInventory_Semi2Completed(this, new LoadIF_INVWIPInventory_Semi2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadIF_INVWIPInventory_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadIF_INVWIPInventory_Semi(string InXml) {
            object[] results = this.Invoke("LoadIF_INVWIPInventory_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadIF_INVWIPInventory_SemiAsync(string InXml) {
            this.LoadIF_INVWIPInventory_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadIF_INVWIPInventory_SemiAsync(string InXml, object userState) {
            if ((this.LoadIF_INVWIPInventory_SemiOperationCompleted == null)) {
                this.LoadIF_INVWIPInventory_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadIF_INVWIPInventory_SemiOperationCompleted);
            }
            this.InvokeAsync("LoadIF_INVWIPInventory_Semi", new object[] {
                        InXml}, this.LoadIF_INVWIPInventory_SemiOperationCompleted, userState);
        }
        
        private void OnLoadIF_INVWIPInventory_SemiOperationCompleted(object arg) {
            if ((this.LoadIF_INVWIPInventory_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadIF_INVWIPInventory_SemiCompleted(this, new LoadIF_INVWIPInventory_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeINVIn_Gen_ERPRedo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeINVIn_Gen_ERPRedo(string InXml) {
            object[] results = this.Invoke("ExeINVIn_Gen_ERPRedo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeINVIn_Gen_ERPRedoAsync(string InXml) {
            this.ExeINVIn_Gen_ERPRedoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeINVIn_Gen_ERPRedoAsync(string InXml, object userState) {
            if ((this.ExeINVIn_Gen_ERPRedoOperationCompleted == null)) {
                this.ExeINVIn_Gen_ERPRedoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeINVIn_Gen_ERPRedoOperationCompleted);
            }
            this.InvokeAsync("ExeINVIn_Gen_ERPRedo", new object[] {
                        InXml}, this.ExeINVIn_Gen_ERPRedoOperationCompleted, userState);
        }
        
        private void OnExeINVIn_Gen_ERPRedoOperationCompleted(object arg) {
            if ((this.ExeINVIn_Gen_ERPRedoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeINVIn_Gen_ERPRedoCompleted(this, new ExeINVIn_Gen_ERPRedoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeINVIn_SubFactory_Result", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeINVIn_SubFactory_Result(string InXml) {
            object[] results = this.Invoke("ExeINVIn_SubFactory_Result", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeINVIn_SubFactory_ResultAsync(string InXml) {
            this.ExeINVIn_SubFactory_ResultAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeINVIn_SubFactory_ResultAsync(string InXml, object userState) {
            if ((this.ExeINVIn_SubFactory_ResultOperationCompleted == null)) {
                this.ExeINVIn_SubFactory_ResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeINVIn_SubFactory_ResultOperationCompleted);
            }
            this.InvokeAsync("ExeINVIn_SubFactory_Result", new object[] {
                        InXml}, this.ExeINVIn_SubFactory_ResultOperationCompleted, userState);
        }
        
        private void OnExeINVIn_SubFactory_ResultOperationCompleted(object arg) {
            if ((this.ExeINVIn_SubFactory_ResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeINVIn_SubFactory_ResultCompleted(this, new ExeINVIn_SubFactory_ResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTMaterialReturn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTMaterialReturn(string InXml) {
            object[] results = this.Invoke("LoadSMTMaterialReturn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTMaterialReturnAsync(string InXml) {
            this.LoadSMTMaterialReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTMaterialReturnAsync(string InXml, object userState) {
            if ((this.LoadSMTMaterialReturnOperationCompleted == null)) {
                this.LoadSMTMaterialReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTMaterialReturnOperationCompleted);
            }
            this.InvokeAsync("LoadSMTMaterialReturn", new object[] {
                        InXml}, this.LoadSMTMaterialReturnOperationCompleted, userState);
        }
        
        private void OnLoadSMTMaterialReturnOperationCompleted(object arg) {
            if ((this.LoadSMTMaterialReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTMaterialReturnCompleted(this, new LoadSMTMaterialReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPickupDetailJoinListJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPickupDetailJoinListJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadPickupDetailJoinListJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPickupDetailJoinListJoinBasisAsync(string InXml) {
            this.LoadPickupDetailJoinListJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPickupDetailJoinListJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadPickupDetailJoinListJoinBasisOperationCompleted == null)) {
                this.LoadPickupDetailJoinListJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPickupDetailJoinListJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadPickupDetailJoinListJoinBasis", new object[] {
                        InXml}, this.LoadPickupDetailJoinListJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadPickupDetailJoinListJoinBasisOperationCompleted(object arg) {
            if ((this.LoadPickupDetailJoinListJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPickupDetailJoinListJoinBasisCompleted(this, new LoadPickupDetailJoinListJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPickupDetailJoinListJoinBasis_new", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPickupDetailJoinListJoinBasis_new(string InXml) {
            object[] results = this.Invoke("LoadPickupDetailJoinListJoinBasis_new", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPickupDetailJoinListJoinBasis_newAsync(string InXml) {
            this.LoadPickupDetailJoinListJoinBasis_newAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPickupDetailJoinListJoinBasis_newAsync(string InXml, object userState) {
            if ((this.LoadPickupDetailJoinListJoinBasis_newOperationCompleted == null)) {
                this.LoadPickupDetailJoinListJoinBasis_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPickupDetailJoinListJoinBasis_newOperationCompleted);
            }
            this.InvokeAsync("LoadPickupDetailJoinListJoinBasis_new", new object[] {
                        InXml}, this.LoadPickupDetailJoinListJoinBasis_newOperationCompleted, userState);
        }
        
        private void OnLoadPickupDetailJoinListJoinBasis_newOperationCompleted(object arg) {
            if ((this.LoadPickupDetailJoinListJoinBasis_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPickupDetailJoinListJoinBasis_newCompleted(this, new LoadPickupDetailJoinListJoinBasis_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturnData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturnData(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturnData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturnDataAsync(string InXml) {
            this.Exe_SMTMaterialReturnDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturnDataAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturnDataOperationCompleted == null)) {
                this.Exe_SMTMaterialReturnDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturnDataOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturnData", new object[] {
                        InXml}, this.Exe_SMTMaterialReturnDataOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturnDataOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturnDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturnDataCompleted(this, new Exe_SMTMaterialReturnDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_Auto1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_Auto1(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_Auto1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_Auto1Async(string InXml) {
            this.Exe_SMTMaterialReturn_Auto1Async(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_Auto1Async(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturn_Auto1OperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_Auto1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_Auto1OperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_Auto1", new object[] {
                        InXml}, this.Exe_SMTMaterialReturn_Auto1OperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_Auto1OperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_Auto1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_Auto1Completed(this, new Exe_SMTMaterialReturn_Auto1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_Auto", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_Auto(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_Auto", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_AutoAsync(string InXml) {
            this.Exe_SMTMaterialReturn_AutoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_AutoAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturn_AutoOperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_AutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_AutoOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_Auto", new object[] {
                        InXml}, this.Exe_SMTMaterialReturn_AutoOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_AutoOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_AutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_AutoCompleted(this, new Exe_SMTMaterialReturn_AutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_Update", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_Update(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_Update", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_UpdateAsync(string InXml) {
            this.Exe_SMTMaterialReturn_UpdateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_UpdateAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturn_UpdateOperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_UpdateOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_Update", new object[] {
                        InXml}, this.Exe_SMTMaterialReturn_UpdateOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_UpdateOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_UpdateCompleted(this, new Exe_SMTMaterialReturn_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturnAsync(string InXml) {
            this.Exe_SMTMaterialReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturnAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturnOperationCompleted == null)) {
                this.Exe_SMTMaterialReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturnOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn", new object[] {
                        InXml}, this.Exe_SMTMaterialReturnOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturnOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturnCompleted(this, new Exe_SMTMaterialReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_New_Auto", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_New_Auto(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_New_Auto", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_New_AutoAsync(string InXml) {
            this.Exe_SMTMaterialReturn_New_AutoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_New_AutoAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturn_New_AutoOperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_New_AutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_New_AutoOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_New_Auto", new object[] {
                        InXml}, this.Exe_SMTMaterialReturn_New_AutoOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_New_AutoOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_New_AutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_New_AutoCompleted(this, new Exe_SMTMaterialReturn_New_AutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SMTMaterialReturn_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SMTMaterialReturn_New(string InXml) {
            object[] results = this.Invoke("Exe_SMTMaterialReturn_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_NewAsync(string InXml) {
            this.Exe_SMTMaterialReturn_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SMTMaterialReturn_NewAsync(string InXml, object userState) {
            if ((this.Exe_SMTMaterialReturn_NewOperationCompleted == null)) {
                this.Exe_SMTMaterialReturn_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SMTMaterialReturn_NewOperationCompleted);
            }
            this.InvokeAsync("Exe_SMTMaterialReturn_New", new object[] {
                        InXml}, this.Exe_SMTMaterialReturn_NewOperationCompleted, userState);
        }
        
        private void OnExe_SMTMaterialReturn_NewOperationCompleted(object arg) {
            if ((this.Exe_SMTMaterialReturn_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SMTMaterialReturn_NewCompleted(this, new Exe_SMTMaterialReturn_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadUnitLog_Assembly", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadUnitLog_Assembly(string InXml) {
            object[] results = this.Invoke("LoadUnitLog_Assembly", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUnitLog_AssemblyAsync(string InXml) {
            this.LoadUnitLog_AssemblyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadUnitLog_AssemblyAsync(string InXml, object userState) {
            if ((this.LoadUnitLog_AssemblyOperationCompleted == null)) {
                this.LoadUnitLog_AssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUnitLog_AssemblyOperationCompleted);
            }
            this.InvokeAsync("LoadUnitLog_Assembly", new object[] {
                        InXml}, this.LoadUnitLog_AssemblyOperationCompleted, userState);
        }
        
        private void OnLoadUnitLog_AssemblyOperationCompleted(object arg) {
            if ((this.LoadUnitLog_AssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUnitLog_AssemblyCompleted(this, new LoadUnitLog_AssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPReworkIE", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPReworkIE(string InXml) {
            object[] results = this.Invoke("LoadWIPReworkIE", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPReworkIEAsync(string InXml) {
            this.LoadWIPReworkIEAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPReworkIEAsync(string InXml, object userState) {
            if ((this.LoadWIPReworkIEOperationCompleted == null)) {
                this.LoadWIPReworkIEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPReworkIEOperationCompleted);
            }
            this.InvokeAsync("LoadWIPReworkIE", new object[] {
                        InXml}, this.LoadWIPReworkIEOperationCompleted, userState);
        }
        
        private void OnLoadWIPReworkIEOperationCompleted(object arg) {
            if ((this.LoadWIPReworkIECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPReworkIECompleted(this, new LoadWIPReworkIECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSerialNoCheck", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSerialNoCheck(string InXml) {
            object[] results = this.Invoke("LoadSerialNoCheck", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSerialNoCheckAsync(string InXml) {
            this.LoadSerialNoCheckAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSerialNoCheckAsync(string InXml, object userState) {
            if ((this.LoadSerialNoCheckOperationCompleted == null)) {
                this.LoadSerialNoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSerialNoCheckOperationCompleted);
            }
            this.InvokeAsync("LoadSerialNoCheck", new object[] {
                        InXml}, this.LoadSerialNoCheckOperationCompleted, userState);
        }
        
        private void OnLoadSerialNoCheckOperationCompleted(object arg) {
            if ((this.LoadSerialNoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSerialNoCheckCompleted(this, new LoadSerialNoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EXESerialNoCheck", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EXESerialNoCheck(string InXml) {
            object[] results = this.Invoke("EXESerialNoCheck", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EXESerialNoCheckAsync(string InXml) {
            this.EXESerialNoCheckAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EXESerialNoCheckAsync(string InXml, object userState) {
            if ((this.EXESerialNoCheckOperationCompleted == null)) {
                this.EXESerialNoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXESerialNoCheckOperationCompleted);
            }
            this.InvokeAsync("EXESerialNoCheck", new object[] {
                        InXml}, this.EXESerialNoCheckOperationCompleted, userState);
        }
        
        private void OnEXESerialNoCheckOperationCompleted(object arg) {
            if ((this.EXESerialNoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXESerialNoCheckCompleted(this, new EXESerialNoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EXEToMoChange", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EXEToMoChange(string InXml) {
            object[] results = this.Invoke("EXEToMoChange", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EXEToMoChangeAsync(string InXml) {
            this.EXEToMoChangeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EXEToMoChangeAsync(string InXml, object userState) {
            if ((this.EXEToMoChangeOperationCompleted == null)) {
                this.EXEToMoChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXEToMoChangeOperationCompleted);
            }
            this.InvokeAsync("EXEToMoChange", new object[] {
                        InXml}, this.EXEToMoChangeOperationCompleted, userState);
        }
        
        private void OnEXEToMoChangeOperationCompleted(object arg) {
            if ((this.EXEToMoChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXEToMoChangeCompleted(this, new EXEToMoChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetReworkQty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetReworkQty(string InXml) {
            object[] results = this.Invoke("SetReworkQty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetReworkQtyAsync(string InXml) {
            this.SetReworkQtyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetReworkQtyAsync(string InXml, object userState) {
            if ((this.SetReworkQtyOperationCompleted == null)) {
                this.SetReworkQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetReworkQtyOperationCompleted);
            }
            this.InvokeAsync("SetReworkQty", new object[] {
                        InXml}, this.SetReworkQtyOperationCompleted, userState);
        }
        
        private void OnSetReworkQtyOperationCompleted(object arg) {
            if ((this.SetReworkQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetReworkQtyCompleted(this, new SetReworkQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkSheetBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkSheetBasis(string InXml) {
            object[] results = this.Invoke("LoadReworkSheetBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkSheetBasisAsync(string InXml) {
            this.LoadReworkSheetBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkSheetBasisAsync(string InXml, object userState) {
            if ((this.LoadReworkSheetBasisOperationCompleted == null)) {
                this.LoadReworkSheetBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkSheetBasisOperationCompleted);
            }
            this.InvokeAsync("LoadReworkSheetBasis", new object[] {
                        InXml}, this.LoadReworkSheetBasisOperationCompleted, userState);
        }
        
        private void OnLoadReworkSheetBasisOperationCompleted(object arg) {
            if ((this.LoadReworkSheetBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkSheetBasisCompleted(this, new LoadReworkSheetBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditReworkSheetBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditReworkSheetBasis(string InXml) {
            object[] results = this.Invoke("EditReworkSheetBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditReworkSheetBasisAsync(string InXml) {
            this.EditReworkSheetBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditReworkSheetBasisAsync(string InXml, object userState) {
            if ((this.EditReworkSheetBasisOperationCompleted == null)) {
                this.EditReworkSheetBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditReworkSheetBasisOperationCompleted);
            }
            this.InvokeAsync("EditReworkSheetBasis", new object[] {
                        InXml}, this.EditReworkSheetBasisOperationCompleted, userState);
        }
        
        private void OnEditReworkSheetBasisOperationCompleted(object arg) {
            if ((this.EditReworkSheetBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditReworkSheetBasisCompleted(this, new EditReworkSheetBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddReworkSheetBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddReworkSheetBasis(string InXml) {
            object[] results = this.Invoke("AddReworkSheetBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReworkSheetBasisAsync(string InXml) {
            this.AddReworkSheetBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddReworkSheetBasisAsync(string InXml, object userState) {
            if ((this.AddReworkSheetBasisOperationCompleted == null)) {
                this.AddReworkSheetBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReworkSheetBasisOperationCompleted);
            }
            this.InvokeAsync("AddReworkSheetBasis", new object[] {
                        InXml}, this.AddReworkSheetBasisOperationCompleted, userState);
        }
        
        private void OnAddReworkSheetBasisOperationCompleted(object arg) {
            if ((this.AddReworkSheetBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReworkSheetBasisCompleted(this, new AddReworkSheetBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkMeetingPlace", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkMeetingPlace(string InXml) {
            object[] results = this.Invoke("LoadReworkMeetingPlace", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkMeetingPlaceAsync(string InXml) {
            this.LoadReworkMeetingPlaceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkMeetingPlaceAsync(string InXml, object userState) {
            if ((this.LoadReworkMeetingPlaceOperationCompleted == null)) {
                this.LoadReworkMeetingPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkMeetingPlaceOperationCompleted);
            }
            this.InvokeAsync("LoadReworkMeetingPlace", new object[] {
                        InXml}, this.LoadReworkMeetingPlaceOperationCompleted, userState);
        }
        
        private void OnLoadReworkMeetingPlaceOperationCompleted(object arg) {
            if ((this.LoadReworkMeetingPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkMeetingPlaceCompleted(this, new LoadReworkMeetingPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReworkSheetBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReworkSheetBasis(string InXml) {
            object[] results = this.Invoke("DelReworkSheetBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReworkSheetBasisAsync(string InXml) {
            this.DelReworkSheetBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReworkSheetBasisAsync(string InXml, object userState) {
            if ((this.DelReworkSheetBasisOperationCompleted == null)) {
                this.DelReworkSheetBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReworkSheetBasisOperationCompleted);
            }
            this.InvokeAsync("DelReworkSheetBasis", new object[] {
                        InXml}, this.DelReworkSheetBasisOperationCompleted, userState);
        }
        
        private void OnDelReworkSheetBasisOperationCompleted(object arg) {
            if ((this.DelReworkSheetBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReworkSheetBasisCompleted(this, new DelReworkSheetBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkSheetNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkSheetNo(string InXml) {
            object[] results = this.Invoke("LoadReworkSheetNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkSheetNoAsync(string InXml) {
            this.LoadReworkSheetNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkSheetNoAsync(string InXml, object userState) {
            if ((this.LoadReworkSheetNoOperationCompleted == null)) {
                this.LoadReworkSheetNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkSheetNoOperationCompleted);
            }
            this.InvokeAsync("LoadReworkSheetNo", new object[] {
                        InXml}, this.LoadReworkSheetNoOperationCompleted, userState);
        }
        
        private void OnLoadReworkSheetNoOperationCompleted(object arg) {
            if ((this.LoadReworkSheetNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkSheetNoCompleted(this, new LoadReworkSheetNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InitReworkSheetNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitReworkSheetNo(string InXml) {
            object[] results = this.Invoke("InitReworkSheetNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitReworkSheetNoAsync(string InXml) {
            this.InitReworkSheetNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void InitReworkSheetNoAsync(string InXml, object userState) {
            if ((this.InitReworkSheetNoOperationCompleted == null)) {
                this.InitReworkSheetNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitReworkSheetNoOperationCompleted);
            }
            this.InvokeAsync("InitReworkSheetNo", new object[] {
                        InXml}, this.InitReworkSheetNoOperationCompleted, userState);
        }
        
        private void OnInitReworkSheetNoOperationCompleted(object arg) {
            if ((this.InitReworkSheetNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitReworkSheetNoCompleted(this, new InitReworkSheetNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkSheetConferee", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkSheetConferee(string InXml) {
            object[] results = this.Invoke("LoadReworkSheetConferee", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkSheetConfereeAsync(string InXml) {
            this.LoadReworkSheetConfereeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkSheetConfereeAsync(string InXml, object userState) {
            if ((this.LoadReworkSheetConfereeOperationCompleted == null)) {
                this.LoadReworkSheetConfereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkSheetConfereeOperationCompleted);
            }
            this.InvokeAsync("LoadReworkSheetConferee", new object[] {
                        InXml}, this.LoadReworkSheetConfereeOperationCompleted, userState);
        }
        
        private void OnLoadReworkSheetConfereeOperationCompleted(object arg) {
            if ((this.LoadReworkSheetConfereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkSheetConfereeCompleted(this, new LoadReworkSheetConfereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdReworkSheetConferee", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdReworkSheetConferee(string InXml) {
            object[] results = this.Invoke("UpdReworkSheetConferee", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdReworkSheetConfereeAsync(string InXml) {
            this.UpdReworkSheetConfereeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdReworkSheetConfereeAsync(string InXml, object userState) {
            if ((this.UpdReworkSheetConfereeOperationCompleted == null)) {
                this.UpdReworkSheetConfereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdReworkSheetConfereeOperationCompleted);
            }
            this.InvokeAsync("UpdReworkSheetConferee", new object[] {
                        InXml}, this.UpdReworkSheetConfereeOperationCompleted, userState);
        }
        
        private void OnUpdReworkSheetConfereeOperationCompleted(object arg) {
            if ((this.UpdReworkSheetConfereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdReworkSheetConfereeCompleted(this, new UpdReworkSheetConfereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReworkSheetConferee", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReworkSheetConferee(string InXml) {
            object[] results = this.Invoke("DelReworkSheetConferee", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReworkSheetConfereeAsync(string InXml) {
            this.DelReworkSheetConfereeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReworkSheetConfereeAsync(string InXml, object userState) {
            if ((this.DelReworkSheetConfereeOperationCompleted == null)) {
                this.DelReworkSheetConfereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReworkSheetConfereeOperationCompleted);
            }
            this.InvokeAsync("DelReworkSheetConferee", new object[] {
                        InXml}, this.DelReworkSheetConfereeOperationCompleted, userState);
        }
        
        private void OnDelReworkSheetConfereeOperationCompleted(object arg) {
            if ((this.DelReworkSheetConfereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReworkSheetConfereeCompleted(this, new DelReworkSheetConfereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkDuty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkDuty(string InXml) {
            object[] results = this.Invoke("LoadReworkDuty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkDutyAsync(string InXml) {
            this.LoadReworkDutyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkDutyAsync(string InXml, object userState) {
            if ((this.LoadReworkDutyOperationCompleted == null)) {
                this.LoadReworkDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkDutyOperationCompleted);
            }
            this.InvokeAsync("LoadReworkDuty", new object[] {
                        InXml}, this.LoadReworkDutyOperationCompleted, userState);
        }
        
        private void OnLoadReworkDutyOperationCompleted(object arg) {
            if ((this.LoadReworkDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkDutyCompleted(this, new LoadReworkDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdReworkDuty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdReworkDuty(string InXml) {
            object[] results = this.Invoke("UpdReworkDuty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdReworkDutyAsync(string InXml) {
            this.UpdReworkDutyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdReworkDutyAsync(string InXml, object userState) {
            if ((this.UpdReworkDutyOperationCompleted == null)) {
                this.UpdReworkDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdReworkDutyOperationCompleted);
            }
            this.InvokeAsync("UpdReworkDuty", new object[] {
                        InXml}, this.UpdReworkDutyOperationCompleted, userState);
        }
        
        private void OnUpdReworkDutyOperationCompleted(object arg) {
            if ((this.UpdReworkDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdReworkDutyCompleted(this, new UpdReworkDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SendEmail_ReworkMeetingReord", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmail_ReworkMeetingReord(string InXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] AttachFileContent) {
            object[] results = this.Invoke("SendEmail_ReworkMeetingReord", new object[] {
                        InXml,
                        AttachFileContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmail_ReworkMeetingReordAsync(string InXml, byte[] AttachFileContent) {
            this.SendEmail_ReworkMeetingReordAsync(InXml, AttachFileContent, null);
        }
        
        /// <remarks/>
        public void SendEmail_ReworkMeetingReordAsync(string InXml, byte[] AttachFileContent, object userState) {
            if ((this.SendEmail_ReworkMeetingReordOperationCompleted == null)) {
                this.SendEmail_ReworkMeetingReordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmail_ReworkMeetingReordOperationCompleted);
            }
            this.InvokeAsync("SendEmail_ReworkMeetingReord", new object[] {
                        InXml,
                        AttachFileContent}, this.SendEmail_ReworkMeetingReordOperationCompleted, userState);
        }
        
        private void OnSendEmail_ReworkMeetingReordOperationCompleted(object arg) {
            if ((this.SendEmail_ReworkMeetingReordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmail_ReworkMeetingReordCompleted(this, new SendEmail_ReworkMeetingReordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkQA", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkQA(string InXml) {
            object[] results = this.Invoke("LoadReworkQA", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkQAAsync(string InXml) {
            this.LoadReworkQAAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkQAAsync(string InXml, object userState) {
            if ((this.LoadReworkQAOperationCompleted == null)) {
                this.LoadReworkQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkQAOperationCompleted);
            }
            this.InvokeAsync("LoadReworkQA", new object[] {
                        InXml}, this.LoadReworkQAOperationCompleted, userState);
        }
        
        private void OnLoadReworkQAOperationCompleted(object arg) {
            if ((this.LoadReworkQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkQACompleted(this, new LoadReworkQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkIE", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkIE(string InXml) {
            object[] results = this.Invoke("LoadReworkIE", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkIEAsync(string InXml) {
            this.LoadReworkIEAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkIEAsync(string InXml, object userState) {
            if ((this.LoadReworkIEOperationCompleted == null)) {
                this.LoadReworkIEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkIEOperationCompleted);
            }
            this.InvokeAsync("LoadReworkIE", new object[] {
                        InXml}, this.LoadReworkIEOperationCompleted, userState);
        }
        
        private void OnLoadReworkIEOperationCompleted(object arg) {
            if ((this.LoadReworkIECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkIECompleted(this, new LoadReworkIECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/MaintainReworkQA", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MaintainReworkQA(string InXml) {
            object[] results = this.Invoke("MaintainReworkQA", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MaintainReworkQAAsync(string InXml) {
            this.MaintainReworkQAAsync(InXml, null);
        }
        
        /// <remarks/>
        public void MaintainReworkQAAsync(string InXml, object userState) {
            if ((this.MaintainReworkQAOperationCompleted == null)) {
                this.MaintainReworkQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaintainReworkQAOperationCompleted);
            }
            this.InvokeAsync("MaintainReworkQA", new object[] {
                        InXml}, this.MaintainReworkQAOperationCompleted, userState);
        }
        
        private void OnMaintainReworkQAOperationCompleted(object arg) {
            if ((this.MaintainReworkQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaintainReworkQACompleted(this, new MaintainReworkQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkPC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkPC(string InXml) {
            object[] results = this.Invoke("LoadReworkPC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkPCAsync(string InXml) {
            this.LoadReworkPCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkPCAsync(string InXml, object userState) {
            if ((this.LoadReworkPCOperationCompleted == null)) {
                this.LoadReworkPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkPCOperationCompleted);
            }
            this.InvokeAsync("LoadReworkPC", new object[] {
                        InXml}, this.LoadReworkPCOperationCompleted, userState);
        }
        
        private void OnLoadReworkPCOperationCompleted(object arg) {
            if ((this.LoadReworkPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkPCCompleted(this, new LoadReworkPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/MaintainReworkPC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MaintainReworkPC(string InXml) {
            object[] results = this.Invoke("MaintainReworkPC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MaintainReworkPCAsync(string InXml) {
            this.MaintainReworkPCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void MaintainReworkPCAsync(string InXml, object userState) {
            if ((this.MaintainReworkPCOperationCompleted == null)) {
                this.MaintainReworkPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaintainReworkPCOperationCompleted);
            }
            this.InvokeAsync("MaintainReworkPC", new object[] {
                        InXml}, this.MaintainReworkPCOperationCompleted, userState);
        }
        
        private void OnMaintainReworkPCOperationCompleted(object arg) {
            if ((this.MaintainReworkPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaintainReworkPCCompleted(this, new MaintainReworkPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetLotCurQtyOfProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotCurQtyOfProcess(string InXml) {
            object[] results = this.Invoke("GetLotCurQtyOfProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotCurQtyOfProcessAsync(string InXml) {
            this.GetLotCurQtyOfProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetLotCurQtyOfProcessAsync(string InXml, object userState) {
            if ((this.GetLotCurQtyOfProcessOperationCompleted == null)) {
                this.GetLotCurQtyOfProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotCurQtyOfProcessOperationCompleted);
            }
            this.InvokeAsync("GetLotCurQtyOfProcess", new object[] {
                        InXml}, this.GetLotCurQtyOfProcessOperationCompleted, userState);
        }
        
        private void OnGetLotCurQtyOfProcessOperationCompleted(object arg) {
            if ((this.GetLotCurQtyOfProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotCurQtyOfProcessCompleted(this, new GetLotCurQtyOfProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddReworkIE", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddReworkIE(string InXml) {
            object[] results = this.Invoke("AddReworkIE", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReworkIEAsync(string InXml) {
            this.AddReworkIEAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddReworkIEAsync(string InXml, object userState) {
            if ((this.AddReworkIEOperationCompleted == null)) {
                this.AddReworkIEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReworkIEOperationCompleted);
            }
            this.InvokeAsync("AddReworkIE", new object[] {
                        InXml}, this.AddReworkIEOperationCompleted, userState);
        }
        
        private void OnAddReworkIEOperationCompleted(object arg) {
            if ((this.AddReworkIECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReworkIECompleted(this, new AddReworkIECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditReworkIE", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditReworkIE(string InXml) {
            object[] results = this.Invoke("EditReworkIE", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditReworkIEAsync(string InXml) {
            this.EditReworkIEAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditReworkIEAsync(string InXml, object userState) {
            if ((this.EditReworkIEOperationCompleted == null)) {
                this.EditReworkIEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditReworkIEOperationCompleted);
            }
            this.InvokeAsync("EditReworkIE", new object[] {
                        InXml}, this.EditReworkIEOperationCompleted, userState);
        }
        
        private void OnEditReworkIEOperationCompleted(object arg) {
            if ((this.EditReworkIECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditReworkIECompleted(this, new EditReworkIECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReworkIE", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReworkIE(string InXml) {
            object[] results = this.Invoke("DelReworkIE", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReworkIEAsync(string InXml) {
            this.DelReworkIEAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReworkIEAsync(string InXml, object userState) {
            if ((this.DelReworkIEOperationCompleted == null)) {
                this.DelReworkIEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReworkIEOperationCompleted);
            }
            this.InvokeAsync("DelReworkIE", new object[] {
                        InXml}, this.DelReworkIEOperationCompleted, userState);
        }
        
        private void OnDelReworkIEOperationCompleted(object arg) {
            if ((this.DelReworkIECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReworkIECompleted(this, new DelReworkIECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkAttach", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkAttach(string InXml) {
            object[] results = this.Invoke("LoadReworkAttach", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkAttachAsync(string InXml) {
            this.LoadReworkAttachAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkAttachAsync(string InXml, object userState) {
            if ((this.LoadReworkAttachOperationCompleted == null)) {
                this.LoadReworkAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkAttachOperationCompleted);
            }
            this.InvokeAsync("LoadReworkAttach", new object[] {
                        InXml}, this.LoadReworkAttachOperationCompleted, userState);
        }
        
        private void OnLoadReworkAttachOperationCompleted(object arg) {
            if ((this.LoadReworkAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkAttachCompleted(this, new LoadReworkAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddReworkAttach", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddReworkAttach(string InXml) {
            object[] results = this.Invoke("AddReworkAttach", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReworkAttachAsync(string InXml) {
            this.AddReworkAttachAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddReworkAttachAsync(string InXml, object userState) {
            if ((this.AddReworkAttachOperationCompleted == null)) {
                this.AddReworkAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReworkAttachOperationCompleted);
            }
            this.InvokeAsync("AddReworkAttach", new object[] {
                        InXml}, this.AddReworkAttachOperationCompleted, userState);
        }
        
        private void OnAddReworkAttachOperationCompleted(object arg) {
            if ((this.AddReworkAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReworkAttachCompleted(this, new AddReworkAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReworkAttach", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReworkAttach(string InXml) {
            object[] results = this.Invoke("DelReworkAttach", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReworkAttachAsync(string InXml) {
            this.DelReworkAttachAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReworkAttachAsync(string InXml, object userState) {
            if ((this.DelReworkAttachOperationCompleted == null)) {
                this.DelReworkAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReworkAttachOperationCompleted);
            }
            this.InvokeAsync("DelReworkAttach", new object[] {
                        InXml}, this.DelReworkAttachOperationCompleted, userState);
        }
        
        private void OnDelReworkAttachOperationCompleted(object arg) {
            if ((this.DelReworkAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReworkAttachCompleted(this, new DelReworkAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReworkMFG", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReworkMFG(string InXml) {
            object[] results = this.Invoke("LoadReworkMFG", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReworkMFGAsync(string InXml) {
            this.LoadReworkMFGAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReworkMFGAsync(string InXml, object userState) {
            if ((this.LoadReworkMFGOperationCompleted == null)) {
                this.LoadReworkMFGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReworkMFGOperationCompleted);
            }
            this.InvokeAsync("LoadReworkMFG", new object[] {
                        InXml}, this.LoadReworkMFGOperationCompleted, userState);
        }
        
        private void OnLoadReworkMFGOperationCompleted(object arg) {
            if ((this.LoadReworkMFGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReworkMFGCompleted(this, new LoadReworkMFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/MaintainReworkMFG", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MaintainReworkMFG(string InXml) {
            object[] results = this.Invoke("MaintainReworkMFG", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MaintainReworkMFGAsync(string InXml) {
            this.MaintainReworkMFGAsync(InXml, null);
        }
        
        /// <remarks/>
        public void MaintainReworkMFGAsync(string InXml, object userState) {
            if ((this.MaintainReworkMFGOperationCompleted == null)) {
                this.MaintainReworkMFGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaintainReworkMFGOperationCompleted);
            }
            this.InvokeAsync("MaintainReworkMFG", new object[] {
                        InXml}, this.MaintainReworkMFGOperationCompleted, userState);
        }
        
        private void OnMaintainReworkMFGOperationCompleted(object arg) {
            if ((this.MaintainReworkMFGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaintainReworkMFGCompleted(this, new MaintainReworkMFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFGLotData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFGLotData(string InXml) {
            object[] results = this.Invoke("LoadMFGLotData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFGLotDataAsync(string InXml) {
            this.LoadMFGLotDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFGLotDataAsync(string InXml, object userState) {
            if ((this.LoadMFGLotDataOperationCompleted == null)) {
                this.LoadMFGLotDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFGLotDataOperationCompleted);
            }
            this.InvokeAsync("LoadMFGLotData", new object[] {
                        InXml}, this.LoadMFGLotDataOperationCompleted, userState);
        }
        
        private void OnLoadMFGLotDataOperationCompleted(object arg) {
            if ((this.LoadMFGLotDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFGLotDataCompleted(this, new LoadMFGLotDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetAllNodeNoByProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllNodeNoByProcess(string InXml) {
            object[] results = this.Invoke("GetAllNodeNoByProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNodeNoByProcessAsync(string InXml) {
            this.GetAllNodeNoByProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetAllNodeNoByProcessAsync(string InXml, object userState) {
            if ((this.GetAllNodeNoByProcessOperationCompleted == null)) {
                this.GetAllNodeNoByProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNodeNoByProcessOperationCompleted);
            }
            this.InvokeAsync("GetAllNodeNoByProcess", new object[] {
                        InXml}, this.GetAllNodeNoByProcessOperationCompleted, userState);
        }
        
        private void OnGetAllNodeNoByProcessOperationCompleted(object arg) {
            if ((this.GetAllNodeNoByProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNodeNoByProcessCompleted(this, new GetAllNodeNoByProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckReworkSNExcel", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckReworkSNExcel(string InXml, ref System.Data.DataSet dsExcel) {
            object[] results = this.Invoke("CheckReworkSNExcel", new object[] {
                        InXml,
                        dsExcel});
            dsExcel = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckReworkSNExcelAsync(string InXml, System.Data.DataSet dsExcel) {
            this.CheckReworkSNExcelAsync(InXml, dsExcel, null);
        }
        
        /// <remarks/>
        public void CheckReworkSNExcelAsync(string InXml, System.Data.DataSet dsExcel, object userState) {
            if ((this.CheckReworkSNExcelOperationCompleted == null)) {
                this.CheckReworkSNExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckReworkSNExcelOperationCompleted);
            }
            this.InvokeAsync("CheckReworkSNExcel", new object[] {
                        InXml,
                        dsExcel}, this.CheckReworkSNExcelOperationCompleted, userState);
        }
        
        private void OnCheckReworkSNExcelOperationCompleted(object arg) {
            if ((this.CheckReworkSNExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckReworkSNExcelCompleted(this, new CheckReworkSNExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelMaterialFeeder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelMaterialFeeder(string InXml) {
            object[] results = this.Invoke("DelMaterialFeeder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelMaterialFeederAsync(string InXml) {
            this.DelMaterialFeederAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelMaterialFeederAsync(string InXml, object userState) {
            if ((this.DelMaterialFeederOperationCompleted == null)) {
                this.DelMaterialFeederOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMaterialFeederOperationCompleted);
            }
            this.InvokeAsync("DelMaterialFeeder", new object[] {
                        InXml}, this.DelMaterialFeederOperationCompleted, userState);
        }
        
        private void OnDelMaterialFeederOperationCompleted(object arg) {
            if ((this.DelMaterialFeederCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMaterialFeederCompleted(this, new DelMaterialFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFeederStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFeederStatus(string InXml) {
            object[] results = this.Invoke("LoadFeederStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFeederStatusAsync(string InXml) {
            this.LoadFeederStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFeederStatusAsync(string InXml, object userState) {
            if ((this.LoadFeederStatusOperationCompleted == null)) {
                this.LoadFeederStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFeederStatusOperationCompleted);
            }
            this.InvokeAsync("LoadFeederStatus", new object[] {
                        InXml}, this.LoadFeederStatusOperationCompleted, userState);
        }
        
        private void OnLoadFeederStatusOperationCompleted(object arg) {
            if ((this.LoadFeederStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFeederStatusCompleted(this, new LoadFeederStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddFeederStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFeederStatus(string InXml) {
            object[] results = this.Invoke("AddFeederStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFeederStatusAsync(string InXml) {
            this.AddFeederStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddFeederStatusAsync(string InXml, object userState) {
            if ((this.AddFeederStatusOperationCompleted == null)) {
                this.AddFeederStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFeederStatusOperationCompleted);
            }
            this.InvokeAsync("AddFeederStatus", new object[] {
                        InXml}, this.AddFeederStatusOperationCompleted, userState);
        }
        
        private void OnAddFeederStatusOperationCompleted(object arg) {
            if ((this.AddFeederStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFeederStatusCompleted(this, new AddFeederStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetFeederStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetFeederStatus(string InXml) {
            object[] results = this.Invoke("SetFeederStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetFeederStatusAsync(string InXml) {
            this.SetFeederStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetFeederStatusAsync(string InXml, object userState) {
            if ((this.SetFeederStatusOperationCompleted == null)) {
                this.SetFeederStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFeederStatusOperationCompleted);
            }
            this.InvokeAsync("SetFeederStatus", new object[] {
                        InXml}, this.SetFeederStatusOperationCompleted, userState);
        }
        
        private void OnSetFeederStatusOperationCompleted(object arg) {
            if ((this.SetFeederStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFeederStatusCompleted(this, new SetFeederStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdFeederMFU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdFeederMFU(string InXml) {
            object[] results = this.Invoke("UpdFeederMFU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdFeederMFUAsync(string InXml) {
            this.UpdFeederMFUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdFeederMFUAsync(string InXml, object userState) {
            if ((this.UpdFeederMFUOperationCompleted == null)) {
                this.UpdFeederMFUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdFeederMFUOperationCompleted);
            }
            this.InvokeAsync("UpdFeederMFU", new object[] {
                        InXml}, this.UpdFeederMFUOperationCompleted, userState);
        }
        
        private void OnUpdFeederMFUOperationCompleted(object arg) {
            if ((this.UpdFeederMFUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdFeederMFUCompleted(this, new UpdFeederMFUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddFeederMFU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFeederMFU(string InXml) {
            object[] results = this.Invoke("AddFeederMFU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFeederMFUAsync(string InXml) {
            this.AddFeederMFUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddFeederMFUAsync(string InXml, object userState) {
            if ((this.AddFeederMFUOperationCompleted == null)) {
                this.AddFeederMFUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFeederMFUOperationCompleted);
            }
            this.InvokeAsync("AddFeederMFU", new object[] {
                        InXml}, this.AddFeederMFUOperationCompleted, userState);
        }
        
        private void OnAddFeederMFUOperationCompleted(object arg) {
            if ((this.AddFeederMFUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFeederMFUCompleted(this, new AddFeederMFUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFeederMFU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFeederMFU(string InXml) {
            object[] results = this.Invoke("DelFeederMFU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFeederMFUAsync(string InXml) {
            this.DelFeederMFUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFeederMFUAsync(string InXml, object userState) {
            if ((this.DelFeederMFUOperationCompleted == null)) {
                this.DelFeederMFUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFeederMFUOperationCompleted);
            }
            this.InvokeAsync("DelFeederMFU", new object[] {
                        InXml}, this.DelFeederMFUOperationCompleted, userState);
        }
        
        private void OnDelFeederMFUOperationCompleted(object arg) {
            if ((this.DelFeederMFUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFeederMFUCompleted(this, new DelFeederMFUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetMFUStauts_Feeder_QCFlag", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMFUStauts_Feeder_QCFlag(string InXml) {
            object[] results = this.Invoke("SetMFUStauts_Feeder_QCFlag", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMFUStauts_Feeder_QCFlagAsync(string InXml) {
            this.SetMFUStauts_Feeder_QCFlagAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetMFUStauts_Feeder_QCFlagAsync(string InXml, object userState) {
            if ((this.SetMFUStauts_Feeder_QCFlagOperationCompleted == null)) {
                this.SetMFUStauts_Feeder_QCFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMFUStauts_Feeder_QCFlagOperationCompleted);
            }
            this.InvokeAsync("SetMFUStauts_Feeder_QCFlag", new object[] {
                        InXml}, this.SetMFUStauts_Feeder_QCFlagOperationCompleted, userState);
        }
        
        private void OnSetMFUStauts_Feeder_QCFlagOperationCompleted(object arg) {
            if ((this.SetMFUStauts_Feeder_QCFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMFUStauts_Feeder_QCFlagCompleted(this, new SetMFUStauts_Feeder_QCFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFUStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFUStatus(string InXml) {
            object[] results = this.Invoke("LoadMFUStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFUStatusAsync(string InXml) {
            this.LoadMFUStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFUStatusAsync(string InXml, object userState) {
            if ((this.LoadMFUStatusOperationCompleted == null)) {
                this.LoadMFUStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFUStatusOperationCompleted);
            }
            this.InvokeAsync("LoadMFUStatus", new object[] {
                        InXml}, this.LoadMFUStatusOperationCompleted, userState);
        }
        
        private void OnLoadMFUStatusOperationCompleted(object arg) {
            if ((this.LoadMFUStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFUStatusCompleted(this, new LoadMFUStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadArea(string AreaType) {
            object[] results = this.Invoke("LoadArea", new object[] {
                        AreaType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAreaAsync(string AreaType) {
            this.LoadAreaAsync(AreaType, null);
        }
        
        /// <remarks/>
        public void LoadAreaAsync(string AreaType, object userState) {
            if ((this.LoadAreaOperationCompleted == null)) {
                this.LoadAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAreaOperationCompleted);
            }
            this.InvokeAsync("LoadArea", new object[] {
                        AreaType}, this.LoadAreaOperationCompleted, userState);
        }
        
        private void OnLoadAreaOperationCompleted(object arg) {
            if ((this.LoadAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAreaCompleted(this, new LoadAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFUNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMFUNo(string AreaNo) {
            object[] results = this.Invoke("LoadMFUNo", new object[] {
                        AreaNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFUNoAsync(string AreaNo) {
            this.LoadMFUNoAsync(AreaNo, null);
        }
        
        /// <remarks/>
        public void LoadMFUNoAsync(string AreaNo, object userState) {
            if ((this.LoadMFUNoOperationCompleted == null)) {
                this.LoadMFUNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFUNoOperationCompleted);
            }
            this.InvokeAsync("LoadMFUNo", new object[] {
                        AreaNo}, this.LoadMFUNoOperationCompleted, userState);
        }
        
        private void OnLoadMFUNoOperationCompleted(object arg) {
            if ((this.LoadMFUNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFUNoCompleted(this, new LoadMFUNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InsertToSMTMtlMFUStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertToSMTMtlMFUStatus(string[] lsSQL) {
            object[] results = this.Invoke("InsertToSMTMtlMFUStatus", new object[] {
                        lsSQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertToSMTMtlMFUStatusAsync(string[] lsSQL) {
            this.InsertToSMTMtlMFUStatusAsync(lsSQL, null);
        }
        
        /// <remarks/>
        public void InsertToSMTMtlMFUStatusAsync(string[] lsSQL, object userState) {
            if ((this.InsertToSMTMtlMFUStatusOperationCompleted == null)) {
                this.InsertToSMTMtlMFUStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertToSMTMtlMFUStatusOperationCompleted);
            }
            this.InvokeAsync("InsertToSMTMtlMFUStatus", new object[] {
                        lsSQL}, this.InsertToSMTMtlMFUStatusOperationCompleted, userState);
        }
        
        private void OnInsertToSMTMtlMFUStatusOperationCompleted(object arg) {
            if ((this.InsertToSMTMtlMFUStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertToSMTMtlMFUStatusCompleted(this, new InsertToSMTMtlMFUStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFUStatusJoinMO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFUStatusJoinMO(string InXml) {
            object[] results = this.Invoke("LoadMFUStatusJoinMO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFUStatusJoinMOAsync(string InXml) {
            this.LoadMFUStatusJoinMOAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFUStatusJoinMOAsync(string InXml, object userState) {
            if ((this.LoadMFUStatusJoinMOOperationCompleted == null)) {
                this.LoadMFUStatusJoinMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFUStatusJoinMOOperationCompleted);
            }
            this.InvokeAsync("LoadMFUStatusJoinMO", new object[] {
                        InXml}, this.LoadMFUStatusJoinMOOperationCompleted, userState);
        }
        
        private void OnLoadMFUStatusJoinMOOperationCompleted(object arg) {
            if ((this.LoadMFUStatusJoinMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFUStatusJoinMOCompleted(this, new LoadMFUStatusJoinMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMFUStatusJoinFeeder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMFUStatusJoinFeeder(string InXml) {
            object[] results = this.Invoke("LoadMFUStatusJoinFeeder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMFUStatusJoinFeederAsync(string InXml) {
            this.LoadMFUStatusJoinFeederAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMFUStatusJoinFeederAsync(string InXml, object userState) {
            if ((this.LoadMFUStatusJoinFeederOperationCompleted == null)) {
                this.LoadMFUStatusJoinFeederOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMFUStatusJoinFeederOperationCompleted);
            }
            this.InvokeAsync("LoadMFUStatusJoinFeeder", new object[] {
                        InXml}, this.LoadMFUStatusJoinFeederOperationCompleted, userState);
        }
        
        private void OnLoadMFUStatusJoinFeederOperationCompleted(object arg) {
            if ((this.LoadMFUStatusJoinFeederCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMFUStatusJoinFeederCompleted(this, new LoadMFUStatusJoinFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOCombine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOCombine(string InXml) {
            object[] results = this.Invoke("LoadMOCombine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOCombineAsync(string InXml) {
            this.LoadMOCombineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOCombineAsync(string InXml, object userState) {
            if ((this.LoadMOCombineOperationCompleted == null)) {
                this.LoadMOCombineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOCombineOperationCompleted);
            }
            this.InvokeAsync("LoadMOCombine", new object[] {
                        InXml}, this.LoadMOCombineOperationCompleted, userState);
        }
        
        private void OnLoadMOCombineOperationCompleted(object arg) {
            if ((this.LoadMOCombineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOCombineCompleted(this, new LoadMOCombineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOOISpec", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOOISpec(string InXml) {
            object[] results = this.Invoke("LoadMOOISpec", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOOISpecAsync(string InXml) {
            this.LoadMOOISpecAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOOISpecAsync(string InXml, object userState) {
            if ((this.LoadMOOISpecOperationCompleted == null)) {
                this.LoadMOOISpecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOOISpecOperationCompleted);
            }
            this.InvokeAsync("LoadMOOISpec", new object[] {
                        InXml}, this.LoadMOOISpecOperationCompleted, userState);
        }
        
        private void OnLoadMOOISpecOperationCompleted(object arg) {
            if ((this.LoadMOOISpecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOOISpecCompleted(this, new LoadMOOISpecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddMFUEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddMFUEQP(string InXml) {
            object[] results = this.Invoke("AddMFUEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMFUEQPAsync(string InXml) {
            this.AddMFUEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddMFUEQPAsync(string InXml, object userState) {
            if ((this.AddMFUEQPOperationCompleted == null)) {
                this.AddMFUEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMFUEQPOperationCompleted);
            }
            this.InvokeAsync("AddMFUEQP", new object[] {
                        InXml}, this.AddMFUEQPOperationCompleted, userState);
        }
        
        private void OnAddMFUEQPOperationCompleted(object arg) {
            if ((this.AddMFUEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMFUEQPCompleted(this, new AddMFUEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelMFUEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelMFUEQP(string InXml) {
            object[] results = this.Invoke("DelMFUEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelMFUEQPAsync(string InXml) {
            this.DelMFUEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelMFUEQPAsync(string InXml, object userState) {
            if ((this.DelMFUEQPOperationCompleted == null)) {
                this.DelMFUEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMFUEQPOperationCompleted);
            }
            this.InvokeAsync("DelMFUEQP", new object[] {
                        InXml}, this.DelMFUEQPOperationCompleted, userState);
        }
        
        private void OnDelMFUEQPOperationCompleted(object arg) {
            if ((this.DelMFUEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMFUEQPCompleted(this, new DelMFUEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadEQPMFUStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadEQPMFUStatus(string InXml) {
            object[] results = this.Invoke("LoadEQPMFUStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadEQPMFUStatusAsync(string InXml) {
            this.LoadEQPMFUStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadEQPMFUStatusAsync(string InXml, object userState) {
            if ((this.LoadEQPMFUStatusOperationCompleted == null)) {
                this.LoadEQPMFUStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadEQPMFUStatusOperationCompleted);
            }
            this.InvokeAsync("LoadEQPMFUStatus", new object[] {
                        InXml}, this.LoadEQPMFUStatusOperationCompleted, userState);
        }
        
        private void OnLoadEQPMFUStatusOperationCompleted(object arg) {
            if ((this.LoadEQPMFUStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadEQPMFUStatusCompleted(this, new LoadEQPMFUStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddUnitLog_Error", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUnitLog_Error(string InXml) {
            object[] results = this.Invoke("AddUnitLog_Error", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitLog_ErrorAsync(string InXml) {
            this.AddUnitLog_ErrorAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddUnitLog_ErrorAsync(string InXml, object userState) {
            if ((this.AddUnitLog_ErrorOperationCompleted == null)) {
                this.AddUnitLog_ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitLog_ErrorOperationCompleted);
            }
            this.InvokeAsync("AddUnitLog_Error", new object[] {
                        InXml}, this.AddUnitLog_ErrorOperationCompleted, userState);
        }
        
        private void OnAddUnitLog_ErrorOperationCompleted(object arg) {
            if ((this.AddUnitLog_ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitLog_ErrorCompleted(this, new AddUnitLog_ErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQABasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQABasis(string InXml) {
            object[] results = this.Invoke("LoadVQABasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQABasisAsync(string InXml) {
            this.LoadVQABasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQABasisAsync(string InXml, object userState) {
            if ((this.LoadVQABasisOperationCompleted == null)) {
                this.LoadVQABasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQABasisOperationCompleted);
            }
            this.InvokeAsync("LoadVQABasis", new object[] {
                        InXml}, this.LoadVQABasisOperationCompleted, userState);
        }
        
        private void OnLoadVQABasisOperationCompleted(object arg) {
            if ((this.LoadVQABasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQABasisCompleted(this, new LoadVQABasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQADetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQADetail(string InXml) {
            object[] results = this.Invoke("LoadVQADetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQADetailAsync(string InXml) {
            this.LoadVQADetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQADetailAsync(string InXml, object userState) {
            if ((this.LoadVQADetailOperationCompleted == null)) {
                this.LoadVQADetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQADetailOperationCompleted);
            }
            this.InvokeAsync("LoadVQADetail", new object[] {
                        InXml}, this.LoadVQADetailOperationCompleted, userState);
        }
        
        private void OnLoadVQADetailOperationCompleted(object arg) {
            if ((this.LoadVQADetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQADetailCompleted(this, new LoadVQADetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQAMoDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQAMoDetail(string InXml) {
            object[] results = this.Invoke("LoadVQAMoDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQAMoDetailAsync(string InXml) {
            this.LoadVQAMoDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQAMoDetailAsync(string InXml, object userState) {
            if ((this.LoadVQAMoDetailOperationCompleted == null)) {
                this.LoadVQAMoDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQAMoDetailOperationCompleted);
            }
            this.InvokeAsync("LoadVQAMoDetail", new object[] {
                        InXml}, this.LoadVQAMoDetailOperationCompleted, userState);
        }
        
        private void OnLoadVQAMoDetailOperationCompleted(object arg) {
            if ((this.LoadVQAMoDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQAMoDetailCompleted(this, new LoadVQAMoDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetVQANo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVQANo(string InXml) {
            object[] results = this.Invoke("GetVQANo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVQANoAsync(string InXml) {
            this.GetVQANoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetVQANoAsync(string InXml, object userState) {
            if ((this.GetVQANoOperationCompleted == null)) {
                this.GetVQANoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVQANoOperationCompleted);
            }
            this.InvokeAsync("GetVQANo", new object[] {
                        InXml}, this.GetVQANoOperationCompleted, userState);
        }
        
        private void OnGetVQANoOperationCompleted(object arg) {
            if ((this.GetVQANoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVQANoCompleted(this, new GetVQANoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EXE_VQABasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EXE_VQABasis(string InXml) {
            object[] results = this.Invoke("EXE_VQABasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EXE_VQABasisAsync(string InXml) {
            this.EXE_VQABasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EXE_VQABasisAsync(string InXml, object userState) {
            if ((this.EXE_VQABasisOperationCompleted == null)) {
                this.EXE_VQABasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXE_VQABasisOperationCompleted);
            }
            this.InvokeAsync("EXE_VQABasis", new object[] {
                        InXml}, this.EXE_VQABasisOperationCompleted, userState);
        }
        
        private void OnEXE_VQABasisOperationCompleted(object arg) {
            if ((this.EXE_VQABasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXE_VQABasisCompleted(this, new EXE_VQABasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetVQAOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetVQAOP(string InXml) {
            object[] results = this.Invoke("SetVQAOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetVQAOPAsync(string InXml) {
            this.SetVQAOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetVQAOPAsync(string InXml, object userState) {
            if ((this.SetVQAOPOperationCompleted == null)) {
                this.SetVQAOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVQAOPOperationCompleted);
            }
            this.InvokeAsync("SetVQAOP", new object[] {
                        InXml}, this.SetVQAOPOperationCompleted, userState);
        }
        
        private void OnSetVQAOPOperationCompleted(object arg) {
            if ((this.SetVQAOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVQAOPCompleted(this, new SetVQAOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQARelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQARelease(string InXml) {
            object[] results = this.Invoke("LoadVQARelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQAReleaseAsync(string InXml) {
            this.LoadVQAReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQAReleaseAsync(string InXml, object userState) {
            if ((this.LoadVQAReleaseOperationCompleted == null)) {
                this.LoadVQAReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQAReleaseOperationCompleted);
            }
            this.InvokeAsync("LoadVQARelease", new object[] {
                        InXml}, this.LoadVQAReleaseOperationCompleted, userState);
        }
        
        private void OnLoadVQAReleaseOperationCompleted(object arg) {
            if ((this.LoadVQAReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQAReleaseCompleted(this, new LoadVQAReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQAVDData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQAVDData(string InXml) {
            object[] results = this.Invoke("LoadVQAVDData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQAVDDataAsync(string InXml) {
            this.LoadVQAVDDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQAVDDataAsync(string InXml, object userState) {
            if ((this.LoadVQAVDDataOperationCompleted == null)) {
                this.LoadVQAVDDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQAVDDataOperationCompleted);
            }
            this.InvokeAsync("LoadVQAVDData", new object[] {
                        InXml}, this.LoadVQAVDDataOperationCompleted, userState);
        }
        
        private void OnLoadVQAVDDataOperationCompleted(object arg) {
            if ((this.LoadVQAVDDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQAVDDataCompleted(this, new LoadVQAVDDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadVQAAffectedMo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadVQAAffectedMo(string InXml) {
            object[] results = this.Invoke("LoadVQAAffectedMo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVQAAffectedMoAsync(string InXml) {
            this.LoadVQAAffectedMoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadVQAAffectedMoAsync(string InXml, object userState) {
            if ((this.LoadVQAAffectedMoOperationCompleted == null)) {
                this.LoadVQAAffectedMoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVQAAffectedMoOperationCompleted);
            }
            this.InvokeAsync("LoadVQAAffectedMo", new object[] {
                        InXml}, this.LoadVQAAffectedMoOperationCompleted, userState);
        }
        
        private void OnLoadVQAAffectedMoOperationCompleted(object arg) {
            if ((this.LoadVQAAffectedMoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVQAAffectedMoCompleted(this, new LoadVQAAffectedMoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ShowVQAMoCheck", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShowVQAMoCheck(string InXml) {
            object[] results = this.Invoke("ShowVQAMoCheck", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShowVQAMoCheckAsync(string InXml) {
            this.ShowVQAMoCheckAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ShowVQAMoCheckAsync(string InXml, object userState) {
            if ((this.ShowVQAMoCheckOperationCompleted == null)) {
                this.ShowVQAMoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowVQAMoCheckOperationCompleted);
            }
            this.InvokeAsync("ShowVQAMoCheck", new object[] {
                        InXml}, this.ShowVQAMoCheckOperationCompleted, userState);
        }
        
        private void OnShowVQAMoCheckOperationCompleted(object arg) {
            if ((this.ShowVQAMoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowVQAMoCheckCompleted(this, new ShowVQAMoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetVQAMTLRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetVQAMTLRelease(string InXml) {
            object[] results = this.Invoke("SetVQAMTLRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetVQAMTLReleaseAsync(string InXml) {
            this.SetVQAMTLReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetVQAMTLReleaseAsync(string InXml, object userState) {
            if ((this.SetVQAMTLReleaseOperationCompleted == null)) {
                this.SetVQAMTLReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVQAMTLReleaseOperationCompleted);
            }
            this.InvokeAsync("SetVQAMTLRelease", new object[] {
                        InXml}, this.SetVQAMTLReleaseOperationCompleted, userState);
        }
        
        private void OnSetVQAMTLReleaseOperationCompleted(object arg) {
            if ((this.SetVQAMTLReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVQAMTLReleaseCompleted(this, new SetVQAMTLReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetVQAMoRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetVQAMoRelease(string InXml) {
            object[] results = this.Invoke("SetVQAMoRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetVQAMoReleaseAsync(string InXml) {
            this.SetVQAMoReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetVQAMoReleaseAsync(string InXml, object userState) {
            if ((this.SetVQAMoReleaseOperationCompleted == null)) {
                this.SetVQAMoReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVQAMoReleaseOperationCompleted);
            }
            this.InvokeAsync("SetVQAMoRelease", new object[] {
                        InXml}, this.SetVQAMoReleaseOperationCompleted, userState);
        }
        
        private void OnSetVQAMoReleaseOperationCompleted(object arg) {
            if ((this.SetVQAMoReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVQAMoReleaseCompleted(this, new SetVQAMoReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMQABasisJoinDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMQABasisJoinDetail(string InXml) {
            object[] results = this.Invoke("LoadMQABasisJoinDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMQABasisJoinDetailAsync(string InXml) {
            this.LoadMQABasisJoinDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMQABasisJoinDetailAsync(string InXml, object userState) {
            if ((this.LoadMQABasisJoinDetailOperationCompleted == null)) {
                this.LoadMQABasisJoinDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMQABasisJoinDetailOperationCompleted);
            }
            this.InvokeAsync("LoadMQABasisJoinDetail", new object[] {
                        InXml}, this.LoadMQABasisJoinDetailOperationCompleted, userState);
        }
        
        private void OnLoadMQABasisJoinDetailOperationCompleted(object arg) {
            if ((this.LoadMQABasisJoinDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMQABasisJoinDetailCompleted(this, new LoadMQABasisJoinDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMQADetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMQADetail(string InXml) {
            object[] results = this.Invoke("LoadMQADetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMQADetailAsync(string InXml) {
            this.LoadMQADetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMQADetailAsync(string InXml, object userState) {
            if ((this.LoadMQADetailOperationCompleted == null)) {
                this.LoadMQADetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMQADetailOperationCompleted);
            }
            this.InvokeAsync("LoadMQADetail", new object[] {
                        InXml}, this.LoadMQADetailOperationCompleted, userState);
        }
        
        private void OnLoadMQADetailOperationCompleted(object arg) {
            if ((this.LoadMQADetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMQADetailCompleted(this, new LoadMQADetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMQAERFNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMQAERFNo(string InXml) {
            object[] results = this.Invoke("GetMQAERFNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMQAERFNoAsync(string InXml) {
            this.GetMQAERFNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMQAERFNoAsync(string InXml, object userState) {
            if ((this.GetMQAERFNoOperationCompleted == null)) {
                this.GetMQAERFNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMQAERFNoOperationCompleted);
            }
            this.InvokeAsync("GetMQAERFNo", new object[] {
                        InXml}, this.GetMQAERFNoOperationCompleted, userState);
        }
        
        private void OnGetMQAERFNoOperationCompleted(object arg) {
            if ((this.GetMQAERFNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMQAERFNoCompleted(this, new GetMQAERFNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_MQAERFCreate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_MQAERFCreate(string InXml) {
            object[] results = this.Invoke("Exe_MQAERFCreate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_MQAERFCreateAsync(string InXml) {
            this.Exe_MQAERFCreateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_MQAERFCreateAsync(string InXml, object userState) {
            if ((this.Exe_MQAERFCreateOperationCompleted == null)) {
                this.Exe_MQAERFCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_MQAERFCreateOperationCompleted);
            }
            this.InvokeAsync("Exe_MQAERFCreate", new object[] {
                        InXml}, this.Exe_MQAERFCreateOperationCompleted, userState);
        }
        
        private void OnExe_MQAERFCreateOperationCompleted(object arg) {
            if ((this.Exe_MQAERFCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_MQAERFCreateCompleted(this, new Exe_MQAERFCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMQAInfectedMO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMQAInfectedMO(string InXml) {
            object[] results = this.Invoke("GetMQAInfectedMO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMQAInfectedMOAsync(string InXml) {
            this.GetMQAInfectedMOAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMQAInfectedMOAsync(string InXml, object userState) {
            if ((this.GetMQAInfectedMOOperationCompleted == null)) {
                this.GetMQAInfectedMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMQAInfectedMOOperationCompleted);
            }
            this.InvokeAsync("GetMQAInfectedMO", new object[] {
                        InXml}, this.GetMQAInfectedMOOperationCompleted, userState);
        }
        
        private void OnGetMQAInfectedMOOperationCompleted(object arg) {
            if ((this.GetMQAInfectedMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMQAInfectedMOCompleted(this, new GetMQAInfectedMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdMQAHoldStartOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdMQAHoldStartOP(string InXml) {
            object[] results = this.Invoke("UpdMQAHoldStartOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdMQAHoldStartOPAsync(string InXml) {
            this.UpdMQAHoldStartOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdMQAHoldStartOPAsync(string InXml, object userState) {
            if ((this.UpdMQAHoldStartOPOperationCompleted == null)) {
                this.UpdMQAHoldStartOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMQAHoldStartOPOperationCompleted);
            }
            this.InvokeAsync("UpdMQAHoldStartOP", new object[] {
                        InXml}, this.UpdMQAHoldStartOPOperationCompleted, userState);
        }
        
        private void OnUpdMQAHoldStartOPOperationCompleted(object arg) {
            if ((this.UpdMQAHoldStartOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMQAHoldStartOPCompleted(this, new UpdMQAHoldStartOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMQARelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMQARelease(string InXml) {
            object[] results = this.Invoke("LoadMQARelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMQAReleaseAsync(string InXml) {
            this.LoadMQAReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMQAReleaseAsync(string InXml, object userState) {
            if ((this.LoadMQAReleaseOperationCompleted == null)) {
                this.LoadMQAReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMQAReleaseOperationCompleted);
            }
            this.InvokeAsync("LoadMQARelease", new object[] {
                        InXml}, this.LoadMQAReleaseOperationCompleted, userState);
        }
        
        private void OnLoadMQAReleaseOperationCompleted(object arg) {
            if ((this.LoadMQAReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMQAReleaseCompleted(this, new LoadMQAReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMQAAffectedMo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMQAAffectedMo(string InXml) {
            object[] results = this.Invoke("LoadMQAAffectedMo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMQAAffectedMoAsync(string InXml) {
            this.LoadMQAAffectedMoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMQAAffectedMoAsync(string InXml, object userState) {
            if ((this.LoadMQAAffectedMoOperationCompleted == null)) {
                this.LoadMQAAffectedMoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMQAAffectedMoOperationCompleted);
            }
            this.InvokeAsync("LoadMQAAffectedMo", new object[] {
                        InXml}, this.LoadMQAAffectedMoOperationCompleted, userState);
        }
        
        private void OnLoadMQAAffectedMoOperationCompleted(object arg) {
            if ((this.LoadMQAAffectedMoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMQAAffectedMoCompleted(this, new LoadMQAAffectedMoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetMQARelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMQARelease(string InXml) {
            object[] results = this.Invoke("SetMQARelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMQAReleaseAsync(string InXml) {
            this.SetMQAReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetMQAReleaseAsync(string InXml, object userState) {
            if ((this.SetMQAReleaseOperationCompleted == null)) {
                this.SetMQAReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMQAReleaseOperationCompleted);
            }
            this.InvokeAsync("SetMQARelease", new object[] {
                        InXml}, this.SetMQAReleaseOperationCompleted, userState);
        }
        
        private void OnSetMQAReleaseOperationCompleted(object arg) {
            if ((this.SetMQAReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMQAReleaseCompleted(this, new SetMQAReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetMOForbidOPNode", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMOForbidOPNode(string InXml) {
            object[] results = this.Invoke("SetMOForbidOPNode", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMOForbidOPNodeAsync(string InXml) {
            this.SetMOForbidOPNodeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetMOForbidOPNodeAsync(string InXml, object userState) {
            if ((this.SetMOForbidOPNodeOperationCompleted == null)) {
                this.SetMOForbidOPNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMOForbidOPNodeOperationCompleted);
            }
            this.InvokeAsync("SetMOForbidOPNode", new object[] {
                        InXml}, this.SetMOForbidOPNodeOperationCompleted, userState);
        }
        
        private void OnSetMOForbidOPNodeOperationCompleted(object arg) {
            if ((this.SetMOForbidOPNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMOForbidOPNodeCompleted(this, new SetMOForbidOPNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetOEMONo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOEMONo(string InXml) {
            object[] results = this.Invoke("GetOEMONo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOEMONoAsync(string InXml) {
            this.GetOEMONoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetOEMONoAsync(string InXml, object userState) {
            if ((this.GetOEMONoOperationCompleted == null)) {
                this.GetOEMONoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOEMONoOperationCompleted);
            }
            this.InvokeAsync("GetOEMONo", new object[] {
                        InXml}, this.GetOEMONoOperationCompleted, userState);
        }
        
        private void OnGetOEMONoOperationCompleted(object arg) {
            if ((this.GetOEMONoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOEMONoCompleted(this, new GetOEMONoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddMOPDLineState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddMOPDLineState(string InXml) {
            object[] results = this.Invoke("AddMOPDLineState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMOPDLineStateAsync(string InXml) {
            this.AddMOPDLineStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddMOPDLineStateAsync(string InXml, object userState) {
            if ((this.AddMOPDLineStateOperationCompleted == null)) {
                this.AddMOPDLineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMOPDLineStateOperationCompleted);
            }
            this.InvokeAsync("AddMOPDLineState", new object[] {
                        InXml}, this.AddMOPDLineStateOperationCompleted, userState);
        }
        
        private void OnAddMOPDLineStateOperationCompleted(object arg) {
            if ((this.AddMOPDLineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMOPDLineStateCompleted(this, new AddMOPDLineStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTProductionState_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTProductionState_New(string InXml) {
            object[] results = this.Invoke("LoadSMTProductionState_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTProductionState_NewAsync(string InXml) {
            this.LoadSMTProductionState_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTProductionState_NewAsync(string InXml, object userState) {
            if ((this.LoadSMTProductionState_NewOperationCompleted == null)) {
                this.LoadSMTProductionState_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTProductionState_NewOperationCompleted);
            }
            this.InvokeAsync("LoadSMTProductionState_New", new object[] {
                        InXml}, this.LoadSMTProductionState_NewOperationCompleted, userState);
        }
        
        private void OnLoadSMTProductionState_NewOperationCompleted(object arg) {
            if ((this.LoadSMTProductionState_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTProductionState_NewCompleted(this, new LoadSMTProductionState_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSMTProductionState_New1", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSMTProductionState_New1(string InXml) {
            object[] results = this.Invoke("LoadSMTProductionState_New1", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSMTProductionState_New1Async(string InXml) {
            this.LoadSMTProductionState_New1Async(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSMTProductionState_New1Async(string InXml, object userState) {
            if ((this.LoadSMTProductionState_New1OperationCompleted == null)) {
                this.LoadSMTProductionState_New1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSMTProductionState_New1OperationCompleted);
            }
            this.InvokeAsync("LoadSMTProductionState_New1", new object[] {
                        InXml}, this.LoadSMTProductionState_New1OperationCompleted, userState);
        }
        
        private void OnLoadSMTProductionState_New1OperationCompleted(object arg) {
            if ((this.LoadSMTProductionState_New1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSMTProductionState_New1Completed(this, new LoadSMTProductionState_New1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetSolderEdate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSolderEdate(string InXml) {
            object[] results = this.Invoke("GetSolderEdate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolderEdateAsync(string InXml) {
            this.GetSolderEdateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetSolderEdateAsync(string InXml, object userState) {
            if ((this.GetSolderEdateOperationCompleted == null)) {
                this.GetSolderEdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolderEdateOperationCompleted);
            }
            this.InvokeAsync("GetSolderEdate", new object[] {
                        InXml}, this.GetSolderEdateOperationCompleted, userState);
        }
        
        private void OnGetSolderEdateOperationCompleted(object arg) {
            if ((this.GetSolderEdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolderEdateCompleted(this, new GetSolderEdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSolderBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSolderBasis(string InXml) {
            object[] results = this.Invoke("LoadSolderBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSolderBasisAsync(string InXml) {
            this.LoadSolderBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSolderBasisAsync(string InXml, object userState) {
            if ((this.LoadSolderBasisOperationCompleted == null)) {
                this.LoadSolderBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSolderBasisOperationCompleted);
            }
            this.InvokeAsync("LoadSolderBasis", new object[] {
                        InXml}, this.LoadSolderBasisOperationCompleted, userState);
        }
        
        private void OnLoadSolderBasisOperationCompleted(object arg) {
            if ((this.LoadSolderBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSolderBasisCompleted(this, new LoadSolderBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddMoNoSolder_Combine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddMoNoSolder_Combine(string InXml) {
            object[] results = this.Invoke("AddMoNoSolder_Combine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMoNoSolder_CombineAsync(string InXml) {
            this.AddMoNoSolder_CombineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddMoNoSolder_CombineAsync(string InXml, object userState) {
            if ((this.AddMoNoSolder_CombineOperationCompleted == null)) {
                this.AddMoNoSolder_CombineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMoNoSolder_CombineOperationCompleted);
            }
            this.InvokeAsync("AddMoNoSolder_Combine", new object[] {
                        InXml}, this.AddMoNoSolder_CombineOperationCompleted, userState);
        }
        
        private void OnAddMoNoSolder_CombineOperationCompleted(object arg) {
            if ((this.AddMoNoSolder_CombineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMoNoSolder_CombineCompleted(this, new AddMoNoSolder_CombineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOEMOLineDispatch", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOEMOLineDispatch(string InXml) {
            object[] results = this.Invoke("LoadOEMOLineDispatch", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOEMOLineDispatchAsync(string InXml) {
            this.LoadOEMOLineDispatchAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOEMOLineDispatchAsync(string InXml, object userState) {
            if ((this.LoadOEMOLineDispatchOperationCompleted == null)) {
                this.LoadOEMOLineDispatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOEMOLineDispatchOperationCompleted);
            }
            this.InvokeAsync("LoadOEMOLineDispatch", new object[] {
                        InXml}, this.LoadOEMOLineDispatchOperationCompleted, userState);
        }
        
        private void OnLoadOEMOLineDispatchOperationCompleted(object arg) {
            if ((this.LoadOEMOLineDispatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOEMOLineDispatchCompleted(this, new LoadOEMOLineDispatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOEMOLineDispatchInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOEMOLineDispatchInfo(string InXml) {
            object[] results = this.Invoke("LoadOEMOLineDispatchInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOEMOLineDispatchInfoAsync(string InXml) {
            this.LoadOEMOLineDispatchInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOEMOLineDispatchInfoAsync(string InXml, object userState) {
            if ((this.LoadOEMOLineDispatchInfoOperationCompleted == null)) {
                this.LoadOEMOLineDispatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOEMOLineDispatchInfoOperationCompleted);
            }
            this.InvokeAsync("LoadOEMOLineDispatchInfo", new object[] {
                        InXml}, this.LoadOEMOLineDispatchInfoOperationCompleted, userState);
        }
        
        private void OnLoadOEMOLineDispatchInfoOperationCompleted(object arg) {
            if ((this.LoadOEMOLineDispatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOEMOLineDispatchInfoCompleted(this, new LoadOEMOLineDispatchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPMOPDLineStartInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPMOPDLineStartInfo(string InXml) {
            object[] results = this.Invoke("LoadWIPMOPDLineStartInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPMOPDLineStartInfoAsync(string InXml) {
            this.LoadWIPMOPDLineStartInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPMOPDLineStartInfoAsync(string InXml, object userState) {
            if ((this.LoadWIPMOPDLineStartInfoOperationCompleted == null)) {
                this.LoadWIPMOPDLineStartInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPMOPDLineStartInfoOperationCompleted);
            }
            this.InvokeAsync("LoadWIPMOPDLineStartInfo", new object[] {
                        InXml}, this.LoadWIPMOPDLineStartInfoOperationCompleted, userState);
        }
        
        private void OnLoadWIPMOPDLineStartInfoOperationCompleted(object arg) {
            if ((this.LoadWIPMOPDLineStartInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPMOPDLineStartInfoCompleted(this, new LoadWIPMOPDLineStartInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadProductionState_New", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadProductionState_New(string InXml) {
            object[] results = this.Invoke("LoadProductionState_New", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProductionState_NewAsync(string InXml) {
            this.LoadProductionState_NewAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadProductionState_NewAsync(string InXml, object userState) {
            if ((this.LoadProductionState_NewOperationCompleted == null)) {
                this.LoadProductionState_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProductionState_NewOperationCompleted);
            }
            this.InvokeAsync("LoadProductionState_New", new object[] {
                        InXml}, this.LoadProductionState_NewOperationCompleted, userState);
        }
        
        private void OnLoadProductionState_NewOperationCompleted(object arg) {
            if ((this.LoadProductionState_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProductionState_NewCompleted(this, new LoadProductionState_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadUserBasisJoinLoginState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadUserBasisJoinLoginState(string InXml) {
            object[] results = this.Invoke("LoadUserBasisJoinLoginState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUserBasisJoinLoginStateAsync(string InXml) {
            this.LoadUserBasisJoinLoginStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadUserBasisJoinLoginStateAsync(string InXml, object userState) {
            if ((this.LoadUserBasisJoinLoginStateOperationCompleted == null)) {
                this.LoadUserBasisJoinLoginStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUserBasisJoinLoginStateOperationCompleted);
            }
            this.InvokeAsync("LoadUserBasisJoinLoginState", new object[] {
                        InXml}, this.LoadUserBasisJoinLoginStateOperationCompleted, userState);
        }
        
        private void OnLoadUserBasisJoinLoginStateOperationCompleted(object arg) {
            if ((this.LoadUserBasisJoinLoginStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUserBasisJoinLoginStateCompleted(this, new LoadUserBasisJoinLoginStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOperatorLoginState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOperatorLoginState(string InXml) {
            object[] results = this.Invoke("LoadOperatorLoginState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOperatorLoginStateAsync(string InXml) {
            this.LoadOperatorLoginStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOperatorLoginStateAsync(string InXml, object userState) {
            if ((this.LoadOperatorLoginStateOperationCompleted == null)) {
                this.LoadOperatorLoginStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOperatorLoginStateOperationCompleted);
            }
            this.InvokeAsync("LoadOperatorLoginState", new object[] {
                        InXml}, this.LoadOperatorLoginStateOperationCompleted, userState);
        }
        
        private void OnLoadOperatorLoginStateOperationCompleted(object arg) {
            if ((this.LoadOperatorLoginStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOperatorLoginStateCompleted(this, new LoadOperatorLoginStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetPCDefaultData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPCDefaultData(string InXml) {
            object[] results = this.Invoke("GetPCDefaultData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPCDefaultDataAsync(string InXml) {
            this.GetPCDefaultDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetPCDefaultDataAsync(string InXml, object userState) {
            if ((this.GetPCDefaultDataOperationCompleted == null)) {
                this.GetPCDefaultDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPCDefaultDataOperationCompleted);
            }
            this.InvokeAsync("GetPCDefaultData", new object[] {
                        InXml}, this.GetPCDefaultDataOperationCompleted, userState);
        }
        
        private void OnGetPCDefaultDataOperationCompleted(object arg) {
            if ((this.GetPCDefaultDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPCDefaultDataCompleted(this, new GetPCDefaultDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdOperatorLogin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdOperatorLogin(string InXml) {
            object[] results = this.Invoke("UpdOperatorLogin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdOperatorLoginAsync(string InXml) {
            this.UpdOperatorLoginAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdOperatorLoginAsync(string InXml, object userState) {
            if ((this.UpdOperatorLoginOperationCompleted == null)) {
                this.UpdOperatorLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdOperatorLoginOperationCompleted);
            }
            this.InvokeAsync("UpdOperatorLogin", new object[] {
                        InXml}, this.UpdOperatorLoginOperationCompleted, userState);
        }
        
        private void OnUpdOperatorLoginOperationCompleted(object arg) {
            if ((this.UpdOperatorLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdOperatorLoginCompleted(this, new UpdOperatorLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdOperatorLogout", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdOperatorLogout(string InXml) {
            object[] results = this.Invoke("UpdOperatorLogout", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdOperatorLogoutAsync(string InXml) {
            this.UpdOperatorLogoutAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdOperatorLogoutAsync(string InXml, object userState) {
            if ((this.UpdOperatorLogoutOperationCompleted == null)) {
                this.UpdOperatorLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdOperatorLogoutOperationCompleted);
            }
            this.InvokeAsync("UpdOperatorLogout", new object[] {
                        InXml}, this.UpdOperatorLogoutOperationCompleted, userState);
        }
        
        private void OnUpdOperatorLogoutOperationCompleted(object arg) {
            if ((this.UpdOperatorLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdOperatorLogoutCompleted(this, new UpdOperatorLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetShift", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShift(string InXml) {
            object[] results = this.Invoke("GetShift", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShiftAsync(string InXml) {
            this.GetShiftAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetShiftAsync(string InXml, object userState) {
            if ((this.GetShiftOperationCompleted == null)) {
                this.GetShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShiftOperationCompleted);
            }
            this.InvokeAsync("GetShift", new object[] {
                        InXml}, this.GetShiftOperationCompleted, userState);
        }
        
        private void OnGetShiftOperationCompleted(object arg) {
            if ((this.GetShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShiftCompleted(this, new GetShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOPAreaJoinAreaEQPMap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOPAreaJoinAreaEQPMap(string InXml) {
            object[] results = this.Invoke("LoadOPAreaJoinAreaEQPMap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOPAreaJoinAreaEQPMapAsync(string InXml) {
            this.LoadOPAreaJoinAreaEQPMapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOPAreaJoinAreaEQPMapAsync(string InXml, object userState) {
            if ((this.LoadOPAreaJoinAreaEQPMapOperationCompleted == null)) {
                this.LoadOPAreaJoinAreaEQPMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOPAreaJoinAreaEQPMapOperationCompleted);
            }
            this.InvokeAsync("LoadOPAreaJoinAreaEQPMap", new object[] {
                        InXml}, this.LoadOPAreaJoinAreaEQPMapOperationCompleted, userState);
        }
        
        private void OnLoadOPAreaJoinAreaEQPMapOperationCompleted(object arg) {
            if ((this.LoadOPAreaJoinAreaEQPMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOPAreaJoinAreaEQPMapCompleted(this, new LoadOPAreaJoinAreaEQPMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadUserBasisJoinLoginLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadUserBasisJoinLoginLog(string InXml) {
            object[] results = this.Invoke("LoadUserBasisJoinLoginLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUserBasisJoinLoginLogAsync(string InXml) {
            this.LoadUserBasisJoinLoginLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadUserBasisJoinLoginLogAsync(string InXml, object userState) {
            if ((this.LoadUserBasisJoinLoginLogOperationCompleted == null)) {
                this.LoadUserBasisJoinLoginLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUserBasisJoinLoginLogOperationCompleted);
            }
            this.InvokeAsync("LoadUserBasisJoinLoginLog", new object[] {
                        InXml}, this.LoadUserBasisJoinLoginLogOperationCompleted, userState);
        }
        
        private void OnLoadUserBasisJoinLoginLogOperationCompleted(object arg) {
            if ((this.LoadUserBasisJoinLoginLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUserBasisJoinLoginLogCompleted(this, new LoadUserBasisJoinLoginLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOperatorLoginException", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOperatorLoginException(string InXml) {
            object[] results = this.Invoke("LoadOperatorLoginException", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOperatorLoginExceptionAsync(string InXml) {
            this.LoadOperatorLoginExceptionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOperatorLoginExceptionAsync(string InXml, object userState) {
            if ((this.LoadOperatorLoginExceptionOperationCompleted == null)) {
                this.LoadOperatorLoginExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOperatorLoginExceptionOperationCompleted);
            }
            this.InvokeAsync("LoadOperatorLoginException", new object[] {
                        InXml}, this.LoadOperatorLoginExceptionOperationCompleted, userState);
        }
        
        private void OnLoadOperatorLoginExceptionOperationCompleted(object arg) {
            if ((this.LoadOperatorLoginExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOperatorLoginExceptionCompleted(this, new LoadOperatorLoginExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddOperatorLoginException", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddOperatorLoginException(string InXml) {
            object[] results = this.Invoke("AddOperatorLoginException", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOperatorLoginExceptionAsync(string InXml) {
            this.AddOperatorLoginExceptionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddOperatorLoginExceptionAsync(string InXml, object userState) {
            if ((this.AddOperatorLoginExceptionOperationCompleted == null)) {
                this.AddOperatorLoginExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperatorLoginExceptionOperationCompleted);
            }
            this.InvokeAsync("AddOperatorLoginException", new object[] {
                        InXml}, this.AddOperatorLoginExceptionOperationCompleted, userState);
        }
        
        private void OnAddOperatorLoginExceptionOperationCompleted(object arg) {
            if ((this.AddOperatorLoginExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperatorLoginExceptionCompleted(this, new AddOperatorLoginExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetDIPProductionState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDIPProductionState(string InXml) {
            object[] results = this.Invoke("GetDIPProductionState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDIPProductionStateAsync(string InXml) {
            this.GetDIPProductionStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetDIPProductionStateAsync(string InXml, object userState) {
            if ((this.GetDIPProductionStateOperationCompleted == null)) {
                this.GetDIPProductionStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDIPProductionStateOperationCompleted);
            }
            this.InvokeAsync("GetDIPProductionState", new object[] {
                        InXml}, this.GetDIPProductionStateOperationCompleted, userState);
        }
        
        private void OnGetDIPProductionStateOperationCompleted(object arg) {
            if ((this.GetDIPProductionStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDIPProductionStateCompleted(this, new GetDIPProductionStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeWOStartDIPProduction", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeWOStartDIPProduction(string InXml) {
            object[] results = this.Invoke("ExeWOStartDIPProduction", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeWOStartDIPProductionAsync(string InXml) {
            this.ExeWOStartDIPProductionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeWOStartDIPProductionAsync(string InXml, object userState) {
            if ((this.ExeWOStartDIPProductionOperationCompleted == null)) {
                this.ExeWOStartDIPProductionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeWOStartDIPProductionOperationCompleted);
            }
            this.InvokeAsync("ExeWOStartDIPProduction", new object[] {
                        InXml}, this.ExeWOStartDIPProductionOperationCompleted, userState);
        }
        
        private void OnExeWOStartDIPProductionOperationCompleted(object arg) {
            if ((this.ExeWOStartDIPProductionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeWOStartDIPProductionCompleted(this, new ExeWOStartDIPProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadProductionLine_LossCode", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadProductionLine_LossCode(string InXml) {
            object[] results = this.Invoke("LoadProductionLine_LossCode", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProductionLine_LossCodeAsync(string InXml) {
            this.LoadProductionLine_LossCodeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadProductionLine_LossCodeAsync(string InXml, object userState) {
            if ((this.LoadProductionLine_LossCodeOperationCompleted == null)) {
                this.LoadProductionLine_LossCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProductionLine_LossCodeOperationCompleted);
            }
            this.InvokeAsync("LoadProductionLine_LossCode", new object[] {
                        InXml}, this.LoadProductionLine_LossCodeOperationCompleted, userState);
        }
        
        private void OnLoadProductionLine_LossCodeOperationCompleted(object arg) {
            if ((this.LoadProductionLine_LossCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProductionLine_LossCodeCompleted(this, new LoadProductionLine_LossCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOPAreaEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOPAreaEquipment(string InXml) {
            object[] results = this.Invoke("LoadOPAreaEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOPAreaEquipmentAsync(string InXml) {
            this.LoadOPAreaEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOPAreaEquipmentAsync(string InXml, object userState) {
            if ((this.LoadOPAreaEquipmentOperationCompleted == null)) {
                this.LoadOPAreaEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOPAreaEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadOPAreaEquipment", new object[] {
                        InXml}, this.LoadOPAreaEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadOPAreaEquipmentOperationCompleted(object arg) {
            if ((this.LoadOPAreaEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOPAreaEquipmentCompleted(this, new LoadOPAreaEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadProductionLineStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadProductionLineStatus(string InXml) {
            object[] results = this.Invoke("LoadProductionLineStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProductionLineStatusAsync(string InXml) {
            this.LoadProductionLineStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadProductionLineStatusAsync(string InXml, object userState) {
            if ((this.LoadProductionLineStatusOperationCompleted == null)) {
                this.LoadProductionLineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProductionLineStatusOperationCompleted);
            }
            this.InvokeAsync("LoadProductionLineStatus", new object[] {
                        InXml}, this.LoadProductionLineStatusOperationCompleted, userState);
        }
        
        private void OnLoadProductionLineStatusOperationCompleted(object arg) {
            if ((this.LoadProductionLineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProductionLineStatusCompleted(this, new LoadProductionLineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditProductionLineStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditProductionLineStatus(string InXml) {
            object[] results = this.Invoke("EditProductionLineStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditProductionLineStatusAsync(string InXml) {
            this.EditProductionLineStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditProductionLineStatusAsync(string InXml, object userState) {
            if ((this.EditProductionLineStatusOperationCompleted == null)) {
                this.EditProductionLineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProductionLineStatusOperationCompleted);
            }
            this.InvokeAsync("EditProductionLineStatus", new object[] {
                        InXml}, this.EditProductionLineStatusOperationCompleted, userState);
        }
        
        private void OnEditProductionLineStatusOperationCompleted(object arg) {
            if ((this.EditProductionLineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProductionLineStatusCompleted(this, new EditProductionLineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EXE_HoldProductionLine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EXE_HoldProductionLine(string InXml) {
            object[] results = this.Invoke("EXE_HoldProductionLine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EXE_HoldProductionLineAsync(string InXml) {
            this.EXE_HoldProductionLineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EXE_HoldProductionLineAsync(string InXml, object userState) {
            if ((this.EXE_HoldProductionLineOperationCompleted == null)) {
                this.EXE_HoldProductionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXE_HoldProductionLineOperationCompleted);
            }
            this.InvokeAsync("EXE_HoldProductionLine", new object[] {
                        InXml}, this.EXE_HoldProductionLineOperationCompleted, userState);
        }
        
        private void OnEXE_HoldProductionLineOperationCompleted(object arg) {
            if ((this.EXE_HoldProductionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXE_HoldProductionLineCompleted(this, new EXE_HoldProductionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EXE_ReleaseProductionLine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EXE_ReleaseProductionLine(string InXml) {
            object[] results = this.Invoke("EXE_ReleaseProductionLine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EXE_ReleaseProductionLineAsync(string InXml) {
            this.EXE_ReleaseProductionLineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EXE_ReleaseProductionLineAsync(string InXml, object userState) {
            if ((this.EXE_ReleaseProductionLineOperationCompleted == null)) {
                this.EXE_ReleaseProductionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXE_ReleaseProductionLineOperationCompleted);
            }
            this.InvokeAsync("EXE_ReleaseProductionLine", new object[] {
                        InXml}, this.EXE_ReleaseProductionLineOperationCompleted, userState);
        }
        
        private void OnEXE_ReleaseProductionLineOperationCompleted(object arg) {
            if ((this.EXE_ReleaseProductionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXE_ReleaseProductionLineCompleted(this, new EXE_ReleaseProductionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPrepareMOData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPrepareMOData(string InXml) {
            object[] results = this.Invoke("LoadPrepareMOData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPrepareMODataAsync(string InXml) {
            this.LoadPrepareMODataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPrepareMODataAsync(string InXml, object userState) {
            if ((this.LoadPrepareMODataOperationCompleted == null)) {
                this.LoadPrepareMODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPrepareMODataOperationCompleted);
            }
            this.InvokeAsync("LoadPrepareMOData", new object[] {
                        InXml}, this.LoadPrepareMODataOperationCompleted, userState);
        }
        
        private void OnLoadPrepareMODataOperationCompleted(object arg) {
            if ((this.LoadPrepareMODataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPrepareMODataCompleted(this, new LoadPrepareMODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOCombineJoinPickup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOCombineJoinPickup(string InXml) {
            object[] results = this.Invoke("LoadMOCombineJoinPickup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOCombineJoinPickupAsync(string InXml) {
            this.LoadMOCombineJoinPickupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOCombineJoinPickupAsync(string InXml, object userState) {
            if ((this.LoadMOCombineJoinPickupOperationCompleted == null)) {
                this.LoadMOCombineJoinPickupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOCombineJoinPickupOperationCompleted);
            }
            this.InvokeAsync("LoadMOCombineJoinPickup", new object[] {
                        InXml}, this.LoadMOCombineJoinPickupOperationCompleted, userState);
        }
        
        private void OnLoadMOCombineJoinPickupOperationCompleted(object arg) {
            if ((this.LoadMOCombineJoinPickupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOCombineJoinPickupCompleted(this, new LoadMOCombineJoinPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/MOPrepareCheckIn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MOPrepareCheckIn(string InXml) {
            object[] results = this.Invoke("MOPrepareCheckIn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MOPrepareCheckInAsync(string InXml) {
            this.MOPrepareCheckInAsync(InXml, null);
        }
        
        /// <remarks/>
        public void MOPrepareCheckInAsync(string InXml, object userState) {
            if ((this.MOPrepareCheckInOperationCompleted == null)) {
                this.MOPrepareCheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMOPrepareCheckInOperationCompleted);
            }
            this.InvokeAsync("MOPrepareCheckIn", new object[] {
                        InXml}, this.MOPrepareCheckInOperationCompleted, userState);
        }
        
        private void OnMOPrepareCheckInOperationCompleted(object arg) {
            if ((this.MOPrepareCheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MOPrepareCheckInCompleted(this, new MOPrepareCheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPrepareMaterialTemp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPrepareMaterialTemp(string InXml) {
            object[] results = this.Invoke("LoadPrepareMaterialTemp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPrepareMaterialTempAsync(string InXml) {
            this.LoadPrepareMaterialTempAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPrepareMaterialTempAsync(string InXml, object userState) {
            if ((this.LoadPrepareMaterialTempOperationCompleted == null)) {
                this.LoadPrepareMaterialTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPrepareMaterialTempOperationCompleted);
            }
            this.InvokeAsync("LoadPrepareMaterialTemp", new object[] {
                        InXml}, this.LoadPrepareMaterialTempOperationCompleted, userState);
        }
        
        private void OnLoadPrepareMaterialTempOperationCompleted(object arg) {
            if ((this.LoadPrepareMaterialTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPrepareMaterialTempCompleted(this, new LoadPrepareMaterialTempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/MOPrepareCheckOut", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MOPrepareCheckOut(string InXml) {
            object[] results = this.Invoke("MOPrepareCheckOut", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MOPrepareCheckOutAsync(string InXml) {
            this.MOPrepareCheckOutAsync(InXml, null);
        }
        
        /// <remarks/>
        public void MOPrepareCheckOutAsync(string InXml, object userState) {
            if ((this.MOPrepareCheckOutOperationCompleted == null)) {
                this.MOPrepareCheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMOPrepareCheckOutOperationCompleted);
            }
            this.InvokeAsync("MOPrepareCheckOut", new object[] {
                        InXml}, this.MOPrepareCheckOutOperationCompleted, userState);
        }
        
        private void OnMOPrepareCheckOutOperationCompleted(object arg) {
            if ((this.MOPrepareCheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MOPrepareCheckOutCompleted(this, new MOPrepareCheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadProductionState_Prepare", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadProductionState_Prepare(string InXml) {
            object[] results = this.Invoke("LoadProductionState_Prepare", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProductionState_PrepareAsync(string InXml) {
            this.LoadProductionState_PrepareAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadProductionState_PrepareAsync(string InXml, object userState) {
            if ((this.LoadProductionState_PrepareOperationCompleted == null)) {
                this.LoadProductionState_PrepareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProductionState_PrepareOperationCompleted);
            }
            this.InvokeAsync("LoadProductionState_Prepare", new object[] {
                        InXml}, this.LoadProductionState_PrepareOperationCompleted, userState);
        }
        
        private void OnLoadProductionState_PrepareOperationCompleted(object arg) {
            if ((this.LoadProductionState_PrepareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProductionState_PrepareCompleted(this, new LoadProductionState_PrepareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOPMemo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOPMemo(string InXml) {
            object[] results = this.Invoke("LoadOPMemo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOPMemoAsync(string InXml) {
            this.LoadOPMemoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOPMemoAsync(string InXml, object userState) {
            if ((this.LoadOPMemoOperationCompleted == null)) {
                this.LoadOPMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOPMemoOperationCompleted);
            }
            this.InvokeAsync("LoadOPMemo", new object[] {
                        InXml}, this.LoadOPMemoOperationCompleted, userState);
        }
        
        private void OnLoadOPMemoOperationCompleted(object arg) {
            if ((this.LoadOPMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOPMemoCompleted(this, new LoadOPMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddOPMemo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddOPMemo(string InXml) {
            object[] results = this.Invoke("AddOPMemo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOPMemoAsync(string InXml) {
            this.AddOPMemoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddOPMemoAsync(string InXml, object userState) {
            if ((this.AddOPMemoOperationCompleted == null)) {
                this.AddOPMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOPMemoOperationCompleted);
            }
            this.InvokeAsync("AddOPMemo", new object[] {
                        InXml}, this.AddOPMemoOperationCompleted, userState);
        }
        
        private void OnAddOPMemoOperationCompleted(object arg) {
            if ((this.AddOPMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOPMemoCompleted(this, new AddOPMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditOPMemo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditOPMemo(string InXml) {
            object[] results = this.Invoke("EditOPMemo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOPMemoAsync(string InXml) {
            this.EditOPMemoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditOPMemoAsync(string InXml, object userState) {
            if ((this.EditOPMemoOperationCompleted == null)) {
                this.EditOPMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOPMemoOperationCompleted);
            }
            this.InvokeAsync("EditOPMemo", new object[] {
                        InXml}, this.EditOPMemoOperationCompleted, userState);
        }
        
        private void OnEditOPMemoOperationCompleted(object arg) {
            if ((this.EditOPMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOPMemoCompleted(this, new EditOPMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelOPMemo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelOPMemo(string InXml) {
            object[] results = this.Invoke("DelOPMemo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelOPMemoAsync(string InXml) {
            this.DelOPMemoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelOPMemoAsync(string InXml, object userState) {
            if ((this.DelOPMemoOperationCompleted == null)) {
                this.DelOPMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOPMemoOperationCompleted);
            }
            this.InvokeAsync("DelOPMemo", new object[] {
                        InXml}, this.DelOPMemoOperationCompleted, userState);
        }
        
        private void OnDelOPMemoOperationCompleted(object arg) {
            if ((this.DelOPMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOPMemoCompleted(this, new DelOPMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditPanelLink", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditPanelLink(string InXml) {
            object[] results = this.Invoke("EditPanelLink", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPanelLinkAsync(string InXml) {
            this.EditPanelLinkAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditPanelLinkAsync(string InXml, object userState) {
            if ((this.EditPanelLinkOperationCompleted == null)) {
                this.EditPanelLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPanelLinkOperationCompleted);
            }
            this.InvokeAsync("EditPanelLink", new object[] {
                        InXml}, this.EditPanelLinkOperationCompleted, userState);
        }
        
        private void OnEditPanelLinkOperationCompleted(object arg) {
            if ((this.EditPanelLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPanelLinkCompleted(this, new EditPanelLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOProductProcessDefine", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOProductProcessDefine(string InXml) {
            object[] results = this.Invoke("LoadMOProductProcessDefine", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOProductProcessDefineAsync(string InXml) {
            this.LoadMOProductProcessDefineAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOProductProcessDefineAsync(string InXml, object userState) {
            if ((this.LoadMOProductProcessDefineOperationCompleted == null)) {
                this.LoadMOProductProcessDefineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOProductProcessDefineOperationCompleted);
            }
            this.InvokeAsync("LoadMOProductProcessDefine", new object[] {
                        InXml}, this.LoadMOProductProcessDefineOperationCompleted, userState);
        }
        
        private void OnLoadMOProductProcessDefineOperationCompleted(object arg) {
            if ((this.LoadMOProductProcessDefineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOProductProcessDefineCompleted(this, new LoadMOProductProcessDefineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkMOProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkMOProcess(string InXml) {
            object[] results = this.Invoke("ChkMOProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkMOProcessAsync(string InXml) {
            this.ChkMOProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkMOProcessAsync(string InXml, object userState) {
            if ((this.ChkMOProcessOperationCompleted == null)) {
                this.ChkMOProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkMOProcessOperationCompleted);
            }
            this.InvokeAsync("ChkMOProcess", new object[] {
                        InXml}, this.ChkMOProcessOperationCompleted, userState);
        }
        
        private void OnChkMOProcessOperationCompleted(object arg) {
            if ((this.ChkMOProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkMOProcessCompleted(this, new ChkMOProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingSerialQuery", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingSerialQuery(string InXml) {
            object[] results = this.Invoke("LoadPackingSerialQuery", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingSerialQueryAsync(string InXml) {
            this.LoadPackingSerialQueryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingSerialQueryAsync(string InXml, object userState) {
            if ((this.LoadPackingSerialQueryOperationCompleted == null)) {
                this.LoadPackingSerialQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingSerialQueryOperationCompleted);
            }
            this.InvokeAsync("LoadPackingSerialQuery", new object[] {
                        InXml}, this.LoadPackingSerialQueryOperationCompleted, userState);
        }
        
        private void OnLoadPackingSerialQueryOperationCompleted(object arg) {
            if ((this.LoadPackingSerialQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingSerialQueryCompleted(this, new LoadPackingSerialQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFCreateInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFCreateInfo(string InXml) {
            object[] results = this.Invoke("LoadERFCreateInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFCreateInfoAsync(string InXml) {
            this.LoadERFCreateInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFCreateInfoAsync(string InXml, object userState) {
            if ((this.LoadERFCreateInfoOperationCompleted == null)) {
                this.LoadERFCreateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFCreateInfoOperationCompleted);
            }
            this.InvokeAsync("LoadERFCreateInfo", new object[] {
                        InXml}, this.LoadERFCreateInfoOperationCompleted, userState);
        }
        
        private void OnLoadERFCreateInfoOperationCompleted(object arg) {
            if ((this.LoadERFCreateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFCreateInfoCompleted(this, new LoadERFCreateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadExceedTimeDefaultHoldInfo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadExceedTimeDefaultHoldInfo(string InXml) {
            object[] results = this.Invoke("LoadExceedTimeDefaultHoldInfo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadExceedTimeDefaultHoldInfoAsync(string InXml) {
            this.LoadExceedTimeDefaultHoldInfoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadExceedTimeDefaultHoldInfoAsync(string InXml, object userState) {
            if ((this.LoadExceedTimeDefaultHoldInfoOperationCompleted == null)) {
                this.LoadExceedTimeDefaultHoldInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadExceedTimeDefaultHoldInfoOperationCompleted);
            }
            this.InvokeAsync("LoadExceedTimeDefaultHoldInfo", new object[] {
                        InXml}, this.LoadExceedTimeDefaultHoldInfoOperationCompleted, userState);
        }
        
        private void OnLoadExceedTimeDefaultHoldInfoOperationCompleted(object arg) {
            if ((this.LoadExceedTimeDefaultHoldInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadExceedTimeDefaultHoldInfoCompleted(this, new LoadExceedTimeDefaultHoldInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFCreateData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFCreateData(string InXml) {
            object[] results = this.Invoke("LoadERFCreateData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFCreateDataAsync(string InXml) {
            this.LoadERFCreateDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFCreateDataAsync(string InXml, object userState) {
            if ((this.LoadERFCreateDataOperationCompleted == null)) {
                this.LoadERFCreateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFCreateDataOperationCompleted);
            }
            this.InvokeAsync("LoadERFCreateData", new object[] {
                        InXml}, this.LoadERFCreateDataOperationCompleted, userState);
        }
        
        private void OnLoadERFCreateDataOperationCompleted(object arg) {
            if ((this.LoadERFCreateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFCreateDataCompleted(this, new LoadERFCreateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRcvNoticeData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRcvNoticeData(string InXml) {
            object[] results = this.Invoke("LoadRcvNoticeData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRcvNoticeDataAsync(string InXml) {
            this.LoadRcvNoticeDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRcvNoticeDataAsync(string InXml, object userState) {
            if ((this.LoadRcvNoticeDataOperationCompleted == null)) {
                this.LoadRcvNoticeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRcvNoticeDataOperationCompleted);
            }
            this.InvokeAsync("LoadRcvNoticeData", new object[] {
                        InXml}, this.LoadRcvNoticeDataOperationCompleted, userState);
        }
        
        private void OnLoadRcvNoticeDataOperationCompleted(object arg) {
            if ((this.LoadRcvNoticeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRcvNoticeDataCompleted(this, new LoadRcvNoticeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadShippingListData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadShippingListData(string InXml) {
            object[] results = this.Invoke("LoadShippingListData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadShippingListDataAsync(string InXml) {
            this.LoadShippingListDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadShippingListDataAsync(string InXml, object userState) {
            if ((this.LoadShippingListDataOperationCompleted == null)) {
                this.LoadShippingListDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadShippingListDataOperationCompleted);
            }
            this.InvokeAsync("LoadShippingListData", new object[] {
                        InXml}, this.LoadShippingListDataOperationCompleted, userState);
        }
        
        private void OnLoadShippingListDataOperationCompleted(object arg) {
            if ((this.LoadShippingListDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadShippingListDataCompleted(this, new LoadShippingListDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetNewPackingListNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewPackingListNo(string InXml) {
            object[] results = this.Invoke("GetNewPackingListNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewPackingListNoAsync(string InXml) {
            this.GetNewPackingListNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetNewPackingListNoAsync(string InXml, object userState) {
            if ((this.GetNewPackingListNoOperationCompleted == null)) {
                this.GetNewPackingListNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewPackingListNoOperationCompleted);
            }
            this.InvokeAsync("GetNewPackingListNo", new object[] {
                        InXml}, this.GetNewPackingListNoOperationCompleted, userState);
        }
        
        private void OnGetNewPackingListNoOperationCompleted(object arg) {
            if ((this.GetNewPackingListNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewPackingListNoCompleted(this, new GetNewPackingListNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetNewShippingListNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewShippingListNo(string InXml) {
            object[] results = this.Invoke("GetNewShippingListNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewShippingListNoAsync(string InXml) {
            this.GetNewShippingListNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetNewShippingListNoAsync(string InXml, object userState) {
            if ((this.GetNewShippingListNoOperationCompleted == null)) {
                this.GetNewShippingListNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewShippingListNoOperationCompleted);
            }
            this.InvokeAsync("GetNewShippingListNo", new object[] {
                        InXml}, this.GetNewShippingListNoOperationCompleted, userState);
        }
        
        private void OnGetNewShippingListNoOperationCompleted(object arg) {
            if ((this.GetNewShippingListNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewShippingListNoCompleted(this, new GetNewShippingListNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadDramaBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDramaBasis(string InXml) {
            object[] results = this.Invoke("LoadDramaBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDramaBasisAsync(string InXml) {
            this.LoadDramaBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadDramaBasisAsync(string InXml, object userState) {
            if ((this.LoadDramaBasisOperationCompleted == null)) {
                this.LoadDramaBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDramaBasisOperationCompleted);
            }
            this.InvokeAsync("LoadDramaBasis", new object[] {
                        InXml}, this.LoadDramaBasisOperationCompleted, userState);
        }
        
        private void OnLoadDramaBasisOperationCompleted(object arg) {
            if ((this.LoadDramaBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDramaBasisCompleted(this, new LoadDramaBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetRuncardAction", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRuncardAction(string LotNo) {
            object[] results = this.Invoke("GetRuncardAction", new object[] {
                        LotNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuncardActionAsync(string LotNo) {
            this.GetRuncardActionAsync(LotNo, null);
        }
        
        /// <remarks/>
        public void GetRuncardActionAsync(string LotNo, object userState) {
            if ((this.GetRuncardActionOperationCompleted == null)) {
                this.GetRuncardActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuncardActionOperationCompleted);
            }
            this.InvokeAsync("GetRuncardAction", new object[] {
                        LotNo}, this.GetRuncardActionOperationCompleted, userState);
        }
        
        private void OnGetRuncardActionOperationCompleted(object arg) {
            if ((this.GetRuncardActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuncardActionCompleted(this, new GetRuncardActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckInwithEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInwithEquipment(string LotNo, string UserID, string EquipmentNo) {
            object[] results = this.Invoke("CheckInwithEquipment", new object[] {
                        LotNo,
                        UserID,
                        EquipmentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInwithEquipmentAsync(string LotNo, string UserID, string EquipmentNo) {
            this.CheckInwithEquipmentAsync(LotNo, UserID, EquipmentNo, null);
        }
        
        /// <remarks/>
        public void CheckInwithEquipmentAsync(string LotNo, string UserID, string EquipmentNo, object userState) {
            if ((this.CheckInwithEquipmentOperationCompleted == null)) {
                this.CheckInwithEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInwithEquipmentOperationCompleted);
            }
            this.InvokeAsync("CheckInwithEquipment", new object[] {
                        LotNo,
                        UserID,
                        EquipmentNo}, this.CheckInwithEquipmentOperationCompleted, userState);
        }
        
        private void OnCheckInwithEquipmentOperationCompleted(object arg) {
            if ((this.CheckInwithEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInwithEquipmentCompleted(this, new CheckInwithEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckInwithnoEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInwithnoEquipment(string LotNo, string UserID) {
            object[] results = this.Invoke("CheckInwithnoEquipment", new object[] {
                        LotNo,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInwithnoEquipmentAsync(string LotNo, string UserID) {
            this.CheckInwithnoEquipmentAsync(LotNo, UserID, null);
        }
        
        /// <remarks/>
        public void CheckInwithnoEquipmentAsync(string LotNo, string UserID, object userState) {
            if ((this.CheckInwithnoEquipmentOperationCompleted == null)) {
                this.CheckInwithnoEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInwithnoEquipmentOperationCompleted);
            }
            this.InvokeAsync("CheckInwithnoEquipment", new object[] {
                        LotNo,
                        UserID}, this.CheckInwithnoEquipmentOperationCompleted, userState);
        }
        
        private void OnCheckInwithnoEquipmentOperationCompleted(object arg) {
            if ((this.CheckInwithnoEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInwithnoEquipmentCompleted(this, new CheckInwithnoEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckOut", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckOut(string LotNo, string UserID, string ScrapQty) {
            object[] results = this.Invoke("CheckOut", new object[] {
                        LotNo,
                        UserID,
                        ScrapQty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOutAsync(string LotNo, string UserID, string ScrapQty) {
            this.CheckOutAsync(LotNo, UserID, ScrapQty, null);
        }
        
        /// <remarks/>
        public void CheckOutAsync(string LotNo, string UserID, string ScrapQty, object userState) {
            if ((this.CheckOutOperationCompleted == null)) {
                this.CheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutOperationCompleted);
            }
            this.InvokeAsync("CheckOut", new object[] {
                        LotNo,
                        UserID,
                        ScrapQty}, this.CheckOutOperationCompleted, userState);
        }
        
        private void OnCheckOutOperationCompleted(object arg) {
            if ((this.CheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutCompleted(this, new CheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadDTArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDTArea(string InXml) {
            object[] results = this.Invoke("LoadDTArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDTAreaAsync(string InXml) {
            this.LoadDTAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadDTAreaAsync(string InXml, object userState) {
            if ((this.LoadDTAreaOperationCompleted == null)) {
                this.LoadDTAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDTAreaOperationCompleted);
            }
            this.InvokeAsync("LoadDTArea", new object[] {
                        InXml}, this.LoadDTAreaOperationCompleted, userState);
        }
        
        private void OnLoadDTAreaOperationCompleted(object arg) {
            if ((this.LoadDTAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDTAreaCompleted(this, new LoadDTAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdDTArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdDTArea(string InXml) {
            object[] results = this.Invoke("UpdDTArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdDTAreaAsync(string InXml) {
            this.UpdDTAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdDTAreaAsync(string InXml, object userState) {
            if ((this.UpdDTAreaOperationCompleted == null)) {
                this.UpdDTAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdDTAreaOperationCompleted);
            }
            this.InvokeAsync("UpdDTArea", new object[] {
                        InXml}, this.UpdDTAreaOperationCompleted, userState);
        }
        
        private void OnUpdDTAreaOperationCompleted(object arg) {
            if ((this.UpdDTAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdDTAreaCompleted(this, new UpdDTAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_COCassette", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_COCassette(string InXml) {
            object[] results = this.Invoke("Exe_COCassette", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_COCassetteAsync(string InXml) {
            this.Exe_COCassetteAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_COCassetteAsync(string InXml, object userState) {
            if ((this.Exe_COCassetteOperationCompleted == null)) {
                this.Exe_COCassetteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_COCassetteOperationCompleted);
            }
            this.InvokeAsync("Exe_COCassette", new object[] {
                        InXml}, this.Exe_COCassetteOperationCompleted, userState);
        }
        
        private void OnExe_COCassetteOperationCompleted(object arg) {
            if ((this.Exe_COCassetteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_COCassetteCompleted(this, new Exe_COCassetteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPLimitedTimeControl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPLimitedTimeControl(string InXml) {
            object[] results = this.Invoke("LoadWIPLimitedTimeControl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPLimitedTimeControlAsync(string InXml) {
            this.LoadWIPLimitedTimeControlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPLimitedTimeControlAsync(string InXml, object userState) {
            if ((this.LoadWIPLimitedTimeControlOperationCompleted == null)) {
                this.LoadWIPLimitedTimeControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPLimitedTimeControlOperationCompleted);
            }
            this.InvokeAsync("LoadWIPLimitedTimeControl", new object[] {
                        InXml}, this.LoadWIPLimitedTimeControlOperationCompleted, userState);
        }
        
        private void OnLoadWIPLimitedTimeControlOperationCompleted(object arg) {
            if ((this.LoadWIPLimitedTimeControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPLimitedTimeControlCompleted(this, new LoadWIPLimitedTimeControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPLagTimeControlByLots", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPLagTimeControlByLots(string InXml) {
            object[] results = this.Invoke("LoadWIPLagTimeControlByLots", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPLagTimeControlByLotsAsync(string InXml) {
            this.LoadWIPLagTimeControlByLotsAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPLagTimeControlByLotsAsync(string InXml, object userState) {
            if ((this.LoadWIPLagTimeControlByLotsOperationCompleted == null)) {
                this.LoadWIPLagTimeControlByLotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPLagTimeControlByLotsOperationCompleted);
            }
            this.InvokeAsync("LoadWIPLagTimeControlByLots", new object[] {
                        InXml}, this.LoadWIPLagTimeControlByLotsOperationCompleted, userState);
        }
        
        private void OnLoadWIPLagTimeControlByLotsOperationCompleted(object arg) {
            if ((this.LoadWIPLagTimeControlByLotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPLagTimeControlByLotsCompleted(this, new LoadWIPLagTimeControlByLotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddFutureOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFutureOS(string InXml) {
            object[] results = this.Invoke("AddFutureOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFutureOSAsync(string InXml) {
            this.AddFutureOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddFutureOSAsync(string InXml, object userState) {
            if ((this.AddFutureOSOperationCompleted == null)) {
                this.AddFutureOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFutureOSOperationCompleted);
            }
            this.InvokeAsync("AddFutureOS", new object[] {
                        InXml}, this.AddFutureOSOperationCompleted, userState);
        }
        
        private void OnAddFutureOSOperationCompleted(object arg) {
            if ((this.AddFutureOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFutureOSCompleted(this, new AddFutureOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditFutureOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditFutureOS(string InXml) {
            object[] results = this.Invoke("EditFutureOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFutureOSAsync(string InXml) {
            this.EditFutureOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditFutureOSAsync(string InXml, object userState) {
            if ((this.EditFutureOSOperationCompleted == null)) {
                this.EditFutureOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFutureOSOperationCompleted);
            }
            this.InvokeAsync("EditFutureOS", new object[] {
                        InXml}, this.EditFutureOSOperationCompleted, userState);
        }
        
        private void OnEditFutureOSOperationCompleted(object arg) {
            if ((this.EditFutureOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFutureOSCompleted(this, new EditFutureOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFutureOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFutureOS(string InXml) {
            object[] results = this.Invoke("DelFutureOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFutureOSAsync(string InXml) {
            this.DelFutureOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFutureOSAsync(string InXml, object userState) {
            if ((this.DelFutureOSOperationCompleted == null)) {
                this.DelFutureOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFutureOSOperationCompleted);
            }
            this.InvokeAsync("DelFutureOS", new object[] {
                        InXml}, this.DelFutureOSOperationCompleted, userState);
        }
        
        private void OnDelFutureOSOperationCompleted(object arg) {
            if ((this.DelFutureOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFutureOSCompleted(this, new DelFutureOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFutureOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFutureOS(string InXml) {
            object[] results = this.Invoke("LoadFutureOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFutureOSAsync(string InXml) {
            this.LoadFutureOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFutureOSAsync(string InXml, object userState) {
            if ((this.LoadFutureOSOperationCompleted == null)) {
                this.LoadFutureOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFutureOSOperationCompleted);
            }
            this.InvokeAsync("LoadFutureOS", new object[] {
                        InXml}, this.LoadFutureOSOperationCompleted, userState);
        }
        
        private void OnLoadFutureOSOperationCompleted(object arg) {
            if ((this.LoadFutureOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFutureOSCompleted(this, new LoadFutureOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPOutSource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPOutSource(string InXml) {
            object[] results = this.Invoke("AddWIPOutSource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPOutSourceAsync(string InXml) {
            this.AddWIPOutSourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWIPOutSourceAsync(string InXml, object userState) {
            if ((this.AddWIPOutSourceOperationCompleted == null)) {
                this.AddWIPOutSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPOutSourceOperationCompleted);
            }
            this.InvokeAsync("AddWIPOutSource", new object[] {
                        InXml}, this.AddWIPOutSourceOperationCompleted, userState);
        }
        
        private void OnAddWIPOutSourceOperationCompleted(object arg) {
            if ((this.AddWIPOutSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPOutSourceCompleted(this, new AddWIPOutSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPOutSource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPOutSource(string InXml) {
            object[] results = this.Invoke("EditWIPOutSource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPOutSourceAsync(string InXml) {
            this.EditWIPOutSourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPOutSourceAsync(string InXml, object userState) {
            if ((this.EditWIPOutSourceOperationCompleted == null)) {
                this.EditWIPOutSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPOutSourceOperationCompleted);
            }
            this.InvokeAsync("EditWIPOutSource", new object[] {
                        InXml}, this.EditWIPOutSourceOperationCompleted, userState);
        }
        
        private void OnEditWIPOutSourceOperationCompleted(object arg) {
            if ((this.EditWIPOutSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPOutSourceCompleted(this, new EditWIPOutSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPOutSource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPOutSource(string InXml) {
            object[] results = this.Invoke("DelWIPOutSource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPOutSourceAsync(string InXml) {
            this.DelWIPOutSourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPOutSourceAsync(string InXml, object userState) {
            if ((this.DelWIPOutSourceOperationCompleted == null)) {
                this.DelWIPOutSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPOutSourceOperationCompleted);
            }
            this.InvokeAsync("DelWIPOutSource", new object[] {
                        InXml}, this.DelWIPOutSourceOperationCompleted, userState);
        }
        
        private void OnDelWIPOutSourceOperationCompleted(object arg) {
            if ((this.DelWIPOutSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPOutSourceCompleted(this, new DelWIPOutSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPAlreadyOSBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPAlreadyOSBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPAlreadyOSBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPAlreadyOSBasisAsync(string InXml) {
            this.LoadWIPAlreadyOSBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPAlreadyOSBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPAlreadyOSBasisOperationCompleted == null)) {
                this.LoadWIPAlreadyOSBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPAlreadyOSBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPAlreadyOSBasis", new object[] {
                        InXml}, this.LoadWIPAlreadyOSBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPAlreadyOSBasisOperationCompleted(object arg) {
            if ((this.LoadWIPAlreadyOSBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPAlreadyOSBasisCompleted(this, new LoadWIPAlreadyOSBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPOSBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPOSBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPOSBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPOSBasisAsync(string InXml) {
            this.LoadWIPOSBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPOSBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPOSBasisOperationCompleted == null)) {
                this.LoadWIPOSBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPOSBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPOSBasis", new object[] {
                        InXml}, this.LoadWIPOSBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPOSBasisOperationCompleted(object arg) {
            if ((this.LoadWIPOSBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPOSBasisCompleted(this, new LoadWIPOSBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPOSDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPOSDetail(string InXml) {
            object[] results = this.Invoke("LoadWIPOSDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPOSDetailAsync(string InXml) {
            this.LoadWIPOSDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPOSDetailAsync(string InXml, object userState) {
            if ((this.LoadWIPOSDetailOperationCompleted == null)) {
                this.LoadWIPOSDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPOSDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWIPOSDetail", new object[] {
                        InXml}, this.LoadWIPOSDetailOperationCompleted, userState);
        }
        
        private void OnLoadWIPOSDetailOperationCompleted(object arg) {
            if ((this.LoadWIPOSDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPOSDetailCompleted(this, new LoadWIPOSDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotStateInOSDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotStateInOSDetail(string InXml) {
            object[] results = this.Invoke("LoadLotStateInOSDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotStateInOSDetailAsync(string InXml) {
            this.LoadLotStateInOSDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotStateInOSDetailAsync(string InXml, object userState) {
            if ((this.LoadLotStateInOSDetailOperationCompleted == null)) {
                this.LoadLotStateInOSDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotStateInOSDetailOperationCompleted);
            }
            this.InvokeAsync("LoadLotStateInOSDetail", new object[] {
                        InXml}, this.LoadLotStateInOSDetailOperationCompleted, userState);
        }
        
        private void OnLoadLotStateInOSDetailOperationCompleted(object arg) {
            if ((this.LoadLotStateInOSDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotStateInOSDetailCompleted(this, new LoadLotStateInOSDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentStateInOSDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentStateInOSDetail(string InXml) {
            object[] results = this.Invoke("LoadComponentStateInOSDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentStateInOSDetailAsync(string InXml) {
            this.LoadComponentStateInOSDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentStateInOSDetailAsync(string InXml, object userState) {
            if ((this.LoadComponentStateInOSDetailOperationCompleted == null)) {
                this.LoadComponentStateInOSDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentStateInOSDetailOperationCompleted);
            }
            this.InvokeAsync("LoadComponentStateInOSDetail", new object[] {
                        InXml}, this.LoadComponentStateInOSDetailOperationCompleted, userState);
        }
        
        private void OnLoadComponentStateInOSDetailOperationCompleted(object arg) {
            if ((this.LoadComponentStateInOSDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentStateInOSDetailCompleted(this, new LoadComponentStateInOSDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetNewOSNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewOSNo(string InXml) {
            object[] results = this.Invoke("GetNewOSNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewOSNoAsync(string InXml) {
            this.GetNewOSNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetNewOSNoAsync(string InXml, object userState) {
            if ((this.GetNewOSNoOperationCompleted == null)) {
                this.GetNewOSNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewOSNoOperationCompleted);
            }
            this.InvokeAsync("GetNewOSNo", new object[] {
                        InXml}, this.GetNewOSNoOperationCompleted, userState);
        }
        
        private void OnGetNewOSNoOperationCompleted(object arg) {
            if ((this.GetNewOSNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewOSNoCompleted(this, new GetNewOSNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotStateForCreateOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotStateForCreateOS(string InXml) {
            object[] results = this.Invoke("LoadLotStateForCreateOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotStateForCreateOSAsync(string InXml) {
            this.LoadLotStateForCreateOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotStateForCreateOSAsync(string InXml, object userState) {
            if ((this.LoadLotStateForCreateOSOperationCompleted == null)) {
                this.LoadLotStateForCreateOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotStateForCreateOSOperationCompleted);
            }
            this.InvokeAsync("LoadLotStateForCreateOS", new object[] {
                        InXml}, this.LoadLotStateForCreateOSOperationCompleted, userState);
        }
        
        private void OnLoadLotStateForCreateOSOperationCompleted(object arg) {
            if ((this.LoadLotStateForCreateOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotStateForCreateOSCompleted(this, new LoadLotStateForCreateOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckLotStateForOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLotStateForOS(string InXml) {
            object[] results = this.Invoke("CheckLotStateForOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLotStateForOSAsync(string InXml) {
            this.CheckLotStateForOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckLotStateForOSAsync(string InXml, object userState) {
            if ((this.CheckLotStateForOSOperationCompleted == null)) {
                this.CheckLotStateForOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLotStateForOSOperationCompleted);
            }
            this.InvokeAsync("CheckLotStateForOS", new object[] {
                        InXml}, this.CheckLotStateForOSOperationCompleted, userState);
        }
        
        private void OnCheckLotStateForOSOperationCompleted(object arg) {
            if ((this.CheckLotStateForOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLotStateForOSCompleted(this, new CheckLotStateForOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeOSConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeOSConfirm(string InXml) {
            object[] results = this.Invoke("ExeOSConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeOSConfirmAsync(string InXml) {
            this.ExeOSConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeOSConfirmAsync(string InXml, object userState) {
            if ((this.ExeOSConfirmOperationCompleted == null)) {
                this.ExeOSConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeOSConfirmOperationCompleted);
            }
            this.InvokeAsync("ExeOSConfirm", new object[] {
                        InXml}, this.ExeOSConfirmOperationCompleted, userState);
        }
        
        private void OnExeOSConfirmOperationCompleted(object arg) {
            if ((this.ExeOSConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeOSConfirmCompleted(this, new ExeOSConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeOSReturn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeOSReturn(string InXml) {
            object[] results = this.Invoke("ExeOSReturn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeOSReturnAsync(string InXml) {
            this.ExeOSReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeOSReturnAsync(string InXml, object userState) {
            if ((this.ExeOSReturnOperationCompleted == null)) {
                this.ExeOSReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeOSReturnOperationCompleted);
            }
            this.InvokeAsync("ExeOSReturn", new object[] {
                        InXml}, this.ExeOSReturnOperationCompleted, userState);
        }
        
        private void OnExeOSReturnOperationCompleted(object arg) {
            if ((this.ExeOSReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeOSReturnCompleted(this, new ExeOSReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOSBasisByLotDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOSBasisByLotDetail(string InXml) {
            object[] results = this.Invoke("LoadOSBasisByLotDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOSBasisByLotDetailAsync(string InXml) {
            this.LoadOSBasisByLotDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOSBasisByLotDetailAsync(string InXml, object userState) {
            if ((this.LoadOSBasisByLotDetailOperationCompleted == null)) {
                this.LoadOSBasisByLotDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOSBasisByLotDetailOperationCompleted);
            }
            this.InvokeAsync("LoadOSBasisByLotDetail", new object[] {
                        InXml}, this.LoadOSBasisByLotDetailOperationCompleted, userState);
        }
        
        private void OnLoadOSBasisByLotDetailOperationCompleted(object arg) {
            if ((this.LoadOSBasisByLotDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOSBasisByLotDetailCompleted(this, new LoadOSBasisByLotDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CheckLotIsOSbutNotReturn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLotIsOSbutNotReturn(string InXml) {
            object[] results = this.Invoke("CheckLotIsOSbutNotReturn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLotIsOSbutNotReturnAsync(string InXml) {
            this.CheckLotIsOSbutNotReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CheckLotIsOSbutNotReturnAsync(string InXml, object userState) {
            if ((this.CheckLotIsOSbutNotReturnOperationCompleted == null)) {
                this.CheckLotIsOSbutNotReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLotIsOSbutNotReturnOperationCompleted);
            }
            this.InvokeAsync("CheckLotIsOSbutNotReturn", new object[] {
                        InXml}, this.CheckLotIsOSbutNotReturnOperationCompleted, userState);
        }
        
        private void OnCheckLotIsOSbutNotReturnOperationCompleted(object arg) {
            if ((this.CheckLotIsOSbutNotReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLotIsOSbutNotReturnCompleted(this, new CheckLotIsOSbutNotReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetUnReturnLotsInSameOSWithRefLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnReturnLotsInSameOSWithRefLot(string InXml) {
            object[] results = this.Invoke("GetUnReturnLotsInSameOSWithRefLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnReturnLotsInSameOSWithRefLotAsync(string InXml) {
            this.GetUnReturnLotsInSameOSWithRefLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetUnReturnLotsInSameOSWithRefLotAsync(string InXml, object userState) {
            if ((this.GetUnReturnLotsInSameOSWithRefLotOperationCompleted == null)) {
                this.GetUnReturnLotsInSameOSWithRefLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnReturnLotsInSameOSWithRefLotOperationCompleted);
            }
            this.InvokeAsync("GetUnReturnLotsInSameOSWithRefLot", new object[] {
                        InXml}, this.GetUnReturnLotsInSameOSWithRefLotOperationCompleted, userState);
        }
        
        private void OnGetUnReturnLotsInSameOSWithRefLotOperationCompleted(object arg) {
            if ((this.GetUnReturnLotsInSameOSWithRefLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnReturnLotsInSameOSWithRefLotCompleted(this, new GetUnReturnLotsInSameOSWithRefLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSumOfResource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSumOfResource(string InXml) {
            object[] results = this.Invoke("LoadSumOfResource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSumOfResourceAsync(string InXml) {
            this.LoadSumOfResourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSumOfResourceAsync(string InXml, object userState) {
            if ((this.LoadSumOfResourceOperationCompleted == null)) {
                this.LoadSumOfResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSumOfResourceOperationCompleted);
            }
            this.InvokeAsync("LoadSumOfResource", new object[] {
                        InXml}, this.LoadSumOfResourceOperationCompleted, userState);
        }
        
        private void OnLoadSumOfResourceOperationCompleted(object arg) {
            if ((this.LoadSumOfResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSumOfResourceCompleted(this, new LoadSumOfResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSumOfResource_Valid", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSumOfResource_Valid(string InXml) {
            object[] results = this.Invoke("LoadSumOfResource_Valid", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSumOfResource_ValidAsync(string InXml) {
            this.LoadSumOfResource_ValidAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSumOfResource_ValidAsync(string InXml, object userState) {
            if ((this.LoadSumOfResource_ValidOperationCompleted == null)) {
                this.LoadSumOfResource_ValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSumOfResource_ValidOperationCompleted);
            }
            this.InvokeAsync("LoadSumOfResource_Valid", new object[] {
                        InXml}, this.LoadSumOfResource_ValidOperationCompleted, userState);
        }
        
        private void OnLoadSumOfResource_ValidOperationCompleted(object arg) {
            if ((this.LoadSumOfResource_ValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSumOfResource_ValidCompleted(this, new LoadSumOfResource_ValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSumOfResource_Valid_ByOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSumOfResource_Valid_ByOP(string InXml) {
            object[] results = this.Invoke("LoadSumOfResource_Valid_ByOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSumOfResource_Valid_ByOPAsync(string InXml) {
            this.LoadSumOfResource_Valid_ByOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSumOfResource_Valid_ByOPAsync(string InXml, object userState) {
            if ((this.LoadSumOfResource_Valid_ByOPOperationCompleted == null)) {
                this.LoadSumOfResource_Valid_ByOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSumOfResource_Valid_ByOPOperationCompleted);
            }
            this.InvokeAsync("LoadSumOfResource_Valid_ByOP", new object[] {
                        InXml}, this.LoadSumOfResource_Valid_ByOPOperationCompleted, userState);
        }
        
        private void OnLoadSumOfResource_Valid_ByOPOperationCompleted(object arg) {
            if ((this.LoadSumOfResource_Valid_ByOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSumOfResource_Valid_ByOPCompleted(this, new LoadSumOfResource_Valid_ByOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddSumOfResource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSumOfResource(string InXml) {
            object[] results = this.Invoke("AddSumOfResource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSumOfResourceAsync(string InXml) {
            this.AddSumOfResourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddSumOfResourceAsync(string InXml, object userState) {
            if ((this.AddSumOfResourceOperationCompleted == null)) {
                this.AddSumOfResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSumOfResourceOperationCompleted);
            }
            this.InvokeAsync("AddSumOfResource", new object[] {
                        InXml}, this.AddSumOfResourceOperationCompleted, userState);
        }
        
        private void OnAddSumOfResourceOperationCompleted(object arg) {
            if ((this.AddSumOfResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSumOfResourceCompleted(this, new AddSumOfResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSumOfResource_Valid_ByMO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSumOfResource_Valid_ByMO(string InXml) {
            object[] results = this.Invoke("LoadSumOfResource_Valid_ByMO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSumOfResource_Valid_ByMOAsync(string InXml) {
            this.LoadSumOfResource_Valid_ByMOAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSumOfResource_Valid_ByMOAsync(string InXml, object userState) {
            if ((this.LoadSumOfResource_Valid_ByMOOperationCompleted == null)) {
                this.LoadSumOfResource_Valid_ByMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSumOfResource_Valid_ByMOOperationCompleted);
            }
            this.InvokeAsync("LoadSumOfResource_Valid_ByMO", new object[] {
                        InXml}, this.LoadSumOfResource_Valid_ByMOOperationCompleted, userState);
        }
        
        private void OnLoadSumOfResource_Valid_ByMOOperationCompleted(object arg) {
            if ((this.LoadSumOfResource_Valid_ByMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSumOfResource_Valid_ByMOCompleted(this, new LoadSumOfResource_Valid_ByMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSum_Resource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSum_Resource(string InXml) {
            object[] results = this.Invoke("LoadSum_Resource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSum_ResourceAsync(string InXml) {
            this.LoadSum_ResourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSum_ResourceAsync(string InXml, object userState) {
            if ((this.LoadSum_ResourceOperationCompleted == null)) {
                this.LoadSum_ResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSum_ResourceOperationCompleted);
            }
            this.InvokeAsync("LoadSum_Resource", new object[] {
                        InXml}, this.LoadSum_ResourceOperationCompleted, userState);
        }
        
        private void OnLoadSum_ResourceOperationCompleted(object arg) {
            if ((this.LoadSum_ResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSum_ResourceCompleted(this, new LoadSum_ResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPCarrierStateDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPCarrierStateDetail(string InXml) {
            object[] results = this.Invoke("LoadWIPCarrierStateDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPCarrierStateDetailAsync(string InXml) {
            this.LoadWIPCarrierStateDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPCarrierStateDetailAsync(string InXml, object userState) {
            if ((this.LoadWIPCarrierStateDetailOperationCompleted == null)) {
                this.LoadWIPCarrierStateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPCarrierStateDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWIPCarrierStateDetail", new object[] {
                        InXml}, this.LoadWIPCarrierStateDetailOperationCompleted, userState);
        }
        
        private void OnLoadWIPCarrierStateDetailOperationCompleted(object arg) {
            if ((this.LoadWIPCarrierStateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPCarrierStateDetailCompleted(this, new LoadWIPCarrierStateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetRelatedLotStateOfCarrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRelatedLotStateOfCarrier(string InXml) {
            object[] results = this.Invoke("GetRelatedLotStateOfCarrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedLotStateOfCarrierAsync(string InXml) {
            this.GetRelatedLotStateOfCarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetRelatedLotStateOfCarrierAsync(string InXml, object userState) {
            if ((this.GetRelatedLotStateOfCarrierOperationCompleted == null)) {
                this.GetRelatedLotStateOfCarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedLotStateOfCarrierOperationCompleted);
            }
            this.InvokeAsync("GetRelatedLotStateOfCarrier", new object[] {
                        InXml}, this.GetRelatedLotStateOfCarrierOperationCompleted, userState);
        }
        
        private void OnGetRelatedLotStateOfCarrierOperationCompleted(object arg) {
            if ((this.GetRelatedLotStateOfCarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedLotStateOfCarrierCompleted(this, new GetRelatedLotStateOfCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetLotQuantityOnCarrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotQuantityOnCarrier(string InXml) {
            object[] results = this.Invoke("GetLotQuantityOnCarrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotQuantityOnCarrierAsync(string InXml) {
            this.GetLotQuantityOnCarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetLotQuantityOnCarrierAsync(string InXml, object userState) {
            if ((this.GetLotQuantityOnCarrierOperationCompleted == null)) {
                this.GetLotQuantityOnCarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotQuantityOnCarrierOperationCompleted);
            }
            this.InvokeAsync("GetLotQuantityOnCarrier", new object[] {
                        InXml}, this.GetLotQuantityOnCarrierOperationCompleted, userState);
        }
        
        private void OnGetLotQuantityOnCarrierOperationCompleted(object arg) {
            if ((this.GetLotQuantityOnCarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotQuantityOnCarrierCompleted(this, new GetLotQuantityOnCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdWIPInv_Raw_Scrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdWIPInv_Raw_Scrap(string InXml) {
            object[] results = this.Invoke("UpdWIPInv_Raw_Scrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdWIPInv_Raw_ScrapAsync(string InXml) {
            this.UpdWIPInv_Raw_ScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdWIPInv_Raw_ScrapAsync(string InXml, object userState) {
            if ((this.UpdWIPInv_Raw_ScrapOperationCompleted == null)) {
                this.UpdWIPInv_Raw_ScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdWIPInv_Raw_ScrapOperationCompleted);
            }
            this.InvokeAsync("UpdWIPInv_Raw_Scrap", new object[] {
                        InXml}, this.UpdWIPInv_Raw_ScrapOperationCompleted, userState);
        }
        
        private void OnUpdWIPInv_Raw_ScrapOperationCompleted(object arg) {
            if ((this.UpdWIPInv_Raw_ScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdWIPInv_Raw_ScrapCompleted(this, new UpdWIPInv_Raw_ScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPlanFinishTime_byLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPlanFinishTime_byLot(string InXml) {
            object[] results = this.Invoke("LoadPlanFinishTime_byLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPlanFinishTime_byLotAsync(string InXml) {
            this.LoadPlanFinishTime_byLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPlanFinishTime_byLotAsync(string InXml, object userState) {
            if ((this.LoadPlanFinishTime_byLotOperationCompleted == null)) {
                this.LoadPlanFinishTime_byLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPlanFinishTime_byLotOperationCompleted);
            }
            this.InvokeAsync("LoadPlanFinishTime_byLot", new object[] {
                        InXml}, this.LoadPlanFinishTime_byLotOperationCompleted, userState);
        }
        
        private void OnLoadPlanFinishTime_byLotOperationCompleted(object arg) {
            if ((this.LoadPlanFinishTime_byLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPlanFinishTime_byLotCompleted(this, new LoadPlanFinishTime_byLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotTempEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotTempEquipment(string InXml) {
            object[] results = this.Invoke("LoadLotTempEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotTempEquipmentAsync(string InXml) {
            this.LoadLotTempEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotTempEquipmentAsync(string InXml, object userState) {
            if ((this.LoadLotTempEquipmentOperationCompleted == null)) {
                this.LoadLotTempEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotTempEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadLotTempEquipment", new object[] {
                        InXml}, this.LoadLotTempEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadLotTempEquipmentOperationCompleted(object arg) {
            if ((this.LoadLotTempEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotTempEquipmentCompleted(this, new LoadLotTempEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotTempEquipmentLoadPort", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotTempEquipmentLoadPort(string InXml) {
            object[] results = this.Invoke("LoadLotTempEquipmentLoadPort", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotTempEquipmentLoadPortAsync(string InXml) {
            this.LoadLotTempEquipmentLoadPortAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotTempEquipmentLoadPortAsync(string InXml, object userState) {
            if ((this.LoadLotTempEquipmentLoadPortOperationCompleted == null)) {
                this.LoadLotTempEquipmentLoadPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotTempEquipmentLoadPortOperationCompleted);
            }
            this.InvokeAsync("LoadLotTempEquipmentLoadPort", new object[] {
                        InXml}, this.LoadLotTempEquipmentLoadPortOperationCompleted, userState);
        }
        
        private void OnLoadLotTempEquipmentLoadPortOperationCompleted(object arg) {
            if ((this.LoadLotTempEquipmentLoadPortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotTempEquipmentLoadPortCompleted(this, new LoadLotTempEquipmentLoadPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadEQPConsumeStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadEQPConsumeStatus(string InXml) {
            object[] results = this.Invoke("LoadEQPConsumeStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadEQPConsumeStatusAsync(string InXml) {
            this.LoadEQPConsumeStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadEQPConsumeStatusAsync(string InXml, object userState) {
            if ((this.LoadEQPConsumeStatusOperationCompleted == null)) {
                this.LoadEQPConsumeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadEQPConsumeStatusOperationCompleted);
            }
            this.InvokeAsync("LoadEQPConsumeStatus", new object[] {
                        InXml}, this.LoadEQPConsumeStatusOperationCompleted, userState);
        }
        
        private void OnLoadEQPConsumeStatusOperationCompleted(object arg) {
            if ((this.LoadEQPConsumeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadEQPConsumeStatusCompleted(this, new LoadEQPConsumeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddEQPConsumeStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEQPConsumeStatus(string InXml) {
            object[] results = this.Invoke("AddEQPConsumeStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEQPConsumeStatusAsync(string InXml) {
            this.AddEQPConsumeStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddEQPConsumeStatusAsync(string InXml, object userState) {
            if ((this.AddEQPConsumeStatusOperationCompleted == null)) {
                this.AddEQPConsumeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEQPConsumeStatusOperationCompleted);
            }
            this.InvokeAsync("AddEQPConsumeStatus", new object[] {
                        InXml}, this.AddEQPConsumeStatusOperationCompleted, userState);
        }
        
        private void OnAddEQPConsumeStatusOperationCompleted(object arg) {
            if ((this.AddEQPConsumeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEQPConsumeStatusCompleted(this, new AddEQPConsumeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditEQPConsumeStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditEQPConsumeStatus(string InXml) {
            object[] results = this.Invoke("EditEQPConsumeStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditEQPConsumeStatusAsync(string InXml) {
            this.EditEQPConsumeStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditEQPConsumeStatusAsync(string InXml, object userState) {
            if ((this.EditEQPConsumeStatusOperationCompleted == null)) {
                this.EditEQPConsumeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditEQPConsumeStatusOperationCompleted);
            }
            this.InvokeAsync("EditEQPConsumeStatus", new object[] {
                        InXml}, this.EditEQPConsumeStatusOperationCompleted, userState);
        }
        
        private void OnEditEQPConsumeStatusOperationCompleted(object arg) {
            if ((this.EditEQPConsumeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditEQPConsumeStatusCompleted(this, new EditEQPConsumeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelEQPConsumeStatus", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelEQPConsumeStatus(string InXml) {
            object[] results = this.Invoke("DelEQPConsumeStatus", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelEQPConsumeStatusAsync(string InXml) {
            this.DelEQPConsumeStatusAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelEQPConsumeStatusAsync(string InXml, object userState) {
            if ((this.DelEQPConsumeStatusOperationCompleted == null)) {
                this.DelEQPConsumeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelEQPConsumeStatusOperationCompleted);
            }
            this.InvokeAsync("DelEQPConsumeStatus", new object[] {
                        InXml}, this.DelEQPConsumeStatusOperationCompleted, userState);
        }
        
        private void OnDelEQPConsumeStatusOperationCompleted(object arg) {
            if ((this.DelEQPConsumeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelEQPConsumeStatusCompleted(this, new DelEQPConsumeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddEQPConsumeLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEQPConsumeLog(string InXml) {
            object[] results = this.Invoke("AddEQPConsumeLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEQPConsumeLogAsync(string InXml) {
            this.AddEQPConsumeLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddEQPConsumeLogAsync(string InXml, object userState) {
            if ((this.AddEQPConsumeLogOperationCompleted == null)) {
                this.AddEQPConsumeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEQPConsumeLogOperationCompleted);
            }
            this.InvokeAsync("AddEQPConsumeLog", new object[] {
                        InXml}, this.AddEQPConsumeLogOperationCompleted, userState);
        }
        
        private void OnAddEQPConsumeLogOperationCompleted(object arg) {
            if ((this.AddEQPConsumeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEQPConsumeLogCompleted(this, new AddEQPConsumeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadEQPConsumeLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadEQPConsumeLog(string InXml) {
            object[] results = this.Invoke("LoadEQPConsumeLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadEQPConsumeLogAsync(string InXml) {
            this.LoadEQPConsumeLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadEQPConsumeLogAsync(string InXml, object userState) {
            if ((this.LoadEQPConsumeLogOperationCompleted == null)) {
                this.LoadEQPConsumeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadEQPConsumeLogOperationCompleted);
            }
            this.InvokeAsync("LoadEQPConsumeLog", new object[] {
                        InXml}, this.LoadEQPConsumeLogOperationCompleted, userState);
        }
        
        private void OnLoadEQPConsumeLogOperationCompleted(object arg) {
            if ((this.LoadEQPConsumeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadEQPConsumeLogCompleted(this, new LoadEQPConsumeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPEQPQCListLogBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPEQPQCListLogBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPEQPQCListLogBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPEQPQCListLogBasisAsync(string InXml) {
            this.LoadWIPEQPQCListLogBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPEQPQCListLogBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPEQPQCListLogBasisOperationCompleted == null)) {
                this.LoadWIPEQPQCListLogBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPEQPQCListLogBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPEQPQCListLogBasis", new object[] {
                        InXml}, this.LoadWIPEQPQCListLogBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPEQPQCListLogBasisOperationCompleted(object arg) {
            if ((this.LoadWIPEQPQCListLogBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPEQPQCListLogBasisCompleted(this, new LoadWIPEQPQCListLogBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPEQPQCListLogDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPEQPQCListLogDetail(string InXml) {
            object[] results = this.Invoke("LoadWIPEQPQCListLogDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPEQPQCListLogDetailAsync(string InXml) {
            this.LoadWIPEQPQCListLogDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPEQPQCListLogDetailAsync(string InXml, object userState) {
            if ((this.LoadWIPEQPQCListLogDetailOperationCompleted == null)) {
                this.LoadWIPEQPQCListLogDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPEQPQCListLogDetailOperationCompleted);
            }
            this.InvokeAsync("LoadWIPEQPQCListLogDetail", new object[] {
                        InXml}, this.LoadWIPEQPQCListLogDetailOperationCompleted, userState);
        }
        
        private void OnLoadWIPEQPQCListLogDetailOperationCompleted(object arg) {
            if ((this.LoadWIPEQPQCListLogDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPEQPQCListLogDetailCompleted(this, new LoadWIPEQPQCListLogDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPEQPQCListLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPEQPQCListLog(string InXml) {
            object[] results = this.Invoke("AddWIPEQPQCListLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPEQPQCListLogAsync(string InXml) {
            this.AddWIPEQPQCListLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWIPEQPQCListLogAsync(string InXml, object userState) {
            if ((this.AddWIPEQPQCListLogOperationCompleted == null)) {
                this.AddWIPEQPQCListLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPEQPQCListLogOperationCompleted);
            }
            this.InvokeAsync("AddWIPEQPQCListLog", new object[] {
                        InXml}, this.AddWIPEQPQCListLogOperationCompleted, userState);
        }
        
        private void OnAddWIPEQPQCListLogOperationCompleted(object arg) {
            if ((this.AddWIPEQPQCListLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPEQPQCListLogCompleted(this, new AddWIPEQPQCListLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPEQPQCListLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPEQPQCListLog(string InXml) {
            object[] results = this.Invoke("EditWIPEQPQCListLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPEQPQCListLogAsync(string InXml) {
            this.EditWIPEQPQCListLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPEQPQCListLogAsync(string InXml, object userState) {
            if ((this.EditWIPEQPQCListLogOperationCompleted == null)) {
                this.EditWIPEQPQCListLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPEQPQCListLogOperationCompleted);
            }
            this.InvokeAsync("EditWIPEQPQCListLog", new object[] {
                        InXml}, this.EditWIPEQPQCListLogOperationCompleted, userState);
        }
        
        private void OnEditWIPEQPQCListLogOperationCompleted(object arg) {
            if ((this.EditWIPEQPQCListLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPEQPQCListLogCompleted(this, new EditWIPEQPQCListLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetQCListSerial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQCListSerial(string InXml) {
            object[] results = this.Invoke("GetQCListSerial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCListSerialAsync(string InXml) {
            this.GetQCListSerialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetQCListSerialAsync(string InXml, object userState) {
            if ((this.GetQCListSerialOperationCompleted == null)) {
                this.GetQCListSerialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCListSerialOperationCompleted);
            }
            this.InvokeAsync("GetQCListSerial", new object[] {
                        InXml}, this.GetQCListSerialOperationCompleted, userState);
        }
        
        private void OnGetQCListSerialOperationCompleted(object arg) {
            if ((this.GetQCListSerialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCListSerialCompleted(this, new GetQCListSerialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadInvCountStateWithDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadInvCountStateWithDetail(string InXml) {
            object[] results = this.Invoke("LoadInvCountStateWithDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadInvCountStateWithDetailAsync(string InXml) {
            this.LoadInvCountStateWithDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadInvCountStateWithDetailAsync(string InXml, object userState) {
            if ((this.LoadInvCountStateWithDetailOperationCompleted == null)) {
                this.LoadInvCountStateWithDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInvCountStateWithDetailOperationCompleted);
            }
            this.InvokeAsync("LoadInvCountStateWithDetail", new object[] {
                        InXml}, this.LoadInvCountStateWithDetailOperationCompleted, userState);
        }
        
        private void OnLoadInvCountStateWithDetailOperationCompleted(object arg) {
            if ((this.LoadInvCountStateWithDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInvCountStateWithDetailCompleted(this, new LoadInvCountStateWithDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadInvCountState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadInvCountState(string InXml) {
            object[] results = this.Invoke("LoadInvCountState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadInvCountStateAsync(string InXml) {
            this.LoadInvCountStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadInvCountStateAsync(string InXml, object userState) {
            if ((this.LoadInvCountStateOperationCompleted == null)) {
                this.LoadInvCountStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInvCountStateOperationCompleted);
            }
            this.InvokeAsync("LoadInvCountState", new object[] {
                        InXml}, this.LoadInvCountStateOperationCompleted, userState);
        }
        
        private void OnLoadInvCountStateOperationCompleted(object arg) {
            if ((this.LoadInvCountStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInvCountStateCompleted(this, new LoadInvCountStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountClose", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountClose(string InXml) {
            object[] results = this.Invoke("ExeInvCountClose", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountCloseAsync(string InXml) {
            this.ExeInvCountCloseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountCloseAsync(string InXml, object userState) {
            if ((this.ExeInvCountCloseOperationCompleted == null)) {
                this.ExeInvCountCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountCloseOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountClose", new object[] {
                        InXml}, this.ExeInvCountCloseOperationCompleted, userState);
        }
        
        private void OnExeInvCountCloseOperationCompleted(object arg) {
            if ((this.ExeInvCountCloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountCloseCompleted(this, new ExeInvCountCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountOpen", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountOpen(string InXml) {
            object[] results = this.Invoke("ExeInvCountOpen", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountOpenAsync(string InXml) {
            this.ExeInvCountOpenAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountOpenAsync(string InXml, object userState) {
            if ((this.ExeInvCountOpenOperationCompleted == null)) {
                this.ExeInvCountOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountOpenOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountOpen", new object[] {
                        InXml}, this.ExeInvCountOpenOperationCompleted, userState);
        }
        
        private void OnExeInvCountOpenOperationCompleted(object arg) {
            if ((this.ExeInvCountOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountOpenCompleted(this, new ExeInvCountOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountAdjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountAdjust(string InXml) {
            object[] results = this.Invoke("ExeInvCountAdjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountAdjustAsync(string InXml) {
            this.ExeInvCountAdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountAdjustAsync(string InXml, object userState) {
            if ((this.ExeInvCountAdjustOperationCompleted == null)) {
                this.ExeInvCountAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountAdjustOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountAdjust", new object[] {
                        InXml}, this.ExeInvCountAdjustOperationCompleted, userState);
        }
        
        private void OnExeInvCountAdjustOperationCompleted(object arg) {
            if ((this.ExeInvCountAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountAdjustCompleted(this, new ExeInvCountAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountAdjust_MTL", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountAdjust_MTL(string InXml) {
            object[] results = this.Invoke("ExeInvCountAdjust_MTL", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountAdjust_MTLAsync(string InXml) {
            this.ExeInvCountAdjust_MTLAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountAdjust_MTLAsync(string InXml, object userState) {
            if ((this.ExeInvCountAdjust_MTLOperationCompleted == null)) {
                this.ExeInvCountAdjust_MTLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountAdjust_MTLOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountAdjust_MTL", new object[] {
                        InXml}, this.ExeInvCountAdjust_MTLOperationCompleted, userState);
        }
        
        private void OnExeInvCountAdjust_MTLOperationCompleted(object arg) {
            if ((this.ExeInvCountAdjust_MTLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountAdjust_MTLCompleted(this, new ExeInvCountAdjust_MTLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountAdjust_PRD", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountAdjust_PRD(string InXml) {
            object[] results = this.Invoke("ExeInvCountAdjust_PRD", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountAdjust_PRDAsync(string InXml) {
            this.ExeInvCountAdjust_PRDAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountAdjust_PRDAsync(string InXml, object userState) {
            if ((this.ExeInvCountAdjust_PRDOperationCompleted == null)) {
                this.ExeInvCountAdjust_PRDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountAdjust_PRDOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountAdjust_PRD", new object[] {
                        InXml}, this.ExeInvCountAdjust_PRDOperationCompleted, userState);
        }
        
        private void OnExeInvCountAdjust_PRDOperationCompleted(object arg) {
            if ((this.ExeInvCountAdjust_PRDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountAdjust_PRDCompleted(this, new ExeInvCountAdjust_PRDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeInvCountConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeInvCountConfirm(string InXml) {
            object[] results = this.Invoke("ExeInvCountConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeInvCountConfirmAsync(string InXml) {
            this.ExeInvCountConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeInvCountConfirmAsync(string InXml, object userState) {
            if ((this.ExeInvCountConfirmOperationCompleted == null)) {
                this.ExeInvCountConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeInvCountConfirmOperationCompleted);
            }
            this.InvokeAsync("ExeInvCountConfirm", new object[] {
                        InXml}, this.ExeInvCountConfirmOperationCompleted, userState);
        }
        
        private void OnExeInvCountConfirmOperationCompleted(object arg) {
            if ((this.ExeInvCountConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeInvCountConfirmCompleted(this, new ExeInvCountConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkInvCountAdjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkInvCountAdjust(string InXml) {
            object[] results = this.Invoke("ChkInvCountAdjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkInvCountAdjustAsync(string InXml) {
            this.ChkInvCountAdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkInvCountAdjustAsync(string InXml, object userState) {
            if ((this.ChkInvCountAdjustOperationCompleted == null)) {
                this.ChkInvCountAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkInvCountAdjustOperationCompleted);
            }
            this.InvokeAsync("ChkInvCountAdjust", new object[] {
                        InXml}, this.ChkInvCountAdjustOperationCompleted, userState);
        }
        
        private void OnChkInvCountAdjustOperationCompleted(object arg) {
            if ((this.ChkInvCountAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkInvCountAdjustCompleted(this, new ChkInvCountAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeTransferFactory_Lot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeTransferFactory_Lot(string InXml) {
            object[] results = this.Invoke("ExeTransferFactory_Lot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeTransferFactory_LotAsync(string InXml) {
            this.ExeTransferFactory_LotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeTransferFactory_LotAsync(string InXml, object userState) {
            if ((this.ExeTransferFactory_LotOperationCompleted == null)) {
                this.ExeTransferFactory_LotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeTransferFactory_LotOperationCompleted);
            }
            this.InvokeAsync("ExeTransferFactory_Lot", new object[] {
                        InXml}, this.ExeTransferFactory_LotOperationCompleted, userState);
        }
        
        private void OnExeTransferFactory_LotOperationCompleted(object arg) {
            if ((this.ExeTransferFactory_LotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeTransferFactory_LotCompleted(this, new ExeTransferFactory_LotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdAddOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdAddOS(string InXml) {
            object[] results = this.Invoke("UpdAddOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdAddOSAsync(string InXml) {
            this.UpdAddOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdAddOSAsync(string InXml, object userState) {
            if ((this.UpdAddOSOperationCompleted == null)) {
                this.UpdAddOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdAddOSOperationCompleted);
            }
            this.InvokeAsync("UpdAddOS", new object[] {
                        InXml}, this.UpdAddOSOperationCompleted, userState);
        }
        
        private void OnUpdAddOSOperationCompleted(object arg) {
            if ((this.UpdAddOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdAddOSCompleted(this, new UpdAddOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdEditOS", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdEditOS(string InXml) {
            object[] results = this.Invoke("UpdEditOS", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdEditOSAsync(string InXml) {
            this.UpdEditOSAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdEditOSAsync(string InXml, object userState) {
            if ((this.UpdEditOSOperationCompleted == null)) {
                this.UpdEditOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdEditOSOperationCompleted);
            }
            this.InvokeAsync("UpdEditOS", new object[] {
                        InXml}, this.UpdEditOSOperationCompleted, userState);
        }
        
        private void OnUpdEditOSOperationCompleted(object arg) {
            if ((this.UpdEditOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdEditOSCompleted(this, new UpdEditOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelOSBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelOSBasis(string InXml) {
            object[] results = this.Invoke("DelOSBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelOSBasisAsync(string InXml) {
            this.DelOSBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelOSBasisAsync(string InXml, object userState) {
            if ((this.DelOSBasisOperationCompleted == null)) {
                this.DelOSBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOSBasisOperationCompleted);
            }
            this.InvokeAsync("DelOSBasis", new object[] {
                        InXml}, this.DelOSBasisOperationCompleted, userState);
        }
        
        private void OnDelOSBasisOperationCompleted(object arg) {
            if ((this.DelOSBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOSBasisCompleted(this, new DelOSBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeOS_Abort", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeOS_Abort(string InXml) {
            object[] results = this.Invoke("ExeOS_Abort", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeOS_AbortAsync(string InXml) {
            this.ExeOS_AbortAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeOS_AbortAsync(string InXml, object userState) {
            if ((this.ExeOS_AbortOperationCompleted == null)) {
                this.ExeOS_AbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeOS_AbortOperationCompleted);
            }
            this.InvokeAsync("ExeOS_Abort", new object[] {
                        InXml}, this.ExeOS_AbortOperationCompleted, userState);
        }
        
        private void OnExeOS_AbortOperationCompleted(object arg) {
            if ((this.ExeOS_AbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeOS_AbortCompleted(this, new ExeOS_AbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeOS_Confirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeOS_Confirm(string InXml) {
            object[] results = this.Invoke("ExeOS_Confirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeOS_ConfirmAsync(string InXml) {
            this.ExeOS_ConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeOS_ConfirmAsync(string InXml, object userState) {
            if ((this.ExeOS_ConfirmOperationCompleted == null)) {
                this.ExeOS_ConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeOS_ConfirmOperationCompleted);
            }
            this.InvokeAsync("ExeOS_Confirm", new object[] {
                        InXml}, this.ExeOS_ConfirmOperationCompleted, userState);
        }
        
        private void OnExeOS_ConfirmOperationCompleted(object arg) {
            if ((this.ExeOS_ConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeOS_ConfirmCompleted(this, new ExeOS_ConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExeOS_Return", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExeOS_Return(string InXml) {
            object[] results = this.Invoke("ExeOS_Return", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExeOS_ReturnAsync(string InXml) {
            this.ExeOS_ReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExeOS_ReturnAsync(string InXml, object userState) {
            if ((this.ExeOS_ReturnOperationCompleted == null)) {
                this.ExeOS_ReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExeOS_ReturnOperationCompleted);
            }
            this.InvokeAsync("ExeOS_Return", new object[] {
                        InXml}, this.ExeOS_ReturnOperationCompleted, userState);
        }
        
        private void OnExeOS_ReturnOperationCompleted(object arg) {
            if ((this.ExeOS_ReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExeOS_ReturnCompleted(this, new ExeOS_ReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotChoiceEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotChoiceEQP(string InXml) {
            object[] results = this.Invoke("Exe_LotChoiceEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotChoiceEQPAsync(string InXml) {
            this.Exe_LotChoiceEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotChoiceEQPAsync(string InXml, object userState) {
            if ((this.Exe_LotChoiceEQPOperationCompleted == null)) {
                this.Exe_LotChoiceEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotChoiceEQPOperationCompleted);
            }
            this.InvokeAsync("Exe_LotChoiceEQP", new object[] {
                        InXml}, this.Exe_LotChoiceEQPOperationCompleted, userState);
        }
        
        private void OnExe_LotChoiceEQPOperationCompleted(object arg) {
            if ((this.Exe_LotChoiceEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotChoiceEQPCompleted(this, new Exe_LotChoiceEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_AmountCloseLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_AmountCloseLot(string InXml) {
            object[] results = this.Invoke("Exe_AmountCloseLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_AmountCloseLotAsync(string InXml) {
            this.Exe_AmountCloseLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_AmountCloseLotAsync(string InXml, object userState) {
            if ((this.Exe_AmountCloseLotOperationCompleted == null)) {
                this.Exe_AmountCloseLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_AmountCloseLotOperationCompleted);
            }
            this.InvokeAsync("Exe_AmountCloseLot", new object[] {
                        InXml}, this.Exe_AmountCloseLotOperationCompleted, userState);
        }
        
        private void OnExe_AmountCloseLotOperationCompleted(object arg) {
            if ((this.Exe_AmountCloseLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_AmountCloseLotCompleted(this, new Exe_AmountCloseLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetLotStateToExitGroupOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLotStateToExitGroupOP(string InXml) {
            object[] results = this.Invoke("SetLotStateToExitGroupOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLotStateToExitGroupOPAsync(string InXml) {
            this.SetLotStateToExitGroupOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetLotStateToExitGroupOPAsync(string InXml, object userState) {
            if ((this.SetLotStateToExitGroupOPOperationCompleted == null)) {
                this.SetLotStateToExitGroupOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLotStateToExitGroupOPOperationCompleted);
            }
            this.InvokeAsync("SetLotStateToExitGroupOP", new object[] {
                        InXml}, this.SetLotStateToExitGroupOPOperationCompleted, userState);
        }
        
        private void OnSetLotStateToExitGroupOPOperationCompleted(object arg) {
            if ((this.SetLotStateToExitGroupOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLotStateToExitGroupOPCompleted(this, new SetLotStateToExitGroupOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddCont_Material_Adjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddCont_Material_Adjust(string InXml) {
            object[] results = this.Invoke("AddCont_Material_Adjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCont_Material_AdjustAsync(string InXml) {
            this.AddCont_Material_AdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddCont_Material_AdjustAsync(string InXml, object userState) {
            if ((this.AddCont_Material_AdjustOperationCompleted == null)) {
                this.AddCont_Material_AdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCont_Material_AdjustOperationCompleted);
            }
            this.InvokeAsync("AddCont_Material_Adjust", new object[] {
                        InXml}, this.AddCont_Material_AdjustOperationCompleted, userState);
        }
        
        private void OnAddCont_Material_AdjustOperationCompleted(object arg) {
            if ((this.AddCont_Material_AdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCont_Material_AdjustCompleted(this, new AddCont_Material_AdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditCont_Material_Adjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditCont_Material_Adjust(string InXml) {
            object[] results = this.Invoke("EditCont_Material_Adjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCont_Material_AdjustAsync(string InXml) {
            this.EditCont_Material_AdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditCont_Material_AdjustAsync(string InXml, object userState) {
            if ((this.EditCont_Material_AdjustOperationCompleted == null)) {
                this.EditCont_Material_AdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCont_Material_AdjustOperationCompleted);
            }
            this.InvokeAsync("EditCont_Material_Adjust", new object[] {
                        InXml}, this.EditCont_Material_AdjustOperationCompleted, userState);
        }
        
        private void OnEditCont_Material_AdjustOperationCompleted(object arg) {
            if ((this.EditCont_Material_AdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCont_Material_AdjustCompleted(this, new EditCont_Material_AdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelCont_Material_Adjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelCont_Material_Adjust(string InXml) {
            object[] results = this.Invoke("DelCont_Material_Adjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelCont_Material_AdjustAsync(string InXml) {
            this.DelCont_Material_AdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelCont_Material_AdjustAsync(string InXml, object userState) {
            if ((this.DelCont_Material_AdjustOperationCompleted == null)) {
                this.DelCont_Material_AdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelCont_Material_AdjustOperationCompleted);
            }
            this.InvokeAsync("DelCont_Material_Adjust", new object[] {
                        InXml}, this.DelCont_Material_AdjustOperationCompleted, userState);
        }
        
        private void OnDelCont_Material_AdjustOperationCompleted(object arg) {
            if ((this.DelCont_Material_AdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelCont_Material_AdjustCompleted(this, new DelCont_Material_AdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddMaterialFeeder", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddMaterialFeeder(string InXml) {
            object[] results = this.Invoke("AddMaterialFeeder", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMaterialFeederAsync(string InXml) {
            this.AddMaterialFeederAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddMaterialFeederAsync(string InXml, object userState) {
            if ((this.AddMaterialFeederOperationCompleted == null)) {
                this.AddMaterialFeederOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMaterialFeederOperationCompleted);
            }
            this.InvokeAsync("AddMaterialFeeder", new object[] {
                        InXml}, this.AddMaterialFeederOperationCompleted, userState);
        }
        
        private void OnAddMaterialFeederOperationCompleted(object arg) {
            if ((this.AddMaterialFeederCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMaterialFeederCompleted(this, new AddMaterialFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadEQPETHValue", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadEQPETHValue(string InXml) {
            object[] results = this.Invoke("LoadEQPETHValue", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadEQPETHValueAsync(string InXml) {
            this.LoadEQPETHValueAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadEQPETHValueAsync(string InXml, object userState) {
            if ((this.LoadEQPETHValueOperationCompleted == null)) {
                this.LoadEQPETHValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadEQPETHValueOperationCompleted);
            }
            this.InvokeAsync("LoadEQPETHValue", new object[] {
                        InXml}, this.LoadEQPETHValueOperationCompleted, userState);
        }
        
        private void OnLoadEQPETHValueOperationCompleted(object arg) {
            if ((this.LoadEQPETHValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadEQPETHValueCompleted(this, new LoadEQPETHValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetExpValue", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpValue(string InXml) {
            object[] results = this.Invoke("GetExpValue", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpValueAsync(string InXml) {
            this.GetExpValueAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetExpValueAsync(string InXml, object userState) {
            if ((this.GetExpValueOperationCompleted == null)) {
                this.GetExpValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpValueOperationCompleted);
            }
            this.InvokeAsync("GetExpValue", new object[] {
                        InXml}, this.GetExpValueOperationCompleted, userState);
        }
        
        private void OnGetExpValueOperationCompleted(object arg) {
            if ((this.GetExpValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpValueCompleted(this, new GetExpValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_CarrierFoup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_CarrierFoup(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_CarrierFoup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_CarrierFoupAsync(string InXml) {
            this.Exe_CheckIn_CarrierFoupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_CarrierFoupAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_CarrierFoupOperationCompleted == null)) {
                this.Exe_CheckIn_CarrierFoupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_CarrierFoupOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_CarrierFoup", new object[] {
                        InXml}, this.Exe_CheckIn_CarrierFoupOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_CarrierFoupOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_CarrierFoupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_CarrierFoupCompleted(this, new Exe_CheckIn_CarrierFoupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_CarrierFoup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_CarrierFoup(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_CarrierFoup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarrierFoupAsync(string InXml) {
            this.Exe_CheckOut_CarrierFoupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarrierFoupAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_CarrierFoupOperationCompleted == null)) {
                this.Exe_CheckOut_CarrierFoupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_CarrierFoupOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_CarrierFoup", new object[] {
                        InXml}, this.Exe_CheckOut_CarrierFoupOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_CarrierFoupOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_CarrierFoupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_CarrierFoupCompleted(this, new Exe_CheckOut_CarrierFoupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Batch", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Batch(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Batch", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_BatchAsync(string InXml) {
            this.Exe_CheckOut_BatchAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_BatchAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_BatchOperationCompleted == null)) {
                this.Exe_CheckOut_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_BatchOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Batch", new object[] {
                        InXml}, this.Exe_CheckOut_BatchOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_BatchOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_BatchCompleted(this, new Exe_CheckOut_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CO_Epitaxy", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CO_Epitaxy(string InXml) {
            object[] results = this.Invoke("Exe_CO_Epitaxy", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CO_EpitaxyAsync(string InXml) {
            this.Exe_CO_EpitaxyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CO_EpitaxyAsync(string InXml, object userState) {
            if ((this.Exe_CO_EpitaxyOperationCompleted == null)) {
                this.Exe_CO_EpitaxyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CO_EpitaxyOperationCompleted);
            }
            this.InvokeAsync("Exe_CO_Epitaxy", new object[] {
                        InXml}, this.Exe_CO_EpitaxyOperationCompleted, userState);
        }
        
        private void OnExe_CO_EpitaxyOperationCompleted(object arg) {
            if ((this.Exe_CO_EpitaxyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CO_EpitaxyCompleted(this, new Exe_CO_EpitaxyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_Batch", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_Batch(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_Batch", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_BatchAsync(string InXml) {
            this.Exe_CheckIn_BatchAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_BatchAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_BatchOperationCompleted == null)) {
                this.Exe_CheckIn_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_BatchOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_Batch", new object[] {
                        InXml}, this.Exe_CheckIn_BatchOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_BatchOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_BatchCompleted(this, new Exe_CheckIn_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotState_Car", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotState_Car(string InXml) {
            object[] results = this.Invoke("LoadLotState_Car", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotState_CarAsync(string InXml) {
            this.LoadLotState_CarAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotState_CarAsync(string InXml, object userState) {
            if ((this.LoadLotState_CarOperationCompleted == null)) {
                this.LoadLotState_CarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotState_CarOperationCompleted);
            }
            this.InvokeAsync("LoadLotState_Car", new object[] {
                        InXml}, this.LoadLotState_CarOperationCompleted, userState);
        }
        
        private void OnLoadLotState_CarOperationCompleted(object arg) {
            if ((this.LoadLotState_CarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotState_CarCompleted(this, new LoadLotState_CarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Car", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Car(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Car", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarAsync(string InXml) {
            this.Exe_CheckOut_CarAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_CarOperationCompleted == null)) {
                this.Exe_CheckOut_CarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_CarOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Car", new object[] {
                        InXml}, this.Exe_CheckOut_CarOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_CarOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_CarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_CarCompleted(this, new Exe_CheckOut_CarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_CarRepair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_CarRepair(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_CarRepair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarRepairAsync(string InXml) {
            this.Exe_CheckOut_CarRepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarRepairAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_CarRepairOperationCompleted == null)) {
                this.Exe_CheckOut_CarRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_CarRepairOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_CarRepair", new object[] {
                        InXml}, this.Exe_CheckOut_CarRepairOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_CarRepairOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_CarRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_CarRepairCompleted(this, new Exe_CheckOut_CarRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasisAssembly", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasisAssembly(string InXml) {
            object[] results = this.Invoke("AddLotBasisAssembly", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasisAssemblyAsync(string InXml) {
            this.AddLotBasisAssemblyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasisAssemblyAsync(string InXml, object userState) {
            if ((this.AddLotBasisAssemblyOperationCompleted == null)) {
                this.AddLotBasisAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasisAssemblyOperationCompleted);
            }
            this.InvokeAsync("AddLotBasisAssembly", new object[] {
                        InXml}, this.AddLotBasisAssemblyOperationCompleted, userState);
        }
        
        private void OnAddLotBasisAssemblyOperationCompleted(object arg) {
            if ((this.AddLotBasisAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasisAssemblyCompleted(this, new AddLotBasisAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasisAssembly_Other", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasisAssembly_Other(string InXml) {
            object[] results = this.Invoke("AddLotBasisAssembly_Other", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasisAssembly_OtherAsync(string InXml) {
            this.AddLotBasisAssembly_OtherAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasisAssembly_OtherAsync(string InXml, object userState) {
            if ((this.AddLotBasisAssembly_OtherOperationCompleted == null)) {
                this.AddLotBasisAssembly_OtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasisAssembly_OtherOperationCompleted);
            }
            this.InvokeAsync("AddLotBasisAssembly_Other", new object[] {
                        InXml}, this.AddLotBasisAssembly_OtherOperationCompleted, userState);
        }
        
        private void OnAddLotBasisAssembly_OtherOperationCompleted(object arg) {
            if ((this.AddLotBasisAssembly_OtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasisAssembly_OtherCompleted(this, new AddLotBasisAssembly_OtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetERPInvNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetERPInvNo(string InXml) {
            object[] results = this.Invoke("GetERPInvNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetERPInvNoAsync(string InXml) {
            this.GetERPInvNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetERPInvNoAsync(string InXml, object userState) {
            if ((this.GetERPInvNoOperationCompleted == null)) {
                this.GetERPInvNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERPInvNoOperationCompleted);
            }
            this.InvokeAsync("GetERPInvNo", new object[] {
                        InXml}, this.GetERPInvNoOperationCompleted, userState);
        }
        
        private void OnGetERPInvNoOperationCompleted(object arg) {
            if ((this.GetERPInvNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERPInvNoCompleted(this, new GetERPInvNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetERPInvNo_SIC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetERPInvNo_SIC(string InXml) {
            object[] results = this.Invoke("GetERPInvNo_SIC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetERPInvNo_SICAsync(string InXml) {
            this.GetERPInvNo_SICAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetERPInvNo_SICAsync(string InXml, object userState) {
            if ((this.GetERPInvNo_SICOperationCompleted == null)) {
                this.GetERPInvNo_SICOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERPInvNo_SICOperationCompleted);
            }
            this.InvokeAsync("GetERPInvNo_SIC", new object[] {
                        InXml}, this.GetERPInvNo_SICOperationCompleted, userState);
        }
        
        private void OnGetERPInvNo_SICOperationCompleted(object arg) {
            if ((this.GetERPInvNo_SICCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERPInvNo_SICCompleted(this, new GetERPInvNo_SICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FGDToERP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FGDToERP(string InXml) {
            object[] results = this.Invoke("Exe_FGDToERP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FGDToERPAsync(string InXml) {
            this.Exe_FGDToERPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FGDToERPAsync(string InXml, object userState) {
            if ((this.Exe_FGDToERPOperationCompleted == null)) {
                this.Exe_FGDToERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FGDToERPOperationCompleted);
            }
            this.InvokeAsync("Exe_FGDToERP", new object[] {
                        InXml}, this.Exe_FGDToERPOperationCompleted, userState);
        }
        
        private void OnExe_FGDToERPOperationCompleted(object arg) {
            if ((this.Exe_FGDToERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FGDToERPCompleted(this, new Exe_FGDToERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ScrapToERP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ScrapToERP(string InXml) {
            object[] results = this.Invoke("Exe_ScrapToERP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ScrapToERPAsync(string InXml) {
            this.Exe_ScrapToERPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ScrapToERPAsync(string InXml, object userState) {
            if ((this.Exe_ScrapToERPOperationCompleted == null)) {
                this.Exe_ScrapToERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ScrapToERPOperationCompleted);
            }
            this.InvokeAsync("Exe_ScrapToERP", new object[] {
                        InXml}, this.Exe_ScrapToERPOperationCompleted, userState);
        }
        
        private void OnExe_ScrapToERPOperationCompleted(object arg) {
            if ((this.Exe_ScrapToERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ScrapToERPCompleted(this, new Exe_ScrapToERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_WIPToERP_SIC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_WIPToERP_SIC(string InXml) {
            object[] results = this.Invoke("Exe_WIPToERP_SIC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_WIPToERP_SICAsync(string InXml) {
            this.Exe_WIPToERP_SICAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_WIPToERP_SICAsync(string InXml, object userState) {
            if ((this.Exe_WIPToERP_SICOperationCompleted == null)) {
                this.Exe_WIPToERP_SICOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_WIPToERP_SICOperationCompleted);
            }
            this.InvokeAsync("Exe_WIPToERP_SIC", new object[] {
                        InXml}, this.Exe_WIPToERP_SICOperationCompleted, userState);
        }
        
        private void OnExe_WIPToERP_SICOperationCompleted(object arg) {
            if ((this.Exe_WIPToERP_SICCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_WIPToERP_SICCompleted(this, new Exe_WIPToERP_SICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Cassette_CI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Cassette_CI(string InXml) {
            object[] results = this.Invoke("Exe_Cassette_CI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Cassette_CIAsync(string InXml) {
            this.Exe_Cassette_CIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Cassette_CIAsync(string InXml, object userState) {
            if ((this.Exe_Cassette_CIOperationCompleted == null)) {
                this.Exe_Cassette_CIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Cassette_CIOperationCompleted);
            }
            this.InvokeAsync("Exe_Cassette_CI", new object[] {
                        InXml}, this.Exe_Cassette_CIOperationCompleted, userState);
        }
        
        private void OnExe_Cassette_CIOperationCompleted(object arg) {
            if ((this.Exe_Cassette_CICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Cassette_CICompleted(this, new Exe_Cassette_CICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Cassette_CO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Cassette_CO(string InXml) {
            object[] results = this.Invoke("Exe_Cassette_CO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Cassette_COAsync(string InXml) {
            this.Exe_Cassette_COAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Cassette_COAsync(string InXml, object userState) {
            if ((this.Exe_Cassette_COOperationCompleted == null)) {
                this.Exe_Cassette_COOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Cassette_COOperationCompleted);
            }
            this.InvokeAsync("Exe_Cassette_CO", new object[] {
                        InXml}, this.Exe_Cassette_COOperationCompleted, userState);
        }
        
        private void OnExe_Cassette_COOperationCompleted(object arg) {
            if ((this.Exe_Cassette_COCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Cassette_COCompleted(this, new Exe_Cassette_COCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCassetteJoinLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCassetteJoinLotState(string InXml) {
            object[] results = this.Invoke("LoadCassetteJoinLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCassetteJoinLotStateAsync(string InXml) {
            this.LoadCassetteJoinLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCassetteJoinLotStateAsync(string InXml, object userState) {
            if ((this.LoadCassetteJoinLotStateOperationCompleted == null)) {
                this.LoadCassetteJoinLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCassetteJoinLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadCassetteJoinLotState", new object[] {
                        InXml}, this.LoadCassetteJoinLotStateOperationCompleted, userState);
        }
        
        private void OnLoadCassetteJoinLotStateOperationCompleted(object arg) {
            if ((this.LoadCassetteJoinLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCassetteJoinLotStateCompleted(this, new LoadCassetteJoinLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRecipeByLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRecipeByLot(string InXml) {
            object[] results = this.Invoke("LoadRecipeByLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRecipeByLotAsync(string InXml) {
            this.LoadRecipeByLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRecipeByLotAsync(string InXml, object userState) {
            if ((this.LoadRecipeByLotOperationCompleted == null)) {
                this.LoadRecipeByLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRecipeByLotOperationCompleted);
            }
            this.InvokeAsync("LoadRecipeByLot", new object[] {
                        InXml}, this.LoadRecipeByLotOperationCompleted, userState);
        }
        
        private void OnLoadRecipeByLotOperationCompleted(object arg) {
            if ((this.LoadRecipeByLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRecipeByLotCompleted(this, new LoadRecipeByLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCassetteState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCassetteState(string InXml) {
            object[] results = this.Invoke("LoadCassetteState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCassetteStateAsync(string InXml) {
            this.LoadCassetteStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCassetteStateAsync(string InXml, object userState) {
            if ((this.LoadCassetteStateOperationCompleted == null)) {
                this.LoadCassetteStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCassetteStateOperationCompleted);
            }
            this.InvokeAsync("LoadCassetteState", new object[] {
                        InXml}, this.LoadCassetteStateOperationCompleted, userState);
        }
        
        private void OnLoadCassetteStateOperationCompleted(object arg) {
            if ((this.LoadCassetteStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCassetteStateCompleted(this, new LoadCassetteStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentState_MO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentState_MO(string InXml) {
            object[] results = this.Invoke("LoadComponentState_MO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentState_MOAsync(string InXml) {
            this.LoadComponentState_MOAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentState_MOAsync(string InXml, object userState) {
            if ((this.LoadComponentState_MOOperationCompleted == null)) {
                this.LoadComponentState_MOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentState_MOOperationCompleted);
            }
            this.InvokeAsync("LoadComponentState_MO", new object[] {
                        InXml}, this.LoadComponentState_MOOperationCompleted, userState);
        }
        
        private void OnLoadComponentState_MOOperationCompleted(object arg) {
            if ((this.LoadComponentState_MOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentState_MOCompleted(this, new LoadComponentState_MOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentJoinLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentJoinLotState(string InXml) {
            object[] results = this.Invoke("LoadComponentJoinLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentJoinLotStateAsync(string InXml) {
            this.LoadComponentJoinLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentJoinLotStateAsync(string InXml, object userState) {
            if ((this.LoadComponentJoinLotStateOperationCompleted == null)) {
                this.LoadComponentJoinLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentJoinLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadComponentJoinLotState", new object[] {
                        InXml}, this.LoadComponentJoinLotStateOperationCompleted, userState);
        }
        
        private void OnLoadComponentJoinLotStateOperationCompleted(object arg) {
            if ((this.LoadComponentJoinLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentJoinLotStateCompleted(this, new LoadComponentJoinLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_MaterialLotComp_JoinLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_MaterialLotComp_JoinLog(string InXml) {
            object[] results = this.Invoke("LoadCont_MaterialLotComp_JoinLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_MaterialLotComp_JoinLogAsync(string InXml) {
            this.LoadCont_MaterialLotComp_JoinLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_MaterialLotComp_JoinLogAsync(string InXml, object userState) {
            if ((this.LoadCont_MaterialLotComp_JoinLogOperationCompleted == null)) {
                this.LoadCont_MaterialLotComp_JoinLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_MaterialLotComp_JoinLogOperationCompleted);
            }
            this.InvokeAsync("LoadCont_MaterialLotComp_JoinLog", new object[] {
                        InXml}, this.LoadCont_MaterialLotComp_JoinLogOperationCompleted, userState);
        }
        
        private void OnLoadCont_MaterialLotComp_JoinLogOperationCompleted(object arg) {
            if ((this.LoadCont_MaterialLotComp_JoinLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_MaterialLotComp_JoinLogCompleted(this, new LoadCont_MaterialLotComp_JoinLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_TAN_CO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_TAN_CO(string InXml) {
            object[] results = this.Invoke("Exe_TAN_CO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_TAN_COAsync(string InXml) {
            this.Exe_TAN_COAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_TAN_COAsync(string InXml, object userState) {
            if ((this.Exe_TAN_COOperationCompleted == null)) {
                this.Exe_TAN_COOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_TAN_COOperationCompleted);
            }
            this.InvokeAsync("Exe_TAN_CO", new object[] {
                        InXml}, this.Exe_TAN_COOperationCompleted, userState);
        }
        
        private void OnExe_TAN_COOperationCompleted(object arg) {
            if ((this.Exe_TAN_COCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_TAN_COCompleted(this, new Exe_TAN_COCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SemiProduct", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SemiProduct(string InXml) {
            object[] results = this.Invoke("Exe_SemiProduct", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SemiProductAsync(string InXml) {
            this.Exe_SemiProductAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SemiProductAsync(string InXml, object userState) {
            if ((this.Exe_SemiProductOperationCompleted == null)) {
                this.Exe_SemiProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SemiProductOperationCompleted);
            }
            this.InvokeAsync("Exe_SemiProduct", new object[] {
                        InXml}, this.Exe_SemiProductOperationCompleted, userState);
        }
        
        private void OnExe_SemiProductOperationCompleted(object arg) {
            if ((this.Exe_SemiProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SemiProductCompleted(this, new Exe_SemiProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_First", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_First(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_First", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_FirstAsync(string InXml) {
            this.Exe_CheckOut_FirstAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_FirstAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_FirstOperationCompleted == null)) {
                this.Exe_CheckOut_FirstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_FirstOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_First", new object[] {
                        InXml}, this.Exe_CheckOut_FirstOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_FirstOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_FirstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_FirstCompleted(this, new Exe_CheckOut_FirstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SaveFile", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFile(string InXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bmp) {
            object[] results = this.Invoke("SaveFile", new object[] {
                        InXml,
                        bmp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFileAsync(string InXml, byte[] bmp) {
            this.SaveFileAsync(InXml, bmp, null);
        }
        
        /// <remarks/>
        public void SaveFileAsync(string InXml, byte[] bmp, object userState) {
            if ((this.SaveFileOperationCompleted == null)) {
                this.SaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileOperationCompleted);
            }
            this.InvokeAsync("SaveFile", new object[] {
                        InXml,
                        bmp}, this.SaveFileOperationCompleted, userState);
        }
        
        private void OnSaveFileOperationCompleted(object arg) {
            if ((this.SaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileCompleted(this, new SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ReRun_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReRun_Semi(string InXml) {
            object[] results = this.Invoke("ReRun_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReRun_SemiAsync(string InXml) {
            this.ReRun_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ReRun_SemiAsync(string InXml, object userState) {
            if ((this.ReRun_SemiOperationCompleted == null)) {
                this.ReRun_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReRun_SemiOperationCompleted);
            }
            this.InvokeAsync("ReRun_Semi", new object[] {
                        InXml}, this.ReRun_SemiOperationCompleted, userState);
        }
        
        private void OnReRun_SemiOperationCompleted(object arg) {
            if ((this.ReRun_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReRun_SemiCompleted(this, new ReRun_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ReRun_FailBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReRun_FailBin(string InXml) {
            object[] results = this.Invoke("ReRun_FailBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReRun_FailBinAsync(string InXml) {
            this.ReRun_FailBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ReRun_FailBinAsync(string InXml, object userState) {
            if ((this.ReRun_FailBinOperationCompleted == null)) {
                this.ReRun_FailBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReRun_FailBinOperationCompleted);
            }
            this.InvokeAsync("ReRun_FailBin", new object[] {
                        InXml}, this.ReRun_FailBinOperationCompleted, userState);
        }
        
        private void OnReRun_FailBinOperationCompleted(object arg) {
            if ((this.ReRun_FailBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReRun_FailBinCompleted(this, new ReRun_FailBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ReRun_Scrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReRun_Scrap(string InXml) {
            object[] results = this.Invoke("ReRun_Scrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReRun_ScrapAsync(string InXml) {
            this.ReRun_ScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ReRun_ScrapAsync(string InXml, object userState) {
            if ((this.ReRun_ScrapOperationCompleted == null)) {
                this.ReRun_ScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReRun_ScrapOperationCompleted);
            }
            this.InvokeAsync("ReRun_Scrap", new object[] {
                        InXml}, this.ReRun_ScrapOperationCompleted, userState);
        }
        
        private void OnReRun_ScrapOperationCompleted(object arg) {
            if ((this.ReRun_ScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReRun_ScrapCompleted(this, new ReRun_ScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_FailBinJoinLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_FailBinJoinLotBasis(string InXml) {
            object[] results = this.Invoke("LoadWIP_FailBinJoinLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_FailBinJoinLotBasisAsync(string InXml) {
            this.LoadWIP_FailBinJoinLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_FailBinJoinLotBasisAsync(string InXml, object userState) {
            if ((this.LoadWIP_FailBinJoinLotBasisOperationCompleted == null)) {
                this.LoadWIP_FailBinJoinLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_FailBinJoinLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_FailBinJoinLotBasis", new object[] {
                        InXml}, this.LoadWIP_FailBinJoinLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIP_FailBinJoinLotBasisOperationCompleted(object arg) {
            if ((this.LoadWIP_FailBinJoinLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_FailBinJoinLotBasisCompleted(this, new LoadWIP_FailBinJoinLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_ScrapJoinLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_ScrapJoinLotBasis(string InXml) {
            object[] results = this.Invoke("LoadWIP_ScrapJoinLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapJoinLotBasisAsync(string InXml) {
            this.LoadWIP_ScrapJoinLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapJoinLotBasisAsync(string InXml, object userState) {
            if ((this.LoadWIP_ScrapJoinLotBasisOperationCompleted == null)) {
                this.LoadWIP_ScrapJoinLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_ScrapJoinLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_ScrapJoinLotBasis", new object[] {
                        InXml}, this.LoadWIP_ScrapJoinLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIP_ScrapJoinLotBasisOperationCompleted(object arg) {
            if ((this.LoadWIP_ScrapJoinLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_ScrapJoinLotBasisCompleted(this, new LoadWIP_ScrapJoinLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasis_Tape", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasis_Tape(string InXml) {
            object[] results = this.Invoke("AddLotBasis_Tape", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasis_TapeAsync(string InXml) {
            this.AddLotBasis_TapeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasis_TapeAsync(string InXml, object userState) {
            if ((this.AddLotBasis_TapeOperationCompleted == null)) {
                this.AddLotBasis_TapeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasis_TapeOperationCompleted);
            }
            this.InvokeAsync("AddLotBasis_Tape", new object[] {
                        InXml}, this.AddLotBasis_TapeOperationCompleted, userState);
        }
        
        private void OnAddLotBasis_TapeOperationCompleted(object arg) {
            if ((this.AddLotBasis_TapeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasis_TapeCompleted(this, new AddLotBasis_TapeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotBasis_Tape", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotBasis_Tape(string InXml) {
            object[] results = this.Invoke("DelLotBasis_Tape", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotBasis_TapeAsync(string InXml) {
            this.DelLotBasis_TapeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotBasis_TapeAsync(string InXml, object userState) {
            if ((this.DelLotBasis_TapeOperationCompleted == null)) {
                this.DelLotBasis_TapeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotBasis_TapeOperationCompleted);
            }
            this.InvokeAsync("DelLotBasis_Tape", new object[] {
                        InXml}, this.DelLotBasis_TapeOperationCompleted, userState);
        }
        
        private void OnDelLotBasis_TapeOperationCompleted(object arg) {
            if ((this.DelLotBasis_TapeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotBasis_TapeCompleted(this, new DelLotBasis_TapeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ReleaseLotBasis_Tape", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReleaseLotBasis_Tape(string InXml) {
            object[] results = this.Invoke("ReleaseLotBasis_Tape", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseLotBasis_TapeAsync(string InXml) {
            this.ReleaseLotBasis_TapeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ReleaseLotBasis_TapeAsync(string InXml, object userState) {
            if ((this.ReleaseLotBasis_TapeOperationCompleted == null)) {
                this.ReleaseLotBasis_TapeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseLotBasis_TapeOperationCompleted);
            }
            this.InvokeAsync("ReleaseLotBasis_Tape", new object[] {
                        InXml}, this.ReleaseLotBasis_TapeOperationCompleted, userState);
        }
        
        private void OnReleaseLotBasis_TapeOperationCompleted(object arg) {
            if ((this.ReleaseLotBasis_TapeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseLotBasis_TapeCompleted(this, new ReleaseLotBasis_TapeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotBasisJoinPIDeatil", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotBasisJoinPIDeatil(string InXml) {
            object[] results = this.Invoke("LoadLotBasisJoinPIDeatil", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinPIDeatilAsync(string InXml) {
            this.LoadLotBasisJoinPIDeatilAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinPIDeatilAsync(string InXml, object userState) {
            if ((this.LoadLotBasisJoinPIDeatilOperationCompleted == null)) {
                this.LoadLotBasisJoinPIDeatilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotBasisJoinPIDeatilOperationCompleted);
            }
            this.InvokeAsync("LoadLotBasisJoinPIDeatil", new object[] {
                        InXml}, this.LoadLotBasisJoinPIDeatilOperationCompleted, userState);
        }
        
        private void OnLoadLotBasisJoinPIDeatilOperationCompleted(object arg) {
            if ((this.LoadLotBasisJoinPIDeatilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotBasisJoinPIDeatilCompleted(this, new LoadLotBasisJoinPIDeatilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Tape_CI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Tape_CI(string InXml) {
            object[] results = this.Invoke("Exe_Tape_CI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Tape_CIAsync(string InXml) {
            this.Exe_Tape_CIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Tape_CIAsync(string InXml, object userState) {
            if ((this.Exe_Tape_CIOperationCompleted == null)) {
                this.Exe_Tape_CIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Tape_CIOperationCompleted);
            }
            this.InvokeAsync("Exe_Tape_CI", new object[] {
                        InXml}, this.Exe_Tape_CIOperationCompleted, userState);
        }
        
        private void OnExe_Tape_CIOperationCompleted(object arg) {
            if ((this.Exe_Tape_CICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Tape_CICompleted(this, new Exe_Tape_CICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Tape_CO", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Tape_CO(string InXml) {
            object[] results = this.Invoke("Exe_Tape_CO", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Tape_COAsync(string InXml) {
            this.Exe_Tape_COAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Tape_COAsync(string InXml, object userState) {
            if ((this.Exe_Tape_COOperationCompleted == null)) {
                this.Exe_Tape_COOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Tape_COOperationCompleted);
            }
            this.InvokeAsync("Exe_Tape_CO", new object[] {
                        InXml}, this.Exe_Tape_COOperationCompleted, userState);
        }
        
        private void OnExe_Tape_COOperationCompleted(object arg) {
            if ((this.Exe_Tape_COCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Tape_COCompleted(this, new Exe_Tape_COCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Tape_ComponentSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Tape_ComponentSplit(string InXml) {
            object[] results = this.Invoke("Exe_Tape_ComponentSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Tape_ComponentSplitAsync(string InXml) {
            this.Exe_Tape_ComponentSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Tape_ComponentSplitAsync(string InXml, object userState) {
            if ((this.Exe_Tape_ComponentSplitOperationCompleted == null)) {
                this.Exe_Tape_ComponentSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Tape_ComponentSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_Tape_ComponentSplit", new object[] {
                        InXml}, this.Exe_Tape_ComponentSplitOperationCompleted, userState);
        }
        
        private void OnExe_Tape_ComponentSplitOperationCompleted(object arg) {
            if ((this.Exe_Tape_ComponentSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Tape_ComponentSplitCompleted(this, new Exe_Tape_ComponentSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadDefrostLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDefrostLog(string InXml) {
            object[] results = this.Invoke("LoadDefrostLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDefrostLogAsync(string InXml) {
            this.LoadDefrostLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadDefrostLogAsync(string InXml, object userState) {
            if ((this.LoadDefrostLogOperationCompleted == null)) {
                this.LoadDefrostLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDefrostLogOperationCompleted);
            }
            this.InvokeAsync("LoadDefrostLog", new object[] {
                        InXml}, this.LoadDefrostLogOperationCompleted, userState);
        }
        
        private void OnLoadDefrostLogOperationCompleted(object arg) {
            if ((this.LoadDefrostLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDefrostLogCompleted(this, new LoadDefrostLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddDefrostLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddDefrostLog(string InXml) {
            object[] results = this.Invoke("AddDefrostLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDefrostLogAsync(string InXml) {
            this.AddDefrostLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddDefrostLogAsync(string InXml, object userState) {
            if ((this.AddDefrostLogOperationCompleted == null)) {
                this.AddDefrostLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDefrostLogOperationCompleted);
            }
            this.InvokeAsync("AddDefrostLog", new object[] {
                        InXml}, this.AddDefrostLogOperationCompleted, userState);
        }
        
        private void OnAddDefrostLogOperationCompleted(object arg) {
            if ((this.AddDefrostLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDefrostLogCompleted(this, new AddDefrostLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditDefrostLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditDefrostLog(string InXml) {
            object[] results = this.Invoke("EditDefrostLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDefrostLogAsync(string InXml) {
            this.EditDefrostLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditDefrostLogAsync(string InXml, object userState) {
            if ((this.EditDefrostLogOperationCompleted == null)) {
                this.EditDefrostLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDefrostLogOperationCompleted);
            }
            this.InvokeAsync("EditDefrostLog", new object[] {
                        InXml}, this.EditDefrostLogOperationCompleted, userState);
        }
        
        private void OnEditDefrostLogOperationCompleted(object arg) {
            if ((this.EditDefrostLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDefrostLogCompleted(this, new EditDefrostLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelDefrostLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelDefrostLog(string InXml) {
            object[] results = this.Invoke("DelDefrostLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelDefrostLogAsync(string InXml) {
            this.DelDefrostLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelDefrostLogAsync(string InXml, object userState) {
            if ((this.DelDefrostLogOperationCompleted == null)) {
                this.DelDefrostLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelDefrostLogOperationCompleted);
            }
            this.InvokeAsync("DelDefrostLog", new object[] {
                        InXml}, this.DelDefrostLogOperationCompleted, userState);
        }
        
        private void OnDelDefrostLogOperationCompleted(object arg) {
            if ((this.DelDefrostLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelDefrostLogCompleted(this, new DelDefrostLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadDefrostEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDefrostEquipment(string InXml) {
            object[] results = this.Invoke("LoadDefrostEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDefrostEquipmentAsync(string InXml) {
            this.LoadDefrostEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadDefrostEquipmentAsync(string InXml, object userState) {
            if ((this.LoadDefrostEquipmentOperationCompleted == null)) {
                this.LoadDefrostEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDefrostEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadDefrostEquipment", new object[] {
                        InXml}, this.LoadDefrostEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadDefrostEquipmentOperationCompleted(object arg) {
            if ((this.LoadDefrostEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDefrostEquipmentCompleted(this, new LoadDefrostEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExePIDefrost", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExePIDefrost(string InXml) {
            object[] results = this.Invoke("ExePIDefrost", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExePIDefrostAsync(string InXml) {
            this.ExePIDefrostAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExePIDefrostAsync(string InXml, object userState) {
            if ((this.ExePIDefrostOperationCompleted == null)) {
                this.ExePIDefrostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExePIDefrostOperationCompleted);
            }
            this.InvokeAsync("ExePIDefrost", new object[] {
                        InXml}, this.ExePIDefrostOperationCompleted, userState);
        }
        
        private void OnExePIDefrostOperationCompleted(object arg) {
            if ((this.ExePIDefrostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExePIDefrostCompleted(this, new ExePIDefrostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_TAB_ECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_TAB_ECNBasis(string InXml) {
            object[] results = this.Invoke("Load_TAB_ECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_TAB_ECNBasisAsync(string InXml) {
            this.Load_TAB_ECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_TAB_ECNBasisAsync(string InXml, object userState) {
            if ((this.Load_TAB_ECNBasisOperationCompleted == null)) {
                this.Load_TAB_ECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_TAB_ECNBasisOperationCompleted);
            }
            this.InvokeAsync("Load_TAB_ECNBasis", new object[] {
                        InXml}, this.Load_TAB_ECNBasisOperationCompleted, userState);
        }
        
        private void OnLoad_TAB_ECNBasisOperationCompleted(object arg) {
            if ((this.Load_TAB_ECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_TAB_ECNBasisCompleted(this, new Load_TAB_ECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_TAB_ECNBasisJoinDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_TAB_ECNBasisJoinDetail(string InXml) {
            object[] results = this.Invoke("Load_TAB_ECNBasisJoinDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_TAB_ECNBasisJoinDetailAsync(string InXml) {
            this.Load_TAB_ECNBasisJoinDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_TAB_ECNBasisJoinDetailAsync(string InXml, object userState) {
            if ((this.Load_TAB_ECNBasisJoinDetailOperationCompleted == null)) {
                this.Load_TAB_ECNBasisJoinDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_TAB_ECNBasisJoinDetailOperationCompleted);
            }
            this.InvokeAsync("Load_TAB_ECNBasisJoinDetail", new object[] {
                        InXml}, this.Load_TAB_ECNBasisJoinDetailOperationCompleted, userState);
        }
        
        private void OnLoad_TAB_ECNBasisJoinDetailOperationCompleted(object arg) {
            if ((this.Load_TAB_ECNBasisJoinDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_TAB_ECNBasisJoinDetailCompleted(this, new Load_TAB_ECNBasisJoinDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Del_TAB_ECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Del_TAB_ECNBasis(string InXml) {
            object[] results = this.Invoke("Del_TAB_ECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Del_TAB_ECNBasisAsync(string InXml) {
            this.Del_TAB_ECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Del_TAB_ECNBasisAsync(string InXml, object userState) {
            if ((this.Del_TAB_ECNBasisOperationCompleted == null)) {
                this.Del_TAB_ECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDel_TAB_ECNBasisOperationCompleted);
            }
            this.InvokeAsync("Del_TAB_ECNBasis", new object[] {
                        InXml}, this.Del_TAB_ECNBasisOperationCompleted, userState);
        }
        
        private void OnDel_TAB_ECNBasisOperationCompleted(object arg) {
            if ((this.Del_TAB_ECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Del_TAB_ECNBasisCompleted(this, new Del_TAB_ECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Add_TAB_ECNBasisWDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Add_TAB_ECNBasisWDetail(string InXml) {
            object[] results = this.Invoke("Add_TAB_ECNBasisWDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Add_TAB_ECNBasisWDetailAsync(string InXml) {
            this.Add_TAB_ECNBasisWDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Add_TAB_ECNBasisWDetailAsync(string InXml, object userState) {
            if ((this.Add_TAB_ECNBasisWDetailOperationCompleted == null)) {
                this.Add_TAB_ECNBasisWDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdd_TAB_ECNBasisWDetailOperationCompleted);
            }
            this.InvokeAsync("Add_TAB_ECNBasisWDetail", new object[] {
                        InXml}, this.Add_TAB_ECNBasisWDetailOperationCompleted, userState);
        }
        
        private void OnAdd_TAB_ECNBasisWDetailOperationCompleted(object arg) {
            if ((this.Add_TAB_ECNBasisWDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Add_TAB_ECNBasisWDetailCompleted(this, new Add_TAB_ECNBasisWDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Edit_TAB_ECNBasisWDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Edit_TAB_ECNBasisWDetail(string InXml) {
            object[] results = this.Invoke("Edit_TAB_ECNBasisWDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Edit_TAB_ECNBasisWDetailAsync(string InXml) {
            this.Edit_TAB_ECNBasisWDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Edit_TAB_ECNBasisWDetailAsync(string InXml, object userState) {
            if ((this.Edit_TAB_ECNBasisWDetailOperationCompleted == null)) {
                this.Edit_TAB_ECNBasisWDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_TAB_ECNBasisWDetailOperationCompleted);
            }
            this.InvokeAsync("Edit_TAB_ECNBasisWDetail", new object[] {
                        InXml}, this.Edit_TAB_ECNBasisWDetailOperationCompleted, userState);
        }
        
        private void OnEdit_TAB_ECNBasisWDetailOperationCompleted(object arg) {
            if ((this.Edit_TAB_ECNBasisWDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_TAB_ECNBasisWDetailCompleted(this, new Edit_TAB_ECNBasisWDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UPD_TAB_ECNConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UPD_TAB_ECNConfirm(string InXml) {
            object[] results = this.Invoke("UPD_TAB_ECNConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UPD_TAB_ECNConfirmAsync(string InXml) {
            this.UPD_TAB_ECNConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UPD_TAB_ECNConfirmAsync(string InXml, object userState) {
            if ((this.UPD_TAB_ECNConfirmOperationCompleted == null)) {
                this.UPD_TAB_ECNConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPD_TAB_ECNConfirmOperationCompleted);
            }
            this.InvokeAsync("UPD_TAB_ECNConfirm", new object[] {
                        InXml}, this.UPD_TAB_ECNConfirmOperationCompleted, userState);
        }
        
        private void OnUPD_TAB_ECNConfirmOperationCompleted(object arg) {
            if ((this.UPD_TAB_ECNConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPD_TAB_ECNConfirmCompleted(this, new UPD_TAB_ECNConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UPD_TAB_ECNRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UPD_TAB_ECNRelease(string InXml) {
            object[] results = this.Invoke("UPD_TAB_ECNRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UPD_TAB_ECNReleaseAsync(string InXml) {
            this.UPD_TAB_ECNReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UPD_TAB_ECNReleaseAsync(string InXml, object userState) {
            if ((this.UPD_TAB_ECNReleaseOperationCompleted == null)) {
                this.UPD_TAB_ECNReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPD_TAB_ECNReleaseOperationCompleted);
            }
            this.InvokeAsync("UPD_TAB_ECNRelease", new object[] {
                        InXml}, this.UPD_TAB_ECNReleaseOperationCompleted, userState);
        }
        
        private void OnUPD_TAB_ECNReleaseOperationCompleted(object arg) {
            if ((this.UPD_TAB_ECNReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPD_TAB_ECNReleaseCompleted(this, new UPD_TAB_ECNReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Del_TAB_ECNLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Del_TAB_ECNLot(string InXml) {
            object[] results = this.Invoke("Del_TAB_ECNLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Del_TAB_ECNLotAsync(string InXml) {
            this.Del_TAB_ECNLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Del_TAB_ECNLotAsync(string InXml, object userState) {
            if ((this.Del_TAB_ECNLotOperationCompleted == null)) {
                this.Del_TAB_ECNLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDel_TAB_ECNLotOperationCompleted);
            }
            this.InvokeAsync("Del_TAB_ECNLot", new object[] {
                        InXml}, this.Del_TAB_ECNLotOperationCompleted, userState);
        }
        
        private void OnDel_TAB_ECNLotOperationCompleted(object arg) {
            if ((this.Del_TAB_ECNLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Del_TAB_ECNLotCompleted(this, new Del_TAB_ECNLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_TAB_LotBasisJoinState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_TAB_LotBasisJoinState(string InXml) {
            object[] results = this.Invoke("Load_TAB_LotBasisJoinState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_TAB_LotBasisJoinStateAsync(string InXml) {
            this.Load_TAB_LotBasisJoinStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_TAB_LotBasisJoinStateAsync(string InXml, object userState) {
            if ((this.Load_TAB_LotBasisJoinStateOperationCompleted == null)) {
                this.Load_TAB_LotBasisJoinStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_TAB_LotBasisJoinStateOperationCompleted);
            }
            this.InvokeAsync("Load_TAB_LotBasisJoinState", new object[] {
                        InXml}, this.Load_TAB_LotBasisJoinStateOperationCompleted, userState);
        }
        
        private void OnLoad_TAB_LotBasisJoinStateOperationCompleted(object arg) {
            if ((this.Load_TAB_LotBasisJoinStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_TAB_LotBasisJoinStateCompleted(this, new Load_TAB_LotBasisJoinStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_TAB_PackingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_TAB_PackingBasis(string InXml) {
            object[] results = this.Invoke("Load_TAB_PackingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_TAB_PackingBasisAsync(string InXml) {
            this.Load_TAB_PackingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_TAB_PackingBasisAsync(string InXml, object userState) {
            if ((this.Load_TAB_PackingBasisOperationCompleted == null)) {
                this.Load_TAB_PackingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_TAB_PackingBasisOperationCompleted);
            }
            this.InvokeAsync("Load_TAB_PackingBasis", new object[] {
                        InXml}, this.Load_TAB_PackingBasisOperationCompleted, userState);
        }
        
        private void OnLoad_TAB_PackingBasisOperationCompleted(object arg) {
            if ((this.Load_TAB_PackingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_TAB_PackingBasisCompleted(this, new Load_TAB_PackingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_TAB_PackingDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_TAB_PackingDetail(string InXml) {
            object[] results = this.Invoke("Load_TAB_PackingDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_TAB_PackingDetailAsync(string InXml) {
            this.Load_TAB_PackingDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_TAB_PackingDetailAsync(string InXml, object userState) {
            if ((this.Load_TAB_PackingDetailOperationCompleted == null)) {
                this.Load_TAB_PackingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_TAB_PackingDetailOperationCompleted);
            }
            this.InvokeAsync("Load_TAB_PackingDetail", new object[] {
                        InXml}, this.Load_TAB_PackingDetailOperationCompleted, userState);
        }
        
        private void OnLoad_TAB_PackingDetailOperationCompleted(object arg) {
            if ((this.Load_TAB_PackingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_TAB_PackingDetailCompleted(this, new Load_TAB_PackingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotsofSamePIID", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotsofSamePIID(string InXml) {
            object[] results = this.Invoke("LoadLotsofSamePIID", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotsofSamePIIDAsync(string InXml) {
            this.LoadLotsofSamePIIDAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotsofSamePIIDAsync(string InXml, object userState) {
            if ((this.LoadLotsofSamePIIDOperationCompleted == null)) {
                this.LoadLotsofSamePIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotsofSamePIIDOperationCompleted);
            }
            this.InvokeAsync("LoadLotsofSamePIID", new object[] {
                        InXml}, this.LoadLotsofSamePIIDOperationCompleted, userState);
        }
        
        private void OnLoadLotsofSamePIIDOperationCompleted(object arg) {
            if ((this.LoadLotsofSamePIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotsofSamePIIDCompleted(this, new LoadLotsofSamePIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetAccessoryLifeCount", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessoryLifeCount(string InXml) {
            object[] results = this.Invoke("GetAccessoryLifeCount", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessoryLifeCountAsync(string InXml) {
            this.GetAccessoryLifeCountAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetAccessoryLifeCountAsync(string InXml, object userState) {
            if ((this.GetAccessoryLifeCountOperationCompleted == null)) {
                this.GetAccessoryLifeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessoryLifeCountOperationCompleted);
            }
            this.InvokeAsync("GetAccessoryLifeCount", new object[] {
                        InXml}, this.GetAccessoryLifeCountOperationCompleted, userState);
        }
        
        private void OnGetAccessoryLifeCountOperationCompleted(object arg) {
            if ((this.GetAccessoryLifeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessoryLifeCountCompleted(this, new GetAccessoryLifeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasis_Unit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasis_Unit(string InXml) {
            object[] results = this.Invoke("AddLotBasis_Unit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasis_UnitAsync(string InXml) {
            this.AddLotBasis_UnitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasis_UnitAsync(string InXml, object userState) {
            if ((this.AddLotBasis_UnitOperationCompleted == null)) {
                this.AddLotBasis_UnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasis_UnitOperationCompleted);
            }
            this.InvokeAsync("AddLotBasis_Unit", new object[] {
                        InXml}, this.AddLotBasis_UnitOperationCompleted, userState);
        }
        
        private void OnAddLotBasis_UnitOperationCompleted(object arg) {
            if ((this.AddLotBasis_UnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasis_UnitCompleted(this, new AddLotBasis_UnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasis_Batch", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasis_Batch(string InXml) {
            object[] results = this.Invoke("AddLotBasis_Batch", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasis_BatchAsync(string InXml) {
            this.AddLotBasis_BatchAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasis_BatchAsync(string InXml, object userState) {
            if ((this.AddLotBasis_BatchOperationCompleted == null)) {
                this.AddLotBasis_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasis_BatchOperationCompleted);
            }
            this.InvokeAsync("AddLotBasis_Batch", new object[] {
                        InXml}, this.AddLotBasis_BatchOperationCompleted, userState);
        }
        
        private void OnAddLotBasis_BatchOperationCompleted(object arg) {
            if ((this.AddLotBasis_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasis_BatchCompleted(this, new AddLotBasis_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_AbnormalCollect", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_AbnormalCollect(string InXml) {
            object[] results = this.Invoke("Exe_Unit_AbnormalCollect", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_AbnormalCollectAsync(string InXml) {
            this.Exe_Unit_AbnormalCollectAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_AbnormalCollectAsync(string InXml, object userState) {
            if ((this.Exe_Unit_AbnormalCollectOperationCompleted == null)) {
                this.Exe_Unit_AbnormalCollectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_AbnormalCollectOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_AbnormalCollect", new object[] {
                        InXml}, this.Exe_Unit_AbnormalCollectOperationCompleted, userState);
        }
        
        private void OnExe_Unit_AbnormalCollectOperationCompleted(object arg) {
            if ((this.Exe_Unit_AbnormalCollectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_AbnormalCollectCompleted(this, new Exe_Unit_AbnormalCollectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_COMaterial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_COMaterial(string InXml) {
            object[] results = this.Invoke("Exe_Unit_COMaterial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_COMaterialAsync(string InXml) {
            this.Exe_Unit_COMaterialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_COMaterialAsync(string InXml, object userState) {
            if ((this.Exe_Unit_COMaterialOperationCompleted == null)) {
                this.Exe_Unit_COMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_COMaterialOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_COMaterial", new object[] {
                        InXml}, this.Exe_Unit_COMaterialOperationCompleted, userState);
        }
        
        private void OnExe_Unit_COMaterialOperationCompleted(object arg) {
            if ((this.Exe_Unit_COMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_COMaterialCompleted(this, new Exe_Unit_COMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_BatchCI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_BatchCI(string InXml) {
            object[] results = this.Invoke("Exe_Unit_BatchCI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_BatchCIAsync(string InXml) {
            this.Exe_Unit_BatchCIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_BatchCIAsync(string InXml, object userState) {
            if ((this.Exe_Unit_BatchCIOperationCompleted == null)) {
                this.Exe_Unit_BatchCIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_BatchCIOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_BatchCI", new object[] {
                        InXml}, this.Exe_Unit_BatchCIOperationCompleted, userState);
        }
        
        private void OnExe_Unit_BatchCIOperationCompleted(object arg) {
            if ((this.Exe_Unit_BatchCICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_BatchCICompleted(this, new Exe_Unit_BatchCICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_QCBank", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_QCBank(string InXml) {
            object[] results = this.Invoke("Exe_Unit_QCBank", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_QCBankAsync(string InXml) {
            this.Exe_Unit_QCBankAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_QCBankAsync(string InXml, object userState) {
            if ((this.Exe_Unit_QCBankOperationCompleted == null)) {
                this.Exe_Unit_QCBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_QCBankOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_QCBank", new object[] {
                        InXml}, this.Exe_Unit_QCBankOperationCompleted, userState);
        }
        
        private void OnExe_Unit_QCBankOperationCompleted(object arg) {
            if ((this.Exe_Unit_QCBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_QCBankCompleted(this, new Exe_Unit_QCBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_BatchScrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_BatchScrap(string InXml) {
            object[] results = this.Invoke("Exe_Unit_BatchScrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_BatchScrapAsync(string InXml) {
            this.Exe_Unit_BatchScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_BatchScrapAsync(string InXml, object userState) {
            if ((this.Exe_Unit_BatchScrapOperationCompleted == null)) {
                this.Exe_Unit_BatchScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_BatchScrapOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_BatchScrap", new object[] {
                        InXml}, this.Exe_Unit_BatchScrapOperationCompleted, userState);
        }
        
        private void OnExe_Unit_BatchScrapOperationCompleted(object arg) {
            if ((this.Exe_Unit_BatchScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_BatchScrapCompleted(this, new Exe_Unit_BatchScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_CIRepair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_CIRepair(string InXml) {
            object[] results = this.Invoke("Exe_Unit_CIRepair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_CIRepairAsync(string InXml) {
            this.Exe_Unit_CIRepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_CIRepairAsync(string InXml, object userState) {
            if ((this.Exe_Unit_CIRepairOperationCompleted == null)) {
                this.Exe_Unit_CIRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_CIRepairOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_CIRepair", new object[] {
                        InXml}, this.Exe_Unit_CIRepairOperationCompleted, userState);
        }
        
        private void OnExe_Unit_CIRepairOperationCompleted(object arg) {
            if ((this.Exe_Unit_CIRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_CIRepairCompleted(this, new Exe_Unit_CIRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Unit_CORepair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Unit_CORepair(string InXml) {
            object[] results = this.Invoke("Exe_Unit_CORepair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Unit_CORepairAsync(string InXml) {
            this.Exe_Unit_CORepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Unit_CORepairAsync(string InXml, object userState) {
            if ((this.Exe_Unit_CORepairOperationCompleted == null)) {
                this.Exe_Unit_CORepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Unit_CORepairOperationCompleted);
            }
            this.InvokeAsync("Exe_Unit_CORepair", new object[] {
                        InXml}, this.Exe_Unit_CORepairOperationCompleted, userState);
        }
        
        private void OnExe_Unit_CORepairOperationCompleted(object arg) {
            if ((this.Exe_Unit_CORepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Unit_CORepairCompleted(this, new Exe_Unit_CORepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/InitBoxNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitBoxNo(string InXml) {
            object[] results = this.Invoke("InitBoxNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitBoxNoAsync(string InXml) {
            this.InitBoxNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void InitBoxNoAsync(string InXml, object userState) {
            if ((this.InitBoxNoOperationCompleted == null)) {
                this.InitBoxNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitBoxNoOperationCompleted);
            }
            this.InvokeAsync("InitBoxNo", new object[] {
                        InXml}, this.InitBoxNoOperationCompleted, userState);
        }
        
        private void OnInitBoxNoOperationCompleted(object arg) {
            if ((this.InitBoxNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitBoxNoCompleted(this, new InitBoxNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_Unit_Cont_CI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_Unit_Cont_CI(string InXml) {
            object[] results = this.Invoke("Load_Unit_Cont_CI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_Unit_Cont_CIAsync(string InXml) {
            this.Load_Unit_Cont_CIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_Unit_Cont_CIAsync(string InXml, object userState) {
            if ((this.Load_Unit_Cont_CIOperationCompleted == null)) {
                this.Load_Unit_Cont_CIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_Unit_Cont_CIOperationCompleted);
            }
            this.InvokeAsync("Load_Unit_Cont_CI", new object[] {
                        InXml}, this.Load_Unit_Cont_CIOperationCompleted, userState);
        }
        
        private void OnLoad_Unit_Cont_CIOperationCompleted(object arg) {
            if ((this.Load_Unit_Cont_CICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_Unit_Cont_CICompleted(this, new Load_Unit_Cont_CICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_Unit_QCBankRejectLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_Unit_QCBankRejectLot(string InXml) {
            object[] results = this.Invoke("Load_Unit_QCBankRejectLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankRejectLotAsync(string InXml) {
            this.Load_Unit_QCBankRejectLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankRejectLotAsync(string InXml, object userState) {
            if ((this.Load_Unit_QCBankRejectLotOperationCompleted == null)) {
                this.Load_Unit_QCBankRejectLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_Unit_QCBankRejectLotOperationCompleted);
            }
            this.InvokeAsync("Load_Unit_QCBankRejectLot", new object[] {
                        InXml}, this.Load_Unit_QCBankRejectLotOperationCompleted, userState);
        }
        
        private void OnLoad_Unit_QCBankRejectLotOperationCompleted(object arg) {
            if ((this.Load_Unit_QCBankRejectLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_Unit_QCBankRejectLotCompleted(this, new Load_Unit_QCBankRejectLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_Unit_QCBank", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_Unit_QCBank(string InXml) {
            object[] results = this.Invoke("Load_Unit_QCBank", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankAsync(string InXml) {
            this.Load_Unit_QCBankAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankAsync(string InXml, object userState) {
            if ((this.Load_Unit_QCBankOperationCompleted == null)) {
                this.Load_Unit_QCBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_Unit_QCBankOperationCompleted);
            }
            this.InvokeAsync("Load_Unit_QCBank", new object[] {
                        InXml}, this.Load_Unit_QCBankOperationCompleted, userState);
        }
        
        private void OnLoad_Unit_QCBankOperationCompleted(object arg) {
            if ((this.Load_Unit_QCBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_Unit_QCBankCompleted(this, new Load_Unit_QCBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Load_Unit_QCBankDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load_Unit_QCBankDetail(string InXml) {
            object[] results = this.Invoke("Load_Unit_QCBankDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankDetailAsync(string InXml) {
            this.Load_Unit_QCBankDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Load_Unit_QCBankDetailAsync(string InXml, object userState) {
            if ((this.Load_Unit_QCBankDetailOperationCompleted == null)) {
                this.Load_Unit_QCBankDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoad_Unit_QCBankDetailOperationCompleted);
            }
            this.InvokeAsync("Load_Unit_QCBankDetail", new object[] {
                        InXml}, this.Load_Unit_QCBankDetailOperationCompleted, userState);
        }
        
        private void OnLoad_Unit_QCBankDetailOperationCompleted(object arg) {
            if ((this.Load_Unit_QCBankDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Load_Unit_QCBankDetailCompleted(this, new Load_Unit_QCBankDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/CloseLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseLot(string InXml) {
            object[] results = this.Invoke("CloseLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseLotAsync(string InXml) {
            this.CloseLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void CloseLotAsync(string InXml, object userState) {
            if ((this.CloseLotOperationCompleted == null)) {
                this.CloseLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseLotOperationCompleted);
            }
            this.InvokeAsync("CloseLot", new object[] {
                        InXml}, this.CloseLotOperationCompleted, userState);
        }
        
        private void OnCloseLotOperationCompleted(object arg) {
            if ((this.CloseLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseLotCompleted(this, new CloseLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotQtyAdjust", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotQtyAdjust(string InXml) {
            object[] results = this.Invoke("Exe_LotQtyAdjust", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjustAsync(string InXml) {
            this.Exe_LotQtyAdjustAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjustAsync(string InXml, object userState) {
            if ((this.Exe_LotQtyAdjustOperationCompleted == null)) {
                this.Exe_LotQtyAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotQtyAdjustOperationCompleted);
            }
            this.InvokeAsync("Exe_LotQtyAdjust", new object[] {
                        InXml}, this.Exe_LotQtyAdjustOperationCompleted, userState);
        }
        
        private void OnExe_LotQtyAdjustOperationCompleted(object arg) {
            if ((this.Exe_LotQtyAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotQtyAdjustCompleted(this, new Exe_LotQtyAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotQtyAdjust_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotQtyAdjust_Bin(string InXml) {
            object[] results = this.Invoke("Exe_LotQtyAdjust_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjust_BinAsync(string InXml) {
            this.Exe_LotQtyAdjust_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjust_BinAsync(string InXml, object userState) {
            if ((this.Exe_LotQtyAdjust_BinOperationCompleted == null)) {
                this.Exe_LotQtyAdjust_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotQtyAdjust_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_LotQtyAdjust_Bin", new object[] {
                        InXml}, this.Exe_LotQtyAdjust_BinOperationCompleted, userState);
        }
        
        private void OnExe_LotQtyAdjust_BinOperationCompleted(object arg) {
            if ((this.Exe_LotQtyAdjust_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotQtyAdjust_BinCompleted(this, new Exe_LotQtyAdjust_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotQtyAdjust_Comp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotQtyAdjust_Comp(string InXml) {
            object[] results = this.Invoke("Exe_LotQtyAdjust_Comp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjust_CompAsync(string InXml) {
            this.Exe_LotQtyAdjust_CompAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotQtyAdjust_CompAsync(string InXml, object userState) {
            if ((this.Exe_LotQtyAdjust_CompOperationCompleted == null)) {
                this.Exe_LotQtyAdjust_CompOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotQtyAdjust_CompOperationCompleted);
            }
            this.InvokeAsync("Exe_LotQtyAdjust_Comp", new object[] {
                        InXml}, this.Exe_LotQtyAdjust_CompOperationCompleted, userState);
        }
        
        private void OnExe_LotQtyAdjust_CompOperationCompleted(object arg) {
            if ((this.Exe_LotQtyAdjust_CompCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotQtyAdjust_CompCompleted(this, new Exe_LotQtyAdjust_CompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_QtyAdjustLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_QtyAdjustLog(string InXml) {
            object[] results = this.Invoke("Exe_ERF_QtyAdjustLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_QtyAdjustLogAsync(string InXml) {
            this.Exe_ERF_QtyAdjustLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_QtyAdjustLogAsync(string InXml, object userState) {
            if ((this.Exe_ERF_QtyAdjustLogOperationCompleted == null)) {
                this.Exe_ERF_QtyAdjustLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_QtyAdjustLogOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_QtyAdjustLog", new object[] {
                        InXml}, this.Exe_ERF_QtyAdjustLogOperationCompleted, userState);
        }
        
        private void OnExe_ERF_QtyAdjustLogOperationCompleted(object arg) {
            if ((this.Exe_ERF_QtyAdjustLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_QtyAdjustLogCompleted(this, new Exe_ERF_QtyAdjustLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERF_AttachFile", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERF_AttachFile(string InXml) {
            object[] results = this.Invoke("LoadERF_AttachFile", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERF_AttachFileAsync(string InXml) {
            this.LoadERF_AttachFileAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERF_AttachFileAsync(string InXml, object userState) {
            if ((this.LoadERF_AttachFileOperationCompleted == null)) {
                this.LoadERF_AttachFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERF_AttachFileOperationCompleted);
            }
            this.InvokeAsync("LoadERF_AttachFile", new object[] {
                        InXml}, this.LoadERF_AttachFileOperationCompleted, userState);
        }
        
        private void OnLoadERF_AttachFileOperationCompleted(object arg) {
            if ((this.LoadERF_AttachFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERF_AttachFileCompleted(this, new LoadERF_AttachFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddERF_AttachFile", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddERF_AttachFile(string InXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] AttachBody) {
            object[] results = this.Invoke("AddERF_AttachFile", new object[] {
                        InXml,
                        AttachBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddERF_AttachFileAsync(string InXml, byte[] AttachBody) {
            this.AddERF_AttachFileAsync(InXml, AttachBody, null);
        }
        
        /// <remarks/>
        public void AddERF_AttachFileAsync(string InXml, byte[] AttachBody, object userState) {
            if ((this.AddERF_AttachFileOperationCompleted == null)) {
                this.AddERF_AttachFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddERF_AttachFileOperationCompleted);
            }
            this.InvokeAsync("AddERF_AttachFile", new object[] {
                        InXml,
                        AttachBody}, this.AddERF_AttachFileOperationCompleted, userState);
        }
        
        private void OnAddERF_AttachFileOperationCompleted(object arg) {
            if ((this.AddERF_AttachFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddERF_AttachFileCompleted(this, new AddERF_AttachFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelERF_AttachFile", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelERF_AttachFile(string InXml) {
            object[] results = this.Invoke("DelERF_AttachFile", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelERF_AttachFileAsync(string InXml) {
            this.DelERF_AttachFileAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelERF_AttachFileAsync(string InXml, object userState) {
            if ((this.DelERF_AttachFileOperationCompleted == null)) {
                this.DelERF_AttachFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelERF_AttachFileOperationCompleted);
            }
            this.InvokeAsync("DelERF_AttachFile", new object[] {
                        InXml}, this.DelERF_AttachFileOperationCompleted, userState);
        }
        
        private void OnDelERF_AttachFileOperationCompleted(object arg) {
            if ((this.DelERF_AttachFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelERF_AttachFileCompleted(this, new DelERF_AttachFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetERF_AttachFile", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetERF_AttachFile(string InXml) {
            object[] results = this.Invoke("GetERF_AttachFile", new object[] {
                        InXml});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetERF_AttachFileAsync(string InXml) {
            this.GetERF_AttachFileAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetERF_AttachFileAsync(string InXml, object userState) {
            if ((this.GetERF_AttachFileOperationCompleted == null)) {
                this.GetERF_AttachFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERF_AttachFileOperationCompleted);
            }
            this.InvokeAsync("GetERF_AttachFile", new object[] {
                        InXml}, this.GetERF_AttachFileOperationCompleted, userState);
        }
        
        private void OnGetERF_AttachFileOperationCompleted(object arg) {
            if ((this.GetERF_AttachFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERF_AttachFileCompleted(this, new GetERF_AttachFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Material_JoinLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Material_JoinLot(string InXml) {
            object[] results = this.Invoke("LoadCont_Material_JoinLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_Material_JoinLotAsync(string InXml) {
            this.LoadCont_Material_JoinLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_Material_JoinLotAsync(string InXml, object userState) {
            if ((this.LoadCont_Material_JoinLotOperationCompleted == null)) {
                this.LoadCont_Material_JoinLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_Material_JoinLotOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Material_JoinLot", new object[] {
                        InXml}, this.LoadCont_Material_JoinLotOperationCompleted, userState);
        }
        
        private void OnLoadCont_Material_JoinLotOperationCompleted(object arg) {
            if ((this.LoadCont_Material_JoinLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_Material_JoinLotCompleted(this, new LoadCont_Material_JoinLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Error", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Error(string InXml) {
            object[] results = this.Invoke("LoadCont_Error", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_ErrorAsync(string InXml) {
            this.LoadCont_ErrorAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_ErrorAsync(string InXml, object userState) {
            if ((this.LoadCont_ErrorOperationCompleted == null)) {
                this.LoadCont_ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_ErrorOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Error", new object[] {
                        InXml}, this.LoadCont_ErrorOperationCompleted, userState);
        }
        
        private void OnLoadCont_ErrorOperationCompleted(object arg) {
            if ((this.LoadCont_ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_ErrorCompleted(this, new LoadCont_ErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Error_JoinQCReason", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Error_JoinQCReason(string InXml) {
            object[] results = this.Invoke("LoadCont_Error_JoinQCReason", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_Error_JoinQCReasonAsync(string InXml) {
            this.LoadCont_Error_JoinQCReasonAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_Error_JoinQCReasonAsync(string InXml, object userState) {
            if ((this.LoadCont_Error_JoinQCReasonOperationCompleted == null)) {
                this.LoadCont_Error_JoinQCReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_Error_JoinQCReasonOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Error_JoinQCReason", new object[] {
                        InXml}, this.LoadCont_Error_JoinQCReasonOperationCompleted, userState);
        }
        
        private void OnLoadCont_Error_JoinQCReasonOperationCompleted(object arg) {
            if ((this.LoadCont_Error_JoinQCReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_Error_JoinQCReasonCompleted(this, new LoadCont_Error_JoinQCReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSplitContent", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSplitContent(string InXml) {
            object[] results = this.Invoke("LoadSplitContent", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSplitContentAsync(string InXml) {
            this.LoadSplitContentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSplitContentAsync(string InXml, object userState) {
            if ((this.LoadSplitContentOperationCompleted == null)) {
                this.LoadSplitContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSplitContentOperationCompleted);
            }
            this.InvokeAsync("LoadSplitContent", new object[] {
                        InXml}, this.LoadSplitContentOperationCompleted, userState);
        }
        
        private void OnLoadSplitContentOperationCompleted(object arg) {
            if ((this.LoadSplitContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSplitContentCompleted(this, new LoadSplitContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMergeContent", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMergeContent(string InXml) {
            object[] results = this.Invoke("LoadMergeContent", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMergeContentAsync(string InXml) {
            this.LoadMergeContentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMergeContentAsync(string InXml, object userState) {
            if ((this.LoadMergeContentOperationCompleted == null)) {
                this.LoadMergeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMergeContentOperationCompleted);
            }
            this.InvokeAsync("LoadMergeContent", new object[] {
                        InXml}, this.LoadMergeContentOperationCompleted, userState);
        }
        
        private void OnLoadMergeContentOperationCompleted(object arg) {
            if ((this.LoadMergeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMergeContentCompleted(this, new LoadMergeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Data", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Data(string InXml) {
            object[] results = this.Invoke("LoadCont_Data", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_DataAsync(string InXml) {
            this.LoadCont_DataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_DataAsync(string InXml, object userState) {
            if ((this.LoadCont_DataOperationCompleted == null)) {
                this.LoadCont_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_DataOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Data", new object[] {
                        InXml}, this.LoadCont_DataOperationCompleted, userState);
        }
        
        private void OnLoadCont_DataOperationCompleted(object arg) {
            if ((this.LoadCont_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_DataCompleted(this, new LoadCont_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_ComponentAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_ComponentAttrib(string InXml) {
            object[] results = this.Invoke("LoadCont_ComponentAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_ComponentAttribAsync(string InXml) {
            this.LoadCont_ComponentAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_ComponentAttribAsync(string InXml, object userState) {
            if ((this.LoadCont_ComponentAttribOperationCompleted == null)) {
                this.LoadCont_ComponentAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_ComponentAttribOperationCompleted);
            }
            this.InvokeAsync("LoadCont_ComponentAttrib", new object[] {
                        InXml}, this.LoadCont_ComponentAttribOperationCompleted, userState);
        }
        
        private void OnLoadCont_ComponentAttribOperationCompleted(object arg) {
            if ((this.LoadCont_ComponentAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_ComponentAttribCompleted(this, new LoadCont_ComponentAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingListBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingListBasis(string InXml) {
            object[] results = this.Invoke("LoadPackingListBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingListBasisAsync(string InXml) {
            this.LoadPackingListBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingListBasisAsync(string InXml, object userState) {
            if ((this.LoadPackingListBasisOperationCompleted == null)) {
                this.LoadPackingListBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingListBasisOperationCompleted);
            }
            this.InvokeAsync("LoadPackingListBasis", new object[] {
                        InXml}, this.LoadPackingListBasisOperationCompleted, userState);
        }
        
        private void OnLoadPackingListBasisOperationCompleted(object arg) {
            if ((this.LoadPackingListBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingListBasisCompleted(this, new LoadPackingListBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingList_General", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingList_General(string InXml) {
            object[] results = this.Invoke("LoadPackingList_General", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingList_GeneralAsync(string InXml) {
            this.LoadPackingList_GeneralAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingList_GeneralAsync(string InXml, object userState) {
            if ((this.LoadPackingList_GeneralOperationCompleted == null)) {
                this.LoadPackingList_GeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingList_GeneralOperationCompleted);
            }
            this.InvokeAsync("LoadPackingList_General", new object[] {
                        InXml}, this.LoadPackingList_GeneralOperationCompleted, userState);
        }
        
        private void OnLoadPackingList_GeneralOperationCompleted(object arg) {
            if ((this.LoadPackingList_GeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingList_GeneralCompleted(this, new LoadPackingList_GeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingList_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingList_Component(string InXml) {
            object[] results = this.Invoke("LoadPackingList_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingList_ComponentAsync(string InXml) {
            this.LoadPackingList_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingList_ComponentAsync(string InXml, object userState) {
            if ((this.LoadPackingList_ComponentOperationCompleted == null)) {
                this.LoadPackingList_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingList_ComponentOperationCompleted);
            }
            this.InvokeAsync("LoadPackingList_Component", new object[] {
                        InXml}, this.LoadPackingList_ComponentOperationCompleted, userState);
        }
        
        private void OnLoadPackingList_ComponentOperationCompleted(object arg) {
            if ((this.LoadPackingList_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingList_ComponentCompleted(this, new LoadPackingList_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPack_CompQtyByLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPack_CompQtyByLot(string InXml) {
            object[] results = this.Invoke("LoadPack_CompQtyByLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPack_CompQtyByLotAsync(string InXml) {
            this.LoadPack_CompQtyByLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPack_CompQtyByLotAsync(string InXml, object userState) {
            if ((this.LoadPack_CompQtyByLotOperationCompleted == null)) {
                this.LoadPack_CompQtyByLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPack_CompQtyByLotOperationCompleted);
            }
            this.InvokeAsync("LoadPack_CompQtyByLot", new object[] {
                        InXml}, this.LoadPack_CompQtyByLotOperationCompleted, userState);
        }
        
        private void OnLoadPack_CompQtyByLotOperationCompleted(object arg) {
            if ((this.LoadPack_CompQtyByLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPack_CompQtyByLotCompleted(this, new LoadPack_CompQtyByLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPack_BinQtyByLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPack_BinQtyByLot(string InXml) {
            object[] results = this.Invoke("LoadPack_BinQtyByLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPack_BinQtyByLotAsync(string InXml) {
            this.LoadPack_BinQtyByLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPack_BinQtyByLotAsync(string InXml, object userState) {
            if ((this.LoadPack_BinQtyByLotOperationCompleted == null)) {
                this.LoadPack_BinQtyByLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPack_BinQtyByLotOperationCompleted);
            }
            this.InvokeAsync("LoadPack_BinQtyByLot", new object[] {
                        InXml}, this.LoadPack_BinQtyByLotOperationCompleted, userState);
        }
        
        private void OnLoadPack_BinQtyByLotOperationCompleted(object arg) {
            if ((this.LoadPack_BinQtyByLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPack_BinQtyByLotCompleted(this, new LoadPack_BinQtyByLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingList_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingList_Bin(string InXml) {
            object[] results = this.Invoke("LoadPackingList_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingList_BinAsync(string InXml) {
            this.LoadPackingList_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingList_BinAsync(string InXml, object userState) {
            if ((this.LoadPackingList_BinOperationCompleted == null)) {
                this.LoadPackingList_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingList_BinOperationCompleted);
            }
            this.InvokeAsync("LoadPackingList_Bin", new object[] {
                        InXml}, this.LoadPackingList_BinOperationCompleted, userState);
        }
        
        private void OnLoadPackingList_BinOperationCompleted(object arg) {
            if ((this.LoadPackingList_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingList_BinCompleted(this, new LoadPackingList_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelPackingListBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelPackingListBasis(string InXml) {
            object[] results = this.Invoke("DelPackingListBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelPackingListBasisAsync(string InXml) {
            this.DelPackingListBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelPackingListBasisAsync(string InXml, object userState) {
            if ((this.DelPackingListBasisOperationCompleted == null)) {
                this.DelPackingListBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelPackingListBasisOperationCompleted);
            }
            this.InvokeAsync("DelPackingListBasis", new object[] {
                        InXml}, this.DelPackingListBasisOperationCompleted, userState);
        }
        
        private void OnDelPackingListBasisOperationCompleted(object arg) {
            if ((this.DelPackingListBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelPackingListBasisCompleted(this, new DelPackingListBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdPackingList_Confirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdPackingList_Confirm(string InXml) {
            object[] results = this.Invoke("UpdPackingList_Confirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPackingList_ConfirmAsync(string InXml) {
            this.UpdPackingList_ConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdPackingList_ConfirmAsync(string InXml, object userState) {
            if ((this.UpdPackingList_ConfirmOperationCompleted == null)) {
                this.UpdPackingList_ConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPackingList_ConfirmOperationCompleted);
            }
            this.InvokeAsync("UpdPackingList_Confirm", new object[] {
                        InXml}, this.UpdPackingList_ConfirmOperationCompleted, userState);
        }
        
        private void OnUpdPackingList_ConfirmOperationCompleted(object arg) {
            if ((this.UpdPackingList_ConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPackingList_ConfirmCompleted(this, new UpdPackingList_ConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdAddPackingList", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdAddPackingList(string InXml) {
            object[] results = this.Invoke("UpdAddPackingList", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdAddPackingListAsync(string InXml) {
            this.UpdAddPackingListAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdAddPackingListAsync(string InXml, object userState) {
            if ((this.UpdAddPackingListOperationCompleted == null)) {
                this.UpdAddPackingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdAddPackingListOperationCompleted);
            }
            this.InvokeAsync("UpdAddPackingList", new object[] {
                        InXml}, this.UpdAddPackingListOperationCompleted, userState);
        }
        
        private void OnUpdAddPackingListOperationCompleted(object arg) {
            if ((this.UpdAddPackingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdAddPackingListCompleted(this, new UpdAddPackingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdEditPackingList", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdEditPackingList(string InXml) {
            object[] results = this.Invoke("UpdEditPackingList", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdEditPackingListAsync(string InXml) {
            this.UpdEditPackingListAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdEditPackingListAsync(string InXml, object userState) {
            if ((this.UpdEditPackingListOperationCompleted == null)) {
                this.UpdEditPackingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdEditPackingListOperationCompleted);
            }
            this.InvokeAsync("UpdEditPackingList", new object[] {
                        InXml}, this.UpdEditPackingListOperationCompleted, userState);
        }
        
        private void OnUpdEditPackingListOperationCompleted(object arg) {
            if ((this.UpdEditPackingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdEditPackingListCompleted(this, new UpdEditPackingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadShippingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadShippingBasis(string InXml) {
            object[] results = this.Invoke("LoadShippingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadShippingBasisAsync(string InXml) {
            this.LoadShippingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadShippingBasisAsync(string InXml, object userState) {
            if ((this.LoadShippingBasisOperationCompleted == null)) {
                this.LoadShippingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadShippingBasisOperationCompleted);
            }
            this.InvokeAsync("LoadShippingBasis", new object[] {
                        InXml}, this.LoadShippingBasisOperationCompleted, userState);
        }
        
        private void OnLoadShippingBasisOperationCompleted(object arg) {
            if ((this.LoadShippingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadShippingBasisCompleted(this, new LoadShippingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadShippingPackingListJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadShippingPackingListJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadShippingPackingListJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadShippingPackingListJoinBasisAsync(string InXml) {
            this.LoadShippingPackingListJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadShippingPackingListJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadShippingPackingListJoinBasisOperationCompleted == null)) {
                this.LoadShippingPackingListJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadShippingPackingListJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadShippingPackingListJoinBasis", new object[] {
                        InXml}, this.LoadShippingPackingListJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadShippingPackingListJoinBasisOperationCompleted(object arg) {
            if ((this.LoadShippingPackingListJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadShippingPackingListJoinBasisCompleted(this, new LoadShippingPackingListJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelShippingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelShippingBasis(string InXml) {
            object[] results = this.Invoke("DelShippingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelShippingBasisAsync(string InXml) {
            this.DelShippingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelShippingBasisAsync(string InXml, object userState) {
            if ((this.DelShippingBasisOperationCompleted == null)) {
                this.DelShippingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelShippingBasisOperationCompleted);
            }
            this.InvokeAsync("DelShippingBasis", new object[] {
                        InXml}, this.DelShippingBasisOperationCompleted, userState);
        }
        
        private void OnDelShippingBasisOperationCompleted(object arg) {
            if ((this.DelShippingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelShippingBasisCompleted(this, new DelShippingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Shipping", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Shipping(string InXml) {
            object[] results = this.Invoke("Exe_Shipping", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ShippingAsync(string InXml) {
            this.Exe_ShippingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ShippingAsync(string InXml, object userState) {
            if ((this.Exe_ShippingOperationCompleted == null)) {
                this.Exe_ShippingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ShippingOperationCompleted);
            }
            this.InvokeAsync("Exe_Shipping", new object[] {
                        InXml}, this.Exe_ShippingOperationCompleted, userState);
        }
        
        private void OnExe_ShippingOperationCompleted(object arg) {
            if ((this.Exe_ShippingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ShippingCompleted(this, new Exe_ShippingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReturnBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReturnBasis(string InXml) {
            object[] results = this.Invoke("LoadReturnBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReturnBasisAsync(string InXml) {
            this.LoadReturnBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReturnBasisAsync(string InXml, object userState) {
            if ((this.LoadReturnBasisOperationCompleted == null)) {
                this.LoadReturnBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReturnBasisOperationCompleted);
            }
            this.InvokeAsync("LoadReturnBasis", new object[] {
                        InXml}, this.LoadReturnBasisOperationCompleted, userState);
        }
        
        private void OnLoadReturnBasisOperationCompleted(object arg) {
            if ((this.LoadReturnBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReturnBasisCompleted(this, new LoadReturnBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReturnComponentJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReturnComponentJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadReturnComponentJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReturnComponentJoinBasisAsync(string InXml) {
            this.LoadReturnComponentJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReturnComponentJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadReturnComponentJoinBasisOperationCompleted == null)) {
                this.LoadReturnComponentJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReturnComponentJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadReturnComponentJoinBasis", new object[] {
                        InXml}, this.LoadReturnComponentJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadReturnComponentJoinBasisOperationCompleted(object arg) {
            if ((this.LoadReturnComponentJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReturnComponentJoinBasisCompleted(this, new LoadReturnComponentJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReturnBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReturnBasis(string InXml) {
            object[] results = this.Invoke("DelReturnBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReturnBasisAsync(string InXml) {
            this.DelReturnBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReturnBasisAsync(string InXml, object userState) {
            if ((this.DelReturnBasisOperationCompleted == null)) {
                this.DelReturnBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReturnBasisOperationCompleted);
            }
            this.InvokeAsync("DelReturnBasis", new object[] {
                        InXml}, this.DelReturnBasisOperationCompleted, userState);
        }
        
        private void OnDelReturnBasisOperationCompleted(object arg) {
            if ((this.DelReturnBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReturnBasisCompleted(this, new DelReturnBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdReturn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdReturn(string InXml) {
            object[] results = this.Invoke("UpdReturn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdReturnAsync(string InXml) {
            this.UpdReturnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdReturnAsync(string InXml, object userState) {
            if ((this.UpdReturnOperationCompleted == null)) {
                this.UpdReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdReturnOperationCompleted);
            }
            this.InvokeAsync("UpdReturn", new object[] {
                        InXml}, this.UpdReturnOperationCompleted, userState);
        }
        
        private void OnUpdReturnOperationCompleted(object arg) {
            if ((this.UpdReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdReturnCompleted(this, new UpdReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_InvIncomingRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_InvIncomingRelease(string InXml) {
            object[] results = this.Invoke("Exe_InvIncomingRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_InvIncomingReleaseAsync(string InXml) {
            this.Exe_InvIncomingReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_InvIncomingReleaseAsync(string InXml, object userState) {
            if ((this.Exe_InvIncomingReleaseOperationCompleted == null)) {
                this.Exe_InvIncomingReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_InvIncomingReleaseOperationCompleted);
            }
            this.InvokeAsync("Exe_InvIncomingRelease", new object[] {
                        InXml}, this.Exe_InvIncomingReleaseOperationCompleted, userState);
        }
        
        private void OnExe_InvIncomingReleaseOperationCompleted(object arg) {
            if ((this.Exe_InvIncomingReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_InvIncomingReleaseCompleted(this, new Exe_InvIncomingReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdShipping", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdShipping(string InXml) {
            object[] results = this.Invoke("UpdShipping", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdShippingAsync(string InXml) {
            this.UpdShippingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdShippingAsync(string InXml, object userState) {
            if ((this.UpdShippingOperationCompleted == null)) {
                this.UpdShippingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdShippingOperationCompleted);
            }
            this.InvokeAsync("UpdShipping", new object[] {
                        InXml}, this.UpdShippingOperationCompleted, userState);
        }
        
        private void OnUpdShippingOperationCompleted(object arg) {
            if ((this.UpdShippingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdShippingCompleted(this, new UpdShippingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAbnormalState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAbnormalState(string InXml) {
            object[] results = this.Invoke("LoadAbnormalState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAbnormalStateAsync(string InXml) {
            this.LoadAbnormalStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAbnormalStateAsync(string InXml, object userState) {
            if ((this.LoadAbnormalStateOperationCompleted == null)) {
                this.LoadAbnormalStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAbnormalStateOperationCompleted);
            }
            this.InvokeAsync("LoadAbnormalState", new object[] {
                        InXml}, this.LoadAbnormalStateOperationCompleted, userState);
        }
        
        private void OnLoadAbnormalStateOperationCompleted(object arg) {
            if ((this.LoadAbnormalStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAbnormalStateCompleted(this, new LoadAbnormalStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAbnormalStateJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAbnormalStateJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadAbnormalStateJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAbnormalStateJoinBasisAsync(string InXml) {
            this.LoadAbnormalStateJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAbnormalStateJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadAbnormalStateJoinBasisOperationCompleted == null)) {
                this.LoadAbnormalStateJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAbnormalStateJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadAbnormalStateJoinBasis", new object[] {
                        InXml}, this.LoadAbnormalStateJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadAbnormalStateJoinBasisOperationCompleted(object arg) {
            if ((this.LoadAbnormalStateJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAbnormalStateJoinBasisCompleted(this, new LoadAbnormalStateJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingBasis(string InXml) {
            object[] results = this.Invoke("LoadPackingBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingBasisAsync(string InXml) {
            this.LoadPackingBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingBasisAsync(string InXml, object userState) {
            if ((this.LoadPackingBasisOperationCompleted == null)) {
                this.LoadPackingBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingBasisOperationCompleted);
            }
            this.InvokeAsync("LoadPackingBasis", new object[] {
                        InXml}, this.LoadPackingBasisOperationCompleted, userState);
        }
        
        private void OnLoadPackingBasisOperationCompleted(object arg) {
            if ((this.LoadPackingBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingBasisCompleted(this, new LoadPackingBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPackingBoxDetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPackingBoxDetail(string InXml) {
            object[] results = this.Invoke("LoadPackingBoxDetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackingBoxDetailAsync(string InXml) {
            this.LoadPackingBoxDetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPackingBoxDetailAsync(string InXml, object userState) {
            if ((this.LoadPackingBoxDetailOperationCompleted == null)) {
                this.LoadPackingBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackingBoxDetailOperationCompleted);
            }
            this.InvokeAsync("LoadPackingBoxDetail", new object[] {
                        InXml}, this.LoadPackingBoxDetailOperationCompleted, userState);
        }
        
        private void OnLoadPackingBoxDetailOperationCompleted(object arg) {
            if ((this.LoadPackingBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackingBoxDetailCompleted(this, new LoadPackingBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdIPQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdIPQC(string InXml) {
            object[] results = this.Invoke("UpdIPQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdIPQCAsync(string InXml) {
            this.UpdIPQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdIPQCAsync(string InXml, object userState) {
            if ((this.UpdIPQCOperationCompleted == null)) {
                this.UpdIPQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdIPQCOperationCompleted);
            }
            this.InvokeAsync("UpdIPQC", new object[] {
                        InXml}, this.UpdIPQCOperationCompleted, userState);
        }
        
        private void OnUpdIPQCOperationCompleted(object arg) {
            if ((this.UpdIPQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdIPQCCompleted(this, new UpdIPQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableMask", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableMask(string InXml) {
            object[] results = this.Invoke("LoadAvailableMask", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableMaskAsync(string InXml) {
            this.LoadAvailableMaskAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableMaskAsync(string InXml, object userState) {
            if ((this.LoadAvailableMaskOperationCompleted == null)) {
                this.LoadAvailableMaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableMaskOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableMask", new object[] {
                        InXml}, this.LoadAvailableMaskOperationCompleted, userState);
        }
        
        private void OnLoadAvailableMaskOperationCompleted(object arg) {
            if ((this.LoadAvailableMaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableMaskCompleted(this, new LoadAvailableMaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRecipeContent", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRecipeContent(string InXml) {
            object[] results = this.Invoke("LoadRecipeContent", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRecipeContentAsync(string InXml) {
            this.LoadRecipeContentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRecipeContentAsync(string InXml, object userState) {
            if ((this.LoadRecipeContentOperationCompleted == null)) {
                this.LoadRecipeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRecipeContentOperationCompleted);
            }
            this.InvokeAsync("LoadRecipeContent", new object[] {
                        InXml}, this.LoadRecipeContentOperationCompleted, userState);
        }
        
        private void OnLoadRecipeContentOperationCompleted(object arg) {
            if ((this.LoadRecipeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRecipeContentCompleted(this, new LoadRecipeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelReleasedLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelReleasedLot(string InXml) {
            object[] results = this.Invoke("DelReleasedLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelReleasedLotAsync(string InXml) {
            this.DelReleasedLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelReleasedLotAsync(string InXml, object userState) {
            if ((this.DelReleasedLotOperationCompleted == null)) {
                this.DelReleasedLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelReleasedLotOperationCompleted);
            }
            this.InvokeAsync("DelReleasedLot", new object[] {
                        InXml}, this.DelReleasedLotOperationCompleted, userState);
        }
        
        private void OnDelReleasedLotOperationCompleted(object arg) {
            if ((this.DelReleasedLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelReleasedLotCompleted(this, new DelReleasedLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableCarrierLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableCarrierLot(string InXml) {
            object[] results = this.Invoke("LoadAvailableCarrierLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableCarrierLotAsync(string InXml) {
            this.LoadAvailableCarrierLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableCarrierLotAsync(string InXml, object userState) {
            if ((this.LoadAvailableCarrierLotOperationCompleted == null)) {
                this.LoadAvailableCarrierLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableCarrierLotOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableCarrierLot", new object[] {
                        InXml}, this.LoadAvailableCarrierLotOperationCompleted, userState);
        }
        
        private void OnLoadAvailableCarrierLotOperationCompleted(object arg) {
            if ((this.LoadAvailableCarrierLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableCarrierLotCompleted(this, new LoadAvailableCarrierLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_AttribFormula", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_AttribFormula(string InXml) {
            object[] results = this.Invoke("Exe_AttribFormula", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_AttribFormulaAsync(string InXml) {
            this.Exe_AttribFormulaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_AttribFormulaAsync(string InXml, object userState) {
            if ((this.Exe_AttribFormulaOperationCompleted == null)) {
                this.Exe_AttribFormulaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_AttribFormulaOperationCompleted);
            }
            this.InvokeAsync("Exe_AttribFormula", new object[] {
                        InXml}, this.Exe_AttribFormulaOperationCompleted, userState);
        }
        
        private void OnExe_AttribFormulaOperationCompleted(object arg) {
            if ((this.Exe_AttribFormulaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_AttribFormulaCompleted(this, new Exe_AttribFormulaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentProperty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentProperty(string InXml) {
            object[] results = this.Invoke("LoadComponentProperty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentPropertyAsync(string InXml) {
            this.LoadComponentPropertyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentPropertyAsync(string InXml, object userState) {
            if ((this.LoadComponentPropertyOperationCompleted == null)) {
                this.LoadComponentPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentPropertyOperationCompleted);
            }
            this.InvokeAsync("LoadComponentProperty", new object[] {
                        InXml}, this.LoadComponentPropertyOperationCompleted, userState);
        }
        
        private void OnLoadComponentPropertyOperationCompleted(object arg) {
            if ((this.LoadComponentPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentPropertyCompleted(this, new LoadComponentPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentPropertyByLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentPropertyByLotNo(string InXml) {
            object[] results = this.Invoke("LoadComponentPropertyByLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentPropertyByLotNoAsync(string InXml) {
            this.LoadComponentPropertyByLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentPropertyByLotNoAsync(string InXml, object userState) {
            if ((this.LoadComponentPropertyByLotNoOperationCompleted == null)) {
                this.LoadComponentPropertyByLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentPropertyByLotNoOperationCompleted);
            }
            this.InvokeAsync("LoadComponentPropertyByLotNo", new object[] {
                        InXml}, this.LoadComponentPropertyByLotNoOperationCompleted, userState);
        }
        
        private void OnLoadComponentPropertyByLotNoOperationCompleted(object arg) {
            if ((this.LoadComponentPropertyByLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentPropertyByLotNoCompleted(this, new LoadComponentPropertyByLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetLotPropertyValue", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotPropertyValue(string InXml) {
            object[] results = this.Invoke("GetLotPropertyValue", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotPropertyValueAsync(string InXml) {
            this.GetLotPropertyValueAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetLotPropertyValueAsync(string InXml, object userState) {
            if ((this.GetLotPropertyValueOperationCompleted == null)) {
                this.GetLotPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotPropertyValueOperationCompleted);
            }
            this.InvokeAsync("GetLotPropertyValue", new object[] {
                        InXml}, this.GetLotPropertyValueOperationCompleted, userState);
        }
        
        private void OnGetLotPropertyValueOperationCompleted(object arg) {
            if ((this.GetLotPropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotPropertyValueCompleted(this, new GetLotPropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOPGroupState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOPGroupState(string InXml) {
            object[] results = this.Invoke("LoadOPGroupState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOPGroupStateAsync(string InXml) {
            this.LoadOPGroupStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOPGroupStateAsync(string InXml, object userState) {
            if ((this.LoadOPGroupStateOperationCompleted == null)) {
                this.LoadOPGroupStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOPGroupStateOperationCompleted);
            }
            this.InvokeAsync("LoadOPGroupState", new object[] {
                        InXml}, this.LoadOPGroupStateOperationCompleted, userState);
        }
        
        private void OnLoadOPGroupStateOperationCompleted(object arg) {
            if ((this.LoadOPGroupStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOPGroupStateCompleted(this, new LoadOPGroupStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetBaseLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBaseLotNo(string InXml) {
            object[] results = this.Invoke("GetBaseLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBaseLotNoAsync(string InXml) {
            this.GetBaseLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetBaseLotNoAsync(string InXml, object userState) {
            if ((this.GetBaseLotNoOperationCompleted == null)) {
                this.GetBaseLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaseLotNoOperationCompleted);
            }
            this.InvokeAsync("GetBaseLotNo", new object[] {
                        InXml}, this.GetBaseLotNoOperationCompleted, userState);
        }
        
        private void OnGetBaseLotNoOperationCompleted(object arg) {
            if ((this.GetBaseLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaseLotNoCompleted(this, new GetBaseLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotNo(string InXml) {
            object[] results = this.Invoke("GetLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotNoAsync(string InXml) {
            this.GetLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetLotNoAsync(string InXml, object userState) {
            if ((this.GetLotNoOperationCompleted == null)) {
                this.GetLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotNoOperationCompleted);
            }
            this.InvokeAsync("GetLotNo", new object[] {
                        InXml}, this.GetLotNoOperationCompleted, userState);
        }
        
        private void OnGetLotNoOperationCompleted(object arg) {
            if ((this.GetLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotNoCompleted(this, new GetLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMaxLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxLotNo(string InXml) {
            object[] results = this.Invoke("GetMaxLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxLotNoAsync(string InXml) {
            this.GetMaxLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMaxLotNoAsync(string InXml, object userState) {
            if ((this.GetMaxLotNoOperationCompleted == null)) {
                this.GetMaxLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxLotNoOperationCompleted);
            }
            this.InvokeAsync("GetMaxLotNo", new object[] {
                        InXml}, this.GetMaxLotNoOperationCompleted, userState);
        }
        
        private void OnGetMaxLotNoOperationCompleted(object arg) {
            if ((this.GetMaxLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxLotNoCompleted(this, new GetMaxLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetERFNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetERFNo(string InXml) {
            object[] results = this.Invoke("GetERFNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetERFNoAsync(string InXml) {
            this.GetERFNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetERFNoAsync(string InXml, object userState) {
            if ((this.GetERFNoOperationCompleted == null)) {
                this.GetERFNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERFNoOperationCompleted);
            }
            this.InvokeAsync("GetERFNo", new object[] {
                        InXml}, this.GetERFNoOperationCompleted, userState);
        }
        
        private void OnGetERFNoOperationCompleted(object arg) {
            if ((this.GetERFNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERFNoCompleted(this, new GetERFNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetShippingLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShippingLotNo(string InXml) {
            object[] results = this.Invoke("GetShippingLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShippingLotNoAsync(string InXml) {
            this.GetShippingLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetShippingLotNoAsync(string InXml, object userState) {
            if ((this.GetShippingLotNoOperationCompleted == null)) {
                this.GetShippingLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShippingLotNoOperationCompleted);
            }
            this.InvokeAsync("GetShippingLotNo", new object[] {
                        InXml}, this.GetShippingLotNoOperationCompleted, userState);
        }
        
        private void OnGetShippingLotNoOperationCompleted(object arg) {
            if ((this.GetShippingLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShippingLotNoCompleted(this, new GetShippingLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetRcvNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRcvNo(string InXml) {
            object[] results = this.Invoke("GetRcvNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRcvNoAsync(string InXml) {
            this.GetRcvNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetRcvNoAsync(string InXml, object userState) {
            if ((this.GetRcvNoOperationCompleted == null)) {
                this.GetRcvNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRcvNoOperationCompleted);
            }
            this.InvokeAsync("GetRcvNo", new object[] {
                        InXml}, this.GetRcvNoOperationCompleted, userState);
        }
        
        private void OnGetRcvNoOperationCompleted(object arg) {
            if ((this.GetRcvNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRcvNoCompleted(this, new GetRcvNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetCustomerLotNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerLotNo(string InXml) {
            object[] results = this.Invoke("GetCustomerLotNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerLotNoAsync(string InXml) {
            this.GetCustomerLotNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetCustomerLotNoAsync(string InXml, object userState) {
            if ((this.GetCustomerLotNoOperationCompleted == null)) {
                this.GetCustomerLotNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerLotNoOperationCompleted);
            }
            this.InvokeAsync("GetCustomerLotNo", new object[] {
                        InXml}, this.GetCustomerLotNoOperationCompleted, userState);
        }
        
        private void OnGetCustomerLotNoOperationCompleted(object arg) {
            if ((this.GetCustomerLotNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerLotNoCompleted(this, new GetCustomerLotNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetLotOPDescription", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotOPDescription(string InXml) {
            object[] results = this.Invoke("GetLotOPDescription", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotOPDescriptionAsync(string InXml) {
            this.GetLotOPDescriptionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetLotOPDescriptionAsync(string InXml, object userState) {
            if ((this.GetLotOPDescriptionOperationCompleted == null)) {
                this.GetLotOPDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotOPDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetLotOPDescription", new object[] {
                        InXml}, this.GetLotOPDescriptionOperationCompleted, userState);
        }
        
        private void OnGetLotOPDescriptionOperationCompleted(object arg) {
            if ((this.GetLotOPDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotOPDescriptionCompleted(this, new GetLotOPDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRunCardData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRunCardData(string InXml) {
            object[] results = this.Invoke("LoadRunCardData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRunCardDataAsync(string InXml) {
            this.LoadRunCardDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRunCardDataAsync(string InXml, object userState) {
            if ((this.LoadRunCardDataOperationCompleted == null)) {
                this.LoadRunCardDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRunCardDataOperationCompleted);
            }
            this.InvokeAsync("LoadRunCardData", new object[] {
                        InXml}, this.LoadRunCardDataOperationCompleted, userState);
        }
        
        private void OnLoadRunCardDataOperationCompleted(object arg) {
            if ((this.LoadRunCardDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRunCardDataCompleted(this, new LoadRunCardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRunCardLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRunCardLog(string InXml) {
            object[] results = this.Invoke("LoadRunCardLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRunCardLogAsync(string InXml) {
            this.LoadRunCardLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRunCardLogAsync(string InXml, object userState) {
            if ((this.LoadRunCardLogOperationCompleted == null)) {
                this.LoadRunCardLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRunCardLogOperationCompleted);
            }
            this.InvokeAsync("LoadRunCardLog", new object[] {
                        InXml}, this.LoadRunCardLogOperationCompleted, userState);
        }
        
        private void OnLoadRunCardLogOperationCompleted(object arg) {
            if ((this.LoadRunCardLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRunCardLogCompleted(this, new LoadRunCardLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRunCardHeadData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRunCardHeadData(string InXml) {
            object[] results = this.Invoke("LoadRunCardHeadData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRunCardHeadDataAsync(string InXml) {
            this.LoadRunCardHeadDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRunCardHeadDataAsync(string InXml, object userState) {
            if ((this.LoadRunCardHeadDataOperationCompleted == null)) {
                this.LoadRunCardHeadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRunCardHeadDataOperationCompleted);
            }
            this.InvokeAsync("LoadRunCardHeadData", new object[] {
                        InXml}, this.LoadRunCardHeadDataOperationCompleted, userState);
        }
        
        private void OnLoadRunCardHeadDataOperationCompleted(object arg) {
            if ((this.LoadRunCardHeadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRunCardHeadDataCompleted(this, new LoadRunCardHeadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPRDAttribution", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPRDAttribution(string InXml) {
            object[] results = this.Invoke("LoadPRDAttribution", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPRDAttributionAsync(string InXml) {
            this.LoadPRDAttributionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPRDAttributionAsync(string InXml, object userState) {
            if ((this.LoadPRDAttributionOperationCompleted == null)) {
                this.LoadPRDAttributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPRDAttributionOperationCompleted);
            }
            this.InvokeAsync("LoadPRDAttribution", new object[] {
                        InXml}, this.LoadPRDAttributionOperationCompleted, userState);
        }
        
        private void OnLoadPRDAttributionOperationCompleted(object arg) {
            if ((this.LoadPRDAttributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPRDAttributionCompleted(this, new LoadPRDAttributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRunCardData_Delta", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRunCardData_Delta(string InXml) {
            object[] results = this.Invoke("LoadRunCardData_Delta", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRunCardData_DeltaAsync(string InXml) {
            this.LoadRunCardData_DeltaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRunCardData_DeltaAsync(string InXml, object userState) {
            if ((this.LoadRunCardData_DeltaOperationCompleted == null)) {
                this.LoadRunCardData_DeltaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRunCardData_DeltaOperationCompleted);
            }
            this.InvokeAsync("LoadRunCardData_Delta", new object[] {
                        InXml}, this.LoadRunCardData_DeltaOperationCompleted, userState);
        }
        
        private void OnLoadRunCardData_DeltaOperationCompleted(object arg) {
            if ((this.LoadRunCardData_DeltaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRunCardData_DeltaCompleted(this, new LoadRunCardData_DeltaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_Set", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_Set(string InXml) {
            object[] results = this.Invoke("Exe_Wait_Set", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_SetAsync(string InXml) {
            this.Exe_Wait_SetAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_SetAsync(string InXml, object userState) {
            if ((this.Exe_Wait_SetOperationCompleted == null)) {
                this.Exe_Wait_SetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_SetOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_Set", new object[] {
                        InXml}, this.Exe_Wait_SetOperationCompleted, userState);
        }
        
        private void OnExe_Wait_SetOperationCompleted(object arg) {
            if ((this.Exe_Wait_SetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_SetCompleted(this, new Exe_Wait_SetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotRelease(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotReleaseAsync(string InXml) {
            this.Exe_Wait_LotReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotReleaseAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotReleaseOperationCompleted == null)) {
                this.Exe_Wait_LotReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotReleaseOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotRelease", new object[] {
                        InXml}, this.Exe_Wait_LotReleaseOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotReleaseOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotReleaseCompleted(this, new Exe_Wait_LotReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotMerge(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMergeAsync(string InXml) {
            this.Exe_Wait_LotMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMergeAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotMergeOperationCompleted == null)) {
                this.Exe_Wait_LotMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotMergeOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotMerge", new object[] {
                        InXml}, this.Exe_Wait_LotMergeOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotMergeOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotMergeCompleted(this, new Exe_Wait_LotMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotMerge_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotMerge_Bin(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotMerge_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMerge_BinAsync(string InXml) {
            this.Exe_Wait_LotMerge_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMerge_BinAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotMerge_BinOperationCompleted == null)) {
                this.Exe_Wait_LotMerge_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotMerge_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotMerge_Bin", new object[] {
                        InXml}, this.Exe_Wait_LotMerge_BinOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotMerge_BinOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotMerge_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotMerge_BinCompleted(this, new Exe_Wait_LotMerge_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotMerge_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotMerge_Component(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotMerge_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMerge_ComponentAsync(string InXml) {
            this.Exe_Wait_LotMerge_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotMerge_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotMerge_ComponentOperationCompleted == null)) {
                this.Exe_Wait_LotMerge_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotMerge_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotMerge_Component", new object[] {
                        InXml}, this.Exe_Wait_LotMerge_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotMerge_ComponentOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotMerge_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotMerge_ComponentCompleted(this, new Exe_Wait_LotMerge_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotSplit(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplitAsync(string InXml) {
            this.Exe_Wait_LotSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplitAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotSplitOperationCompleted == null)) {
                this.Exe_Wait_LotSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotSplit", new object[] {
                        InXml}, this.Exe_Wait_LotSplitOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotSplitOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotSplitCompleted(this, new Exe_Wait_LotSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotSplit_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotSplit_Bin(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotSplit_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplit_BinAsync(string InXml) {
            this.Exe_Wait_LotSplit_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplit_BinAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotSplit_BinOperationCompleted == null)) {
                this.Exe_Wait_LotSplit_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotSplit_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotSplit_Bin", new object[] {
                        InXml}, this.Exe_Wait_LotSplit_BinOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotSplit_BinOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotSplit_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotSplit_BinCompleted(this, new Exe_Wait_LotSplit_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Wait_LotSplit_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Wait_LotSplit_Component(string InXml) {
            object[] results = this.Invoke("Exe_Wait_LotSplit_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplit_ComponentAsync(string InXml) {
            this.Exe_Wait_LotSplit_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Wait_LotSplit_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_Wait_LotSplit_ComponentOperationCompleted == null)) {
                this.Exe_Wait_LotSplit_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Wait_LotSplit_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_Wait_LotSplit_Component", new object[] {
                        InXml}, this.Exe_Wait_LotSplit_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_Wait_LotSplit_ComponentOperationCompleted(object arg) {
            if ((this.Exe_Wait_LotSplit_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Wait_LotSplit_ComponentCompleted(this, new Exe_Wait_LotSplit_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWaitBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWaitBasis(string InXml) {
            object[] results = this.Invoke("LoadWaitBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWaitBasisAsync(string InXml) {
            this.LoadWaitBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWaitBasisAsync(string InXml, object userState) {
            if ((this.LoadWaitBasisOperationCompleted == null)) {
                this.LoadWaitBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWaitBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWaitBasis", new object[] {
                        InXml}, this.LoadWaitBasisOperationCompleted, userState);
        }
        
        private void OnLoadWaitBasisOperationCompleted(object arg) {
            if ((this.LoadWaitBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWaitBasisCompleted(this, new LoadWaitBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWaitLotDisposition", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWaitLotDisposition(string InXml) {
            object[] results = this.Invoke("LoadWaitLotDisposition", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWaitLotDispositionAsync(string InXml) {
            this.LoadWaitLotDispositionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWaitLotDispositionAsync(string InXml, object userState) {
            if ((this.LoadWaitLotDispositionOperationCompleted == null)) {
                this.LoadWaitLotDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWaitLotDispositionOperationCompleted);
            }
            this.InvokeAsync("LoadWaitLotDisposition", new object[] {
                        InXml}, this.LoadWaitLotDispositionOperationCompleted, userState);
        }
        
        private void OnLoadWaitLotDispositionOperationCompleted(object arg) {
            if ((this.LoadWaitLotDispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWaitLotDispositionCompleted(this, new LoadWaitLotDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWaitBasisJoinLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWaitBasisJoinLotState(string InXml) {
            object[] results = this.Invoke("LoadWaitBasisJoinLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWaitBasisJoinLotStateAsync(string InXml) {
            this.LoadWaitBasisJoinLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWaitBasisJoinLotStateAsync(string InXml, object userState) {
            if ((this.LoadWaitBasisJoinLotStateOperationCompleted == null)) {
                this.LoadWaitBasisJoinLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWaitBasisJoinLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadWaitBasisJoinLotState", new object[] {
                        InXml}, this.LoadWaitBasisJoinLotStateOperationCompleted, userState);
        }
        
        private void OnLoadWaitBasisJoinLotStateOperationCompleted(object arg) {
            if ((this.LoadWaitBasisJoinLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWaitBasisJoinLotStateCompleted(this, new LoadWaitBasisJoinLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRODetail", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRODetail(string InXml) {
            object[] results = this.Invoke("LoadRODetail", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRODetailAsync(string InXml) {
            this.LoadRODetailAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRODetailAsync(string InXml, object userState) {
            if ((this.LoadRODetailOperationCompleted == null)) {
                this.LoadRODetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRODetailOperationCompleted);
            }
            this.InvokeAsync("LoadRODetail", new object[] {
                        InXml}, this.LoadRODetailOperationCompleted, userState);
        }
        
        private void OnLoadRODetailOperationCompleted(object arg) {
            if ((this.LoadRODetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRODetailCompleted(this, new LoadRODetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMOBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMOBasis(string InXml) {
            object[] results = this.Invoke("LoadMOBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMOBasisAsync(string InXml) {
            this.LoadMOBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMOBasisAsync(string InXml, object userState) {
            if ((this.LoadMOBasisOperationCompleted == null)) {
                this.LoadMOBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMOBasisOperationCompleted);
            }
            this.InvokeAsync("LoadMOBasis", new object[] {
                        InXml}, this.LoadMOBasisOperationCompleted, userState);
        }
        
        private void OnLoadMOBasisOperationCompleted(object arg) {
            if ((this.LoadMOBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMOBasisCompleted(this, new LoadMOBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadROJoinMOData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadROJoinMOData(string InXml) {
            object[] results = this.Invoke("LoadROJoinMOData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadROJoinMODataAsync(string InXml) {
            this.LoadROJoinMODataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadROJoinMODataAsync(string InXml, object userState) {
            if ((this.LoadROJoinMODataOperationCompleted == null)) {
                this.LoadROJoinMODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadROJoinMODataOperationCompleted);
            }
            this.InvokeAsync("LoadROJoinMOData", new object[] {
                        InXml}, this.LoadROJoinMODataOperationCompleted, userState);
        }
        
        private void OnLoadROJoinMODataOperationCompleted(object arg) {
            if ((this.LoadROJoinMODataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadROJoinMODataCompleted(this, new LoadROJoinMODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotTapeMapDate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotTapeMapDate(string InXml) {
            object[] results = this.Invoke("AddLotTapeMapDate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotTapeMapDateAsync(string InXml) {
            this.AddLotTapeMapDateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotTapeMapDateAsync(string InXml, object userState) {
            if ((this.AddLotTapeMapDateOperationCompleted == null)) {
                this.AddLotTapeMapDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotTapeMapDateOperationCompleted);
            }
            this.InvokeAsync("AddLotTapeMapDate", new object[] {
                        InXml}, this.AddLotTapeMapDateOperationCompleted, userState);
        }
        
        private void OnAddLotTapeMapDateOperationCompleted(object arg) {
            if ((this.AddLotTapeMapDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotTapeMapDateCompleted(this, new AddLotTapeMapDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotTapeMapDate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotTapeMapDate(string InXml) {
            object[] results = this.Invoke("EditLotTapeMapDate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotTapeMapDateAsync(string InXml) {
            this.EditLotTapeMapDateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotTapeMapDateAsync(string InXml, object userState) {
            if ((this.EditLotTapeMapDateOperationCompleted == null)) {
                this.EditLotTapeMapDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotTapeMapDateOperationCompleted);
            }
            this.InvokeAsync("EditLotTapeMapDate", new object[] {
                        InXml}, this.EditLotTapeMapDateOperationCompleted, userState);
        }
        
        private void OnEditLotTapeMapDateOperationCompleted(object arg) {
            if ((this.EditLotTapeMapDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotTapeMapDateCompleted(this, new EditLotTapeMapDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotTapeMapDate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotTapeMapDate(string InXml) {
            object[] results = this.Invoke("DelLotTapeMapDate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotTapeMapDateAsync(string InXml) {
            this.DelLotTapeMapDateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotTapeMapDateAsync(string InXml, object userState) {
            if ((this.DelLotTapeMapDateOperationCompleted == null)) {
                this.DelLotTapeMapDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotTapeMapDateOperationCompleted);
            }
            this.InvokeAsync("DelLotTapeMapDate", new object[] {
                        InXml}, this.DelLotTapeMapDateOperationCompleted, userState);
        }
        
        private void OnDelLotTapeMapDateOperationCompleted(object arg) {
            if ((this.DelLotTapeMapDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotTapeMapDateCompleted(this, new DelLotTapeMapDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotTapeMapDate", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotTapeMapDate(string InXml) {
            object[] results = this.Invoke("LoadLotTapeMapDate", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotTapeMapDateAsync(string InXml) {
            this.LoadLotTapeMapDateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotTapeMapDateAsync(string InXml, object userState) {
            if ((this.LoadLotTapeMapDateOperationCompleted == null)) {
                this.LoadLotTapeMapDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotTapeMapDateOperationCompleted);
            }
            this.InvokeAsync("LoadLotTapeMapDate", new object[] {
                        InXml}, this.LoadLotTapeMapDateOperationCompleted, userState);
        }
        
        private void OnLoadLotTapeMapDateOperationCompleted(object arg) {
            if ((this.LoadLotTapeMapDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotTapeMapDateCompleted(this, new LoadLotTapeMapDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPNGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPNGroup(string InXml) {
            object[] results = this.Invoke("LoadPNGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPNGroupAsync(string InXml) {
            this.LoadPNGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPNGroupAsync(string InXml, object userState) {
            if ((this.LoadPNGroupOperationCompleted == null)) {
                this.LoadPNGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPNGroupOperationCompleted);
            }
            this.InvokeAsync("LoadPNGroup", new object[] {
                        InXml}, this.LoadPNGroupOperationCompleted, userState);
        }
        
        private void OnLoadPNGroupOperationCompleted(object arg) {
            if ((this.LoadPNGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPNGroupCompleted(this, new LoadPNGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddPNGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPNGroup(string InXml) {
            object[] results = this.Invoke("AddPNGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPNGroupAsync(string InXml) {
            this.AddPNGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddPNGroupAsync(string InXml, object userState) {
            if ((this.AddPNGroupOperationCompleted == null)) {
                this.AddPNGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPNGroupOperationCompleted);
            }
            this.InvokeAsync("AddPNGroup", new object[] {
                        InXml}, this.AddPNGroupOperationCompleted, userState);
        }
        
        private void OnAddPNGroupOperationCompleted(object arg) {
            if ((this.AddPNGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPNGroupCompleted(this, new AddPNGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdPNGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdPNGroup(string InXml) {
            object[] results = this.Invoke("UpdPNGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPNGroupAsync(string InXml) {
            this.UpdPNGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdPNGroupAsync(string InXml, object userState) {
            if ((this.UpdPNGroupOperationCompleted == null)) {
                this.UpdPNGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPNGroupOperationCompleted);
            }
            this.InvokeAsync("UpdPNGroup", new object[] {
                        InXml}, this.UpdPNGroupOperationCompleted, userState);
        }
        
        private void OnUpdPNGroupOperationCompleted(object arg) {
            if ((this.UpdPNGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPNGroupCompleted(this, new UpdPNGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_RunIn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_RunIn(string InXml) {
            object[] results = this.Invoke("Exe_RunIn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_RunInAsync(string InXml) {
            this.Exe_RunInAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_RunInAsync(string InXml, object userState) {
            if ((this.Exe_RunInOperationCompleted == null)) {
                this.Exe_RunInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_RunInOperationCompleted);
            }
            this.InvokeAsync("Exe_RunIn", new object[] {
                        InXml}, this.Exe_RunInOperationCompleted, userState);
        }
        
        private void OnExe_RunInOperationCompleted(object arg) {
            if ((this.Exe_RunInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_RunInCompleted(this, new Exe_RunInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_RunFirstQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_RunFirstQC(string InXml) {
            object[] results = this.Invoke("Exe_RunFirstQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_RunFirstQCAsync(string InXml) {
            this.Exe_RunFirstQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_RunFirstQCAsync(string InXml, object userState) {
            if ((this.Exe_RunFirstQCOperationCompleted == null)) {
                this.Exe_RunFirstQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_RunFirstQCOperationCompleted);
            }
            this.InvokeAsync("Exe_RunFirstQC", new object[] {
                        InXml}, this.Exe_RunFirstQCOperationCompleted, userState);
        }
        
        private void OnExe_RunFirstQCOperationCompleted(object arg) {
            if ((this.Exe_RunFirstQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_RunFirstQCCompleted(this, new Exe_RunFirstQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadPNGroupJoinLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadPNGroupJoinLotState(string InXml) {
            object[] results = this.Invoke("LoadPNGroupJoinLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPNGroupJoinLotStateAsync(string InXml) {
            this.LoadPNGroupJoinLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadPNGroupJoinLotStateAsync(string InXml, object userState) {
            if ((this.LoadPNGroupJoinLotStateOperationCompleted == null)) {
                this.LoadPNGroupJoinLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPNGroupJoinLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadPNGroupJoinLotState", new object[] {
                        InXml}, this.LoadPNGroupJoinLotStateOperationCompleted, userState);
        }
        
        private void OnLoadPNGroupJoinLotStateOperationCompleted(object arg) {
            if ((this.LoadPNGroupJoinLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPNGroupJoinLotStateCompleted(this, new LoadPNGroupJoinLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_EquipmentAcclife", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_EquipmentAcclife(string InXml) {
            object[] results = this.Invoke("LoadTemp_EquipmentAcclife", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentAcclifeAsync(string InXml) {
            this.LoadTemp_EquipmentAcclifeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentAcclifeAsync(string InXml, object userState) {
            if ((this.LoadTemp_EquipmentAcclifeOperationCompleted == null)) {
                this.LoadTemp_EquipmentAcclifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_EquipmentAcclifeOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_EquipmentAcclife", new object[] {
                        InXml}, this.LoadTemp_EquipmentAcclifeOperationCompleted, userState);
        }
        
        private void OnLoadTemp_EquipmentAcclifeOperationCompleted(object arg) {
            if ((this.LoadTemp_EquipmentAcclifeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_EquipmentAcclifeCompleted(this, new LoadTemp_EquipmentAcclifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_EquipmentLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_EquipmentLot(string InXml) {
            object[] results = this.Invoke("LoadTemp_EquipmentLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentLotAsync(string InXml) {
            this.LoadTemp_EquipmentLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentLotAsync(string InXml, object userState) {
            if ((this.LoadTemp_EquipmentLotOperationCompleted == null)) {
                this.LoadTemp_EquipmentLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_EquipmentLotOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_EquipmentLot", new object[] {
                        InXml}, this.LoadTemp_EquipmentLotOperationCompleted, userState);
        }
        
        private void OnLoadTemp_EquipmentLotOperationCompleted(object arg) {
            if ((this.LoadTemp_EquipmentLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_EquipmentLotCompleted(this, new LoadTemp_EquipmentLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadBatchLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadBatchLotState(string InXml) {
            object[] results = this.Invoke("LoadBatchLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBatchLotStateAsync(string InXml) {
            this.LoadBatchLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadBatchLotStateAsync(string InXml, object userState) {
            if ((this.LoadBatchLotStateOperationCompleted == null)) {
                this.LoadBatchLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBatchLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadBatchLotState", new object[] {
                        InXml}, this.LoadBatchLotStateOperationCompleted, userState);
        }
        
        private void OnLoadBatchLotStateOperationCompleted(object arg) {
            if ((this.LoadBatchLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBatchLotStateCompleted(this, new LoadBatchLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadBatchComponentState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadBatchComponentState(string InXml) {
            object[] results = this.Invoke("LoadBatchComponentState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBatchComponentStateAsync(string InXml) {
            this.LoadBatchComponentStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadBatchComponentStateAsync(string InXml, object userState) {
            if ((this.LoadBatchComponentStateOperationCompleted == null)) {
                this.LoadBatchComponentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBatchComponentStateOperationCompleted);
            }
            this.InvokeAsync("LoadBatchComponentState", new object[] {
                        InXml}, this.LoadBatchComponentStateOperationCompleted, userState);
        }
        
        private void OnLoadBatchComponentStateOperationCompleted(object arg) {
            if ((this.LoadBatchComponentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBatchComponentStateCompleted(this, new LoadBatchComponentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_BatchCheckIn_FAB", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_BatchCheckIn_FAB(string InXml) {
            object[] results = this.Invoke("Exe_BatchCheckIn_FAB", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_BatchCheckIn_FABAsync(string InXml) {
            this.Exe_BatchCheckIn_FABAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_BatchCheckIn_FABAsync(string InXml, object userState) {
            if ((this.Exe_BatchCheckIn_FABOperationCompleted == null)) {
                this.Exe_BatchCheckIn_FABOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_BatchCheckIn_FABOperationCompleted);
            }
            this.InvokeAsync("Exe_BatchCheckIn_FAB", new object[] {
                        InXml}, this.Exe_BatchCheckIn_FABOperationCompleted, userState);
        }
        
        private void OnExe_BatchCheckIn_FABOperationCompleted(object arg) {
            if ((this.Exe_BatchCheckIn_FABCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_BatchCheckIn_FABCompleted(this, new Exe_BatchCheckIn_FABCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_BatchCheckOut_FAB", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_BatchCheckOut_FAB(string InXml) {
            object[] results = this.Invoke("Exe_BatchCheckOut_FAB", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_BatchCheckOut_FABAsync(string InXml) {
            this.Exe_BatchCheckOut_FABAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_BatchCheckOut_FABAsync(string InXml, object userState) {
            if ((this.Exe_BatchCheckOut_FABOperationCompleted == null)) {
                this.Exe_BatchCheckOut_FABOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_BatchCheckOut_FABOperationCompleted);
            }
            this.InvokeAsync("Exe_BatchCheckOut_FAB", new object[] {
                        InXml}, this.Exe_BatchCheckOut_FABOperationCompleted, userState);
        }
        
        private void OnExe_BatchCheckOut_FABOperationCompleted(object arg) {
            if ((this.Exe_BatchCheckOut_FABCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_BatchCheckOut_FABCompleted(this, new Exe_BatchCheckOut_FABCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetEQPETHValue", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetEQPETHValue(string InXml) {
            object[] results = this.Invoke("SetEQPETHValue", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetEQPETHValueAsync(string InXml) {
            this.SetEQPETHValueAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetEQPETHValueAsync(string InXml, object userState) {
            if ((this.SetEQPETHValueOperationCompleted == null)) {
                this.SetEQPETHValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEQPETHValueOperationCompleted);
            }
            this.InvokeAsync("SetEQPETHValue", new object[] {
                        InXml}, this.SetEQPETHValueOperationCompleted, userState);
        }
        
        private void OnSetEQPETHValueOperationCompleted(object arg) {
            if ((this.SetEQPETHValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEQPETHValueCompleted(this, new SetEQPETHValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditComponentState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditComponentState(string InXml) {
            object[] results = this.Invoke("EditComponentState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditComponentStateAsync(string InXml) {
            this.EditComponentStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditComponentStateAsync(string InXml, object userState) {
            if ((this.EditComponentStateOperationCompleted == null)) {
                this.EditComponentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditComponentStateOperationCompleted);
            }
            this.InvokeAsync("EditComponentState", new object[] {
                        InXml}, this.EditComponentStateOperationCompleted, userState);
        }
        
        private void OnEditComponentStateOperationCompleted(object arg) {
            if ((this.EditComponentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditComponentStateCompleted(this, new EditComponentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelComponentState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelComponentState(string InXml) {
            object[] results = this.Invoke("DelComponentState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelComponentStateAsync(string InXml) {
            this.DelComponentStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelComponentStateAsync(string InXml, object userState) {
            if ((this.DelComponentStateOperationCompleted == null)) {
                this.DelComponentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelComponentStateOperationCompleted);
            }
            this.InvokeAsync("DelComponentState", new object[] {
                        InXml}, this.DelComponentStateOperationCompleted, userState);
        }
        
        private void OnDelComponentStateOperationCompleted(object arg) {
            if ((this.DelComponentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelComponentStateCompleted(this, new DelComponentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotProperty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotProperty(string InXml) {
            object[] results = this.Invoke("LoadLotProperty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotPropertyAsync(string InXml) {
            this.LoadLotPropertyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotPropertyAsync(string InXml, object userState) {
            if ((this.LoadLotPropertyOperationCompleted == null)) {
                this.LoadLotPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotPropertyOperationCompleted);
            }
            this.InvokeAsync("LoadLotProperty", new object[] {
                        InXml}, this.LoadLotPropertyOperationCompleted, userState);
        }
        
        private void OnLoadLotPropertyOperationCompleted(object arg) {
            if ((this.LoadLotPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotPropertyCompleted(this, new LoadLotPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotProperty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotProperty(string InXml) {
            object[] results = this.Invoke("AddLotProperty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotPropertyAsync(string InXml) {
            this.AddLotPropertyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotPropertyAsync(string InXml, object userState) {
            if ((this.AddLotPropertyOperationCompleted == null)) {
                this.AddLotPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotPropertyOperationCompleted);
            }
            this.InvokeAsync("AddLotProperty", new object[] {
                        InXml}, this.AddLotPropertyOperationCompleted, userState);
        }
        
        private void OnAddLotPropertyOperationCompleted(object arg) {
            if ((this.AddLotPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotPropertyCompleted(this, new AddLotPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotProperty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotProperty(string InXml) {
            object[] results = this.Invoke("EditLotProperty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotPropertyAsync(string InXml) {
            this.EditLotPropertyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotPropertyAsync(string InXml, object userState) {
            if ((this.EditLotPropertyOperationCompleted == null)) {
                this.EditLotPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotPropertyOperationCompleted);
            }
            this.InvokeAsync("EditLotProperty", new object[] {
                        InXml}, this.EditLotPropertyOperationCompleted, userState);
        }
        
        private void OnEditLotPropertyOperationCompleted(object arg) {
            if ((this.EditLotPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotPropertyCompleted(this, new EditLotPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotProperty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotProperty(string InXml) {
            object[] results = this.Invoke("DelLotProperty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotPropertyAsync(string InXml) {
            this.DelLotPropertyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotPropertyAsync(string InXml, object userState) {
            if ((this.DelLotPropertyOperationCompleted == null)) {
                this.DelLotPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotPropertyOperationCompleted);
            }
            this.InvokeAsync("DelLotProperty", new object[] {
                        InXml}, this.DelLotPropertyOperationCompleted, userState);
        }
        
        private void OnDelLotPropertyOperationCompleted(object arg) {
            if ((this.DelLotPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotPropertyCompleted(this, new DelLotPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadUnitTransferQty", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadUnitTransferQty(string InXml) {
            object[] results = this.Invoke("LoadUnitTransferQty", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUnitTransferQtyAsync(string InXml) {
            this.LoadUnitTransferQtyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadUnitTransferQtyAsync(string InXml, object userState) {
            if ((this.LoadUnitTransferQtyOperationCompleted == null)) {
                this.LoadUnitTransferQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUnitTransferQtyOperationCompleted);
            }
            this.InvokeAsync("LoadUnitTransferQty", new object[] {
                        InXml}, this.LoadUnitTransferQtyOperationCompleted, userState);
        }
        
        private void OnLoadUnitTransferQtyOperationCompleted(object arg) {
            if ((this.LoadUnitTransferQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUnitTransferQtyCompleted(this, new LoadUnitTransferQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadReverseHistory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadReverseHistory(string InXml) {
            object[] results = this.Invoke("LoadReverseHistory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadReverseHistoryAsync(string InXml) {
            this.LoadReverseHistoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadReverseHistoryAsync(string InXml, object userState) {
            if ((this.LoadReverseHistoryOperationCompleted == null)) {
                this.LoadReverseHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadReverseHistoryOperationCompleted);
            }
            this.InvokeAsync("LoadReverseHistory", new object[] {
                        InXml}, this.LoadReverseHistoryOperationCompleted, userState);
        }
        
        private void OnLoadReverseHistoryOperationCompleted(object arg) {
            if ((this.LoadReverseHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadReverseHistoryCompleted(this, new LoadReverseHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExecuteReverse", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteReverse(string InXml) {
            object[] results = this.Invoke("ExecuteReverse", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteReverseAsync(string InXml) {
            this.ExecuteReverseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExecuteReverseAsync(string InXml, object userState) {
            if ((this.ExecuteReverseOperationCompleted == null)) {
                this.ExecuteReverseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteReverseOperationCompleted);
            }
            this.InvokeAsync("ExecuteReverse", new object[] {
                        InXml}, this.ExecuteReverseOperationCompleted, userState);
        }
        
        private void OnExecuteReverseOperationCompleted(object arg) {
            if ((this.ExecuteReverseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteReverseCompleted(this, new ExecuteReverseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTempQCItemJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTempQCItemJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadTempQCItemJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTempQCItemJoinBasisAsync(string InXml) {
            this.LoadTempQCItemJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTempQCItemJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadTempQCItemJoinBasisOperationCompleted == null)) {
                this.LoadTempQCItemJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTempQCItemJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadTempQCItemJoinBasis", new object[] {
                        InXml}, this.LoadTempQCItemJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadTempQCItemJoinBasisOperationCompleted(object arg) {
            if ((this.LoadTempQCItemJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTempQCItemJoinBasisCompleted(this, new LoadTempQCItemJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNBasis(string InXml) {
            object[] results = this.Invoke("LoadECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNBasisAsync(string InXml) {
            this.LoadECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNBasisAsync(string InXml, object userState) {
            if ((this.LoadECNBasisOperationCompleted == null)) {
                this.LoadECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNBasisOperationCompleted);
            }
            this.InvokeAsync("LoadECNBasis", new object[] {
                        InXml}, this.LoadECNBasisOperationCompleted, userState);
        }
        
        private void OnLoadECNBasisOperationCompleted(object arg) {
            if ((this.LoadECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNBasisCompleted(this, new LoadECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditECNBasis(string InXml) {
            object[] results = this.Invoke("EditECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditECNBasisAsync(string InXml) {
            this.EditECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditECNBasisAsync(string InXml, object userState) {
            if ((this.EditECNBasisOperationCompleted == null)) {
                this.EditECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditECNBasisOperationCompleted);
            }
            this.InvokeAsync("EditECNBasis", new object[] {
                        InXml}, this.EditECNBasisOperationCompleted, userState);
        }
        
        private void OnEditECNBasisOperationCompleted(object arg) {
            if ((this.EditECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditECNBasisCompleted(this, new EditECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNBasis(string InXml) {
            object[] results = this.Invoke("DelECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNBasisAsync(string InXml) {
            this.DelECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNBasisAsync(string InXml, object userState) {
            if ((this.DelECNBasisOperationCompleted == null)) {
                this.DelECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNBasisOperationCompleted);
            }
            this.InvokeAsync("DelECNBasis", new object[] {
                        InXml}, this.DelECNBasisOperationCompleted, userState);
        }
        
        private void OnDelECNBasisOperationCompleted(object arg) {
            if ((this.DelECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNBasisCompleted(this, new DelECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ApproveECNBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApproveECNBasis(string InXml) {
            object[] results = this.Invoke("ApproveECNBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveECNBasisAsync(string InXml) {
            this.ApproveECNBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ApproveECNBasisAsync(string InXml, object userState) {
            if ((this.ApproveECNBasisOperationCompleted == null)) {
                this.ApproveECNBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveECNBasisOperationCompleted);
            }
            this.InvokeAsync("ApproveECNBasis", new object[] {
                        InXml}, this.ApproveECNBasisOperationCompleted, userState);
        }
        
        private void OnApproveECNBasisOperationCompleted(object arg) {
            if ((this.ApproveECNBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveECNBasisCompleted(this, new ApproveECNBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdECN", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdECN(string InXml) {
            object[] results = this.Invoke("UpdECN", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdECNAsync(string InXml) {
            this.UpdECNAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdECNAsync(string InXml, object userState) {
            if ((this.UpdECNOperationCompleted == null)) {
                this.UpdECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdECNOperationCompleted);
            }
            this.InvokeAsync("UpdECN", new object[] {
                        InXml}, this.UpdECNOperationCompleted, userState);
        }
        
        private void OnUpdECNOperationCompleted(object arg) {
            if ((this.UpdECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdECNCompleted(this, new UpdECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EndECN", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EndECN(string InXml) {
            object[] results = this.Invoke("EndECN", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndECNAsync(string InXml) {
            this.EndECNAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EndECNAsync(string InXml, object userState) {
            if ((this.EndECNOperationCompleted == null)) {
                this.EndECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndECNOperationCompleted);
            }
            this.InvokeAsync("EndECN", new object[] {
                        InXml}, this.EndECNOperationCompleted, userState);
        }
        
        private void OnEndECNOperationCompleted(object arg) {
            if ((this.EndECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndECNCompleted(this, new EndECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdECN_V2", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdECN_V2(string InXml) {
            object[] results = this.Invoke("UpdECN_V2", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdECN_V2Async(string InXml) {
            this.UpdECN_V2Async(InXml, null);
        }
        
        /// <remarks/>
        public void UpdECN_V2Async(string InXml, object userState) {
            if ((this.UpdECN_V2OperationCompleted == null)) {
                this.UpdECN_V2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdECN_V2OperationCompleted);
            }
            this.InvokeAsync("UpdECN_V2", new object[] {
                        InXml}, this.UpdECN_V2OperationCompleted, userState);
        }
        
        private void OnUpdECN_V2OperationCompleted(object arg) {
            if ((this.UpdECN_V2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdECN_V2Completed(this, new UpdECN_V2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdECNDisable", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdECNDisable(string InXml) {
            object[] results = this.Invoke("UpdECNDisable", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdECNDisableAsync(string InXml) {
            this.UpdECNDisableAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdECNDisableAsync(string InXml, object userState) {
            if ((this.UpdECNDisableOperationCompleted == null)) {
                this.UpdECNDisableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdECNDisableOperationCompleted);
            }
            this.InvokeAsync("UpdECNDisable", new object[] {
                        InXml}, this.UpdECNDisableOperationCompleted, userState);
        }
        
        private void OnUpdECNDisableOperationCompleted(object arg) {
            if ((this.UpdECNDisableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdECNDisableCompleted(this, new UpdECNDisableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/UpdECNConfirm", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdECNConfirm(string InXml) {
            object[] results = this.Invoke("UpdECNConfirm", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdECNConfirmAsync(string InXml) {
            this.UpdECNConfirmAsync(InXml, null);
        }
        
        /// <remarks/>
        public void UpdECNConfirmAsync(string InXml, object userState) {
            if ((this.UpdECNConfirmOperationCompleted == null)) {
                this.UpdECNConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdECNConfirmOperationCompleted);
            }
            this.InvokeAsync("UpdECNConfirm", new object[] {
                        InXml}, this.UpdECNConfirmOperationCompleted, userState);
        }
        
        private void OnUpdECNConfirmOperationCompleted(object arg) {
            if ((this.UpdECNConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdECNConfirmCompleted(this, new UpdECNConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNAttrib(string InXml) {
            object[] results = this.Invoke("LoadECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNAttribAsync(string InXml) {
            this.LoadECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNAttribAsync(string InXml, object userState) {
            if ((this.LoadECNAttribOperationCompleted == null)) {
                this.LoadECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNAttribOperationCompleted);
            }
            this.InvokeAsync("LoadECNAttrib", new object[] {
                        InXml}, this.LoadECNAttribOperationCompleted, userState);
        }
        
        private void OnLoadECNAttribOperationCompleted(object arg) {
            if ((this.LoadECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNAttribCompleted(this, new LoadECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNAttrib(string InXml) {
            object[] results = this.Invoke("AddECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNAttribAsync(string InXml) {
            this.AddECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNAttribAsync(string InXml, object userState) {
            if ((this.AddECNAttribOperationCompleted == null)) {
                this.AddECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNAttribOperationCompleted);
            }
            this.InvokeAsync("AddECNAttrib", new object[] {
                        InXml}, this.AddECNAttribOperationCompleted, userState);
        }
        
        private void OnAddECNAttribOperationCompleted(object arg) {
            if ((this.AddECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNAttribCompleted(this, new AddECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditECNAttrib(string InXml) {
            object[] results = this.Invoke("EditECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditECNAttribAsync(string InXml) {
            this.EditECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditECNAttribAsync(string InXml, object userState) {
            if ((this.EditECNAttribOperationCompleted == null)) {
                this.EditECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditECNAttribOperationCompleted);
            }
            this.InvokeAsync("EditECNAttrib", new object[] {
                        InXml}, this.EditECNAttribOperationCompleted, userState);
        }
        
        private void OnEditECNAttribOperationCompleted(object arg) {
            if ((this.EditECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditECNAttribCompleted(this, new EditECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNAttrib(string InXml) {
            object[] results = this.Invoke("DelECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNAttribAsync(string InXml) {
            this.DelECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNAttribAsync(string InXml, object userState) {
            if ((this.DelECNAttribOperationCompleted == null)) {
                this.DelECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNAttribOperationCompleted);
            }
            this.InvokeAsync("DelECNAttrib", new object[] {
                        InXml}, this.DelECNAttribOperationCompleted, userState);
        }
        
        private void OnDelECNAttribOperationCompleted(object arg) {
            if ((this.DelECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNAttribCompleted(this, new DelECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotECNAttrib(string InXml) {
            object[] results = this.Invoke("LoadLotECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotECNAttribAsync(string InXml) {
            this.LoadLotECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotECNAttribAsync(string InXml, object userState) {
            if ((this.LoadLotECNAttribOperationCompleted == null)) {
                this.LoadLotECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotECNAttribOperationCompleted);
            }
            this.InvokeAsync("LoadLotECNAttrib", new object[] {
                        InXml}, this.LoadLotECNAttribOperationCompleted, userState);
        }
        
        private void OnLoadLotECNAttribOperationCompleted(object arg) {
            if ((this.LoadLotECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotECNAttribCompleted(this, new LoadLotECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotECNAttrib(string InXml) {
            object[] results = this.Invoke("AddLotECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotECNAttribAsync(string InXml) {
            this.AddLotECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotECNAttribAsync(string InXml, object userState) {
            if ((this.AddLotECNAttribOperationCompleted == null)) {
                this.AddLotECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotECNAttribOperationCompleted);
            }
            this.InvokeAsync("AddLotECNAttrib", new object[] {
                        InXml}, this.AddLotECNAttribOperationCompleted, userState);
        }
        
        private void OnAddLotECNAttribOperationCompleted(object arg) {
            if ((this.AddLotECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotECNAttribCompleted(this, new AddLotECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotECNAttrib(string InXml) {
            object[] results = this.Invoke("EditLotECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotECNAttribAsync(string InXml) {
            this.EditLotECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotECNAttribAsync(string InXml, object userState) {
            if ((this.EditLotECNAttribOperationCompleted == null)) {
                this.EditLotECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotECNAttribOperationCompleted);
            }
            this.InvokeAsync("EditLotECNAttrib", new object[] {
                        InXml}, this.EditLotECNAttribOperationCompleted, userState);
        }
        
        private void OnEditLotECNAttribOperationCompleted(object arg) {
            if ((this.EditLotECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotECNAttribCompleted(this, new EditLotECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotECNAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotECNAttrib(string InXml) {
            object[] results = this.Invoke("DelLotECNAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotECNAttribAsync(string InXml) {
            this.DelLotECNAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotECNAttribAsync(string InXml, object userState) {
            if ((this.DelLotECNAttribOperationCompleted == null)) {
                this.DelLotECNAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotECNAttribOperationCompleted);
            }
            this.InvokeAsync("DelLotECNAttrib", new object[] {
                        InXml}, this.DelLotECNAttribOperationCompleted, userState);
        }
        
        private void OnDelLotECNAttribOperationCompleted(object arg) {
            if ((this.DelLotECNAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotECNAttribCompleted(this, new DelLotECNAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNLog(string InXml) {
            object[] results = this.Invoke("LoadECNLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNLogAsync(string InXml) {
            this.LoadECNLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNLogAsync(string InXml, object userState) {
            if ((this.LoadECNLogOperationCompleted == null)) {
                this.LoadECNLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNLogOperationCompleted);
            }
            this.InvokeAsync("LoadECNLog", new object[] {
                        InXml}, this.LoadECNLogOperationCompleted, userState);
        }
        
        private void OnLoadECNLogOperationCompleted(object arg) {
            if ((this.LoadECNLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNLogCompleted(this, new LoadECNLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNLog(string InXml) {
            object[] results = this.Invoke("AddECNLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNLogAsync(string InXml) {
            this.AddECNLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNLogAsync(string InXml, object userState) {
            if ((this.AddECNLogOperationCompleted == null)) {
                this.AddECNLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNLogOperationCompleted);
            }
            this.InvokeAsync("AddECNLog", new object[] {
                        InXml}, this.AddECNLogOperationCompleted, userState);
        }
        
        private void OnAddECNLogOperationCompleted(object arg) {
            if ((this.AddECNLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNLogCompleted(this, new AddECNLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditECNLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditECNLog(string InXml) {
            object[] results = this.Invoke("EditECNLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditECNLogAsync(string InXml) {
            this.EditECNLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditECNLogAsync(string InXml, object userState) {
            if ((this.EditECNLogOperationCompleted == null)) {
                this.EditECNLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditECNLogOperationCompleted);
            }
            this.InvokeAsync("EditECNLog", new object[] {
                        InXml}, this.EditECNLogOperationCompleted, userState);
        }
        
        private void OnEditECNLogOperationCompleted(object arg) {
            if ((this.EditECNLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditECNLogCompleted(this, new EditECNLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNLog(string InXml) {
            object[] results = this.Invoke("DelECNLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNLogAsync(string InXml) {
            this.DelECNLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNLogAsync(string InXml, object userState) {
            if ((this.DelECNLogOperationCompleted == null)) {
                this.DelECNLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNLogOperationCompleted);
            }
            this.InvokeAsync("DelECNLog", new object[] {
                        InXml}, this.DelECNLogOperationCompleted, userState);
        }
        
        private void OnDelECNLogOperationCompleted(object arg) {
            if ((this.DelECNLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNLogCompleted(this, new DelECNLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNAttribLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNAttribLog(string InXml) {
            object[] results = this.Invoke("LoadECNAttribLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNAttribLogAsync(string InXml) {
            this.LoadECNAttribLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNAttribLogAsync(string InXml, object userState) {
            if ((this.LoadECNAttribLogOperationCompleted == null)) {
                this.LoadECNAttribLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNAttribLogOperationCompleted);
            }
            this.InvokeAsync("LoadECNAttribLog", new object[] {
                        InXml}, this.LoadECNAttribLogOperationCompleted, userState);
        }
        
        private void OnLoadECNAttribLogOperationCompleted(object arg) {
            if ((this.LoadECNAttribLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNAttribLogCompleted(this, new LoadECNAttribLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNAttribLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNAttribLog(string InXml) {
            object[] results = this.Invoke("AddECNAttribLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNAttribLogAsync(string InXml) {
            this.AddECNAttribLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNAttribLogAsync(string InXml, object userState) {
            if ((this.AddECNAttribLogOperationCompleted == null)) {
                this.AddECNAttribLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNAttribLogOperationCompleted);
            }
            this.InvokeAsync("AddECNAttribLog", new object[] {
                        InXml}, this.AddECNAttribLogOperationCompleted, userState);
        }
        
        private void OnAddECNAttribLogOperationCompleted(object arg) {
            if ((this.AddECNAttribLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNAttribLogCompleted(this, new AddECNAttribLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditECNAttribLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditECNAttribLog(string InXml) {
            object[] results = this.Invoke("EditECNAttribLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditECNAttribLogAsync(string InXml) {
            this.EditECNAttribLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditECNAttribLogAsync(string InXml, object userState) {
            if ((this.EditECNAttribLogOperationCompleted == null)) {
                this.EditECNAttribLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditECNAttribLogOperationCompleted);
            }
            this.InvokeAsync("EditECNAttribLog", new object[] {
                        InXml}, this.EditECNAttribLogOperationCompleted, userState);
        }
        
        private void OnEditECNAttribLogOperationCompleted(object arg) {
            if ((this.EditECNAttribLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditECNAttribLogCompleted(this, new EditECNAttribLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNAttribLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNAttribLog(string InXml) {
            object[] results = this.Invoke("DelECNAttribLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNAttribLogAsync(string InXml) {
            this.DelECNAttribLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNAttribLogAsync(string InXml, object userState) {
            if ((this.DelECNAttribLogOperationCompleted == null)) {
                this.DelECNAttribLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNAttribLogOperationCompleted);
            }
            this.InvokeAsync("DelECNAttribLog", new object[] {
                        InXml}, this.DelECNAttribLogOperationCompleted, userState);
        }
        
        private void OnDelECNAttribLogOperationCompleted(object arg) {
            if ((this.DelECNAttribLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNAttribLogCompleted(this, new DelECNAttribLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNLotBasis(string InXml) {
            object[] results = this.Invoke("LoadECNLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNLotBasisAsync(string InXml) {
            this.LoadECNLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNLotBasisAsync(string InXml, object userState) {
            if ((this.LoadECNLotBasisOperationCompleted == null)) {
                this.LoadECNLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadECNLotBasis", new object[] {
                        InXml}, this.LoadECNLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadECNLotBasisOperationCompleted(object arg) {
            if ((this.LoadECNLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNLotBasisCompleted(this, new LoadECNLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNLotBasisLotData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNLotBasisLotData(string InXml) {
            object[] results = this.Invoke("LoadECNLotBasisLotData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNLotBasisLotDataAsync(string InXml) {
            this.LoadECNLotBasisLotDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNLotBasisLotDataAsync(string InXml, object userState) {
            if ((this.LoadECNLotBasisLotDataOperationCompleted == null)) {
                this.LoadECNLotBasisLotDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNLotBasisLotDataOperationCompleted);
            }
            this.InvokeAsync("LoadECNLotBasisLotData", new object[] {
                        InXml}, this.LoadECNLotBasisLotDataOperationCompleted, userState);
        }
        
        private void OnLoadECNLotBasisLotDataOperationCompleted(object arg) {
            if ((this.LoadECNLotBasisLotDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNLotBasisLotDataCompleted(this, new LoadECNLotBasisLotDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNLotBasis(string InXml) {
            object[] results = this.Invoke("AddECNLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNLotBasisAsync(string InXml) {
            this.AddECNLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNLotBasisAsync(string InXml, object userState) {
            if ((this.AddECNLotBasisOperationCompleted == null)) {
                this.AddECNLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNLotBasisOperationCompleted);
            }
            this.InvokeAsync("AddECNLotBasis", new object[] {
                        InXml}, this.AddECNLotBasisOperationCompleted, userState);
        }
        
        private void OnAddECNLotBasisOperationCompleted(object arg) {
            if ((this.AddECNLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNLotBasisCompleted(this, new AddECNLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNLotBasisLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNLotBasisLog(string InXml) {
            object[] results = this.Invoke("AddECNLotBasisLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNLotBasisLogAsync(string InXml) {
            this.AddECNLotBasisLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNLotBasisLogAsync(string InXml, object userState) {
            if ((this.AddECNLotBasisLogOperationCompleted == null)) {
                this.AddECNLotBasisLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNLotBasisLogOperationCompleted);
            }
            this.InvokeAsync("AddECNLotBasisLog", new object[] {
                        InXml}, this.AddECNLotBasisLogOperationCompleted, userState);
        }
        
        private void OnAddECNLotBasisLogOperationCompleted(object arg) {
            if ((this.AddECNLotBasisLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNLotBasisLogCompleted(this, new AddECNLotBasisLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNLotBasis(string InXml) {
            object[] results = this.Invoke("DelECNLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNLotBasisAsync(string InXml) {
            this.DelECNLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNLotBasisAsync(string InXml, object userState) {
            if ((this.DelECNLotBasisOperationCompleted == null)) {
                this.DelECNLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNLotBasisOperationCompleted);
            }
            this.InvokeAsync("DelECNLotBasis", new object[] {
                        InXml}, this.DelECNLotBasisOperationCompleted, userState);
        }
        
        private void OnDelECNLotBasisOperationCompleted(object arg) {
            if ((this.DelECNLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNLotBasisCompleted(this, new DelECNLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadECNLotLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadECNLotLog(string InXml) {
            object[] results = this.Invoke("LoadECNLotLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadECNLotLogAsync(string InXml) {
            this.LoadECNLotLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadECNLotLogAsync(string InXml, object userState) {
            if ((this.LoadECNLotLogOperationCompleted == null)) {
                this.LoadECNLotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadECNLotLogOperationCompleted);
            }
            this.InvokeAsync("LoadECNLotLog", new object[] {
                        InXml}, this.LoadECNLotLogOperationCompleted, userState);
        }
        
        private void OnLoadECNLotLogOperationCompleted(object arg) {
            if ((this.LoadECNLotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadECNLotLogCompleted(this, new LoadECNLotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddECNLotLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddECNLotLog(string InXml) {
            object[] results = this.Invoke("AddECNLotLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddECNLotLogAsync(string InXml) {
            this.AddECNLotLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddECNLotLogAsync(string InXml, object userState) {
            if ((this.AddECNLotLogOperationCompleted == null)) {
                this.AddECNLotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECNLotLogOperationCompleted);
            }
            this.InvokeAsync("AddECNLotLog", new object[] {
                        InXml}, this.AddECNLotLogOperationCompleted, userState);
        }
        
        private void OnAddECNLotLogOperationCompleted(object arg) {
            if ((this.AddECNLotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECNLotLogCompleted(this, new AddECNLotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelECNLotLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelECNLotLog(string InXml) {
            object[] results = this.Invoke("DelECNLotLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelECNLotLogAsync(string InXml) {
            this.DelECNLotLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelECNLotLogAsync(string InXml, object userState) {
            if ((this.DelECNLotLogOperationCompleted == null)) {
                this.DelECNLotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelECNLotLogOperationCompleted);
            }
            this.InvokeAsync("DelECNLotLog", new object[] {
                        InXml}, this.DelECNLotLogOperationCompleted, userState);
        }
        
        private void OnDelECNLotLogOperationCompleted(object arg) {
            if ((this.DelECNLotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelECNLotLogCompleted(this, new DelECNLotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadGoodBinState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadGoodBinState(string InXml) {
            object[] results = this.Invoke("LoadGoodBinState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadGoodBinStateAsync(string InXml) {
            this.LoadGoodBinStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadGoodBinStateAsync(string InXml, object userState) {
            if ((this.LoadGoodBinStateOperationCompleted == null)) {
                this.LoadGoodBinStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadGoodBinStateOperationCompleted);
            }
            this.InvokeAsync("LoadGoodBinState", new object[] {
                        InXml}, this.LoadGoodBinStateOperationCompleted, userState);
        }
        
        private void OnLoadGoodBinStateOperationCompleted(object arg) {
            if ((this.LoadGoodBinStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadGoodBinStateCompleted(this, new LoadGoodBinStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotNotExecuteOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotNotExecuteOP(string InXml) {
            object[] results = this.Invoke("LoadLotNotExecuteOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotNotExecuteOPAsync(string InXml) {
            this.LoadLotNotExecuteOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotNotExecuteOPAsync(string InXml, object userState) {
            if ((this.LoadLotNotExecuteOPOperationCompleted == null)) {
                this.LoadLotNotExecuteOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotNotExecuteOPOperationCompleted);
            }
            this.InvokeAsync("LoadLotNotExecuteOP", new object[] {
                        InXml}, this.LoadLotNotExecuteOPOperationCompleted, userState);
        }
        
        private void OnLoadLotNotExecuteOPOperationCompleted(object arg) {
            if ((this.LoadLotNotExecuteOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotNotExecuteOPCompleted(this, new LoadLotNotExecuteOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMerge(string InXml) {
            object[] results = this.Invoke("LoadAutoMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeAsync(string InXml) {
            this.LoadAutoMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeOperationCompleted == null)) {
                this.LoadAutoMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMerge", new object[] {
                        InXml}, this.LoadAutoMergeOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeOperationCompleted(object arg) {
            if ((this.LoadAutoMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeCompleted(this, new LoadAutoMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkAutoMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkAutoMerge(string InXml) {
            object[] results = this.Invoke("ChkAutoMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkAutoMergeAsync(string InXml) {
            this.ChkAutoMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkAutoMergeAsync(string InXml, object userState) {
            if ((this.ChkAutoMergeOperationCompleted == null)) {
                this.ChkAutoMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkAutoMergeOperationCompleted);
            }
            this.InvokeAsync("ChkAutoMerge", new object[] {
                        InXml}, this.ChkAutoMergeOperationCompleted, userState);
        }
        
        private void OnChkAutoMergeOperationCompleted(object arg) {
            if ((this.ChkAutoMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkAutoMergeCompleted(this, new ChkAutoMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMergeByFromLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMergeByFromLot(string InXml) {
            object[] results = this.Invoke("LoadAutoMergeByFromLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeByFromLotAsync(string InXml) {
            this.LoadAutoMergeByFromLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeByFromLotAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeByFromLotOperationCompleted == null)) {
                this.LoadAutoMergeByFromLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeByFromLotOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMergeByFromLot", new object[] {
                        InXml}, this.LoadAutoMergeByFromLotOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeByFromLotOperationCompleted(object arg) {
            if ((this.LoadAutoMergeByFromLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeByFromLotCompleted(this, new LoadAutoMergeByFromLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMergeJoinStateByFromLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMergeJoinStateByFromLot(string InXml) {
            object[] results = this.Invoke("LoadAutoMergeJoinStateByFromLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinStateByFromLotAsync(string InXml) {
            this.LoadAutoMergeJoinStateByFromLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinStateByFromLotAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeJoinStateByFromLotOperationCompleted == null)) {
                this.LoadAutoMergeJoinStateByFromLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeJoinStateByFromLotOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMergeJoinStateByFromLot", new object[] {
                        InXml}, this.LoadAutoMergeJoinStateByFromLotOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeJoinStateByFromLotOperationCompleted(object arg) {
            if ((this.LoadAutoMergeJoinStateByFromLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeJoinStateByFromLotCompleted(this, new LoadAutoMergeJoinStateByFromLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMergeJoinStateByToLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMergeJoinStateByToLot(string InXml) {
            object[] results = this.Invoke("LoadAutoMergeJoinStateByToLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinStateByToLotAsync(string InXml) {
            this.LoadAutoMergeJoinStateByToLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinStateByToLotAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeJoinStateByToLotOperationCompleted == null)) {
                this.LoadAutoMergeJoinStateByToLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeJoinStateByToLotOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMergeJoinStateByToLot", new object[] {
                        InXml}, this.LoadAutoMergeJoinStateByToLotOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeJoinStateByToLotOperationCompleted(object arg) {
            if ((this.LoadAutoMergeJoinStateByToLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeJoinStateByToLotCompleted(this, new LoadAutoMergeJoinStateByToLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMergeJoinGoodBinByFromLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMergeJoinGoodBinByFromLot(string InXml) {
            object[] results = this.Invoke("LoadAutoMergeJoinGoodBinByFromLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinGoodBinByFromLotAsync(string InXml) {
            this.LoadAutoMergeJoinGoodBinByFromLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinGoodBinByFromLotAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeJoinGoodBinByFromLotOperationCompleted == null)) {
                this.LoadAutoMergeJoinGoodBinByFromLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeJoinGoodBinByFromLotOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMergeJoinGoodBinByFromLot", new object[] {
                        InXml}, this.LoadAutoMergeJoinGoodBinByFromLotOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeJoinGoodBinByFromLotOperationCompleted(object arg) {
            if ((this.LoadAutoMergeJoinGoodBinByFromLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeJoinGoodBinByFromLotCompleted(this, new LoadAutoMergeJoinGoodBinByFromLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAutoMergeJoinGoodBinByToLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAutoMergeJoinGoodBinByToLot(string InXml) {
            object[] results = this.Invoke("LoadAutoMergeJoinGoodBinByToLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinGoodBinByToLotAsync(string InXml) {
            this.LoadAutoMergeJoinGoodBinByToLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAutoMergeJoinGoodBinByToLotAsync(string InXml, object userState) {
            if ((this.LoadAutoMergeJoinGoodBinByToLotOperationCompleted == null)) {
                this.LoadAutoMergeJoinGoodBinByToLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoMergeJoinGoodBinByToLotOperationCompleted);
            }
            this.InvokeAsync("LoadAutoMergeJoinGoodBinByToLot", new object[] {
                        InXml}, this.LoadAutoMergeJoinGoodBinByToLotOperationCompleted, userState);
        }
        
        private void OnLoadAutoMergeJoinGoodBinByToLotOperationCompleted(object arg) {
            if ((this.LoadAutoMergeJoinGoodBinByToLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoMergeJoinGoodBinByToLotCompleted(this, new LoadAutoMergeJoinGoodBinByToLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotProperty_Recive", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotProperty_Recive(string InXml) {
            object[] results = this.Invoke("LoadLotProperty_Recive", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotProperty_ReciveAsync(string InXml) {
            this.LoadLotProperty_ReciveAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotProperty_ReciveAsync(string InXml, object userState) {
            if ((this.LoadLotProperty_ReciveOperationCompleted == null)) {
                this.LoadLotProperty_ReciveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotProperty_ReciveOperationCompleted);
            }
            this.InvokeAsync("LoadLotProperty_Recive", new object[] {
                        InXml}, this.LoadLotProperty_ReciveOperationCompleted, userState);
        }
        
        private void OnLoadLotProperty_ReciveOperationCompleted(object arg) {
            if ((this.LoadLotProperty_ReciveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotProperty_ReciveCompleted(this, new LoadLotProperty_ReciveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotProperty_Recive", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotProperty_Recive(string InXml) {
            object[] results = this.Invoke("AddLotProperty_Recive", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotProperty_ReciveAsync(string InXml) {
            this.AddLotProperty_ReciveAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotProperty_ReciveAsync(string InXml, object userState) {
            if ((this.AddLotProperty_ReciveOperationCompleted == null)) {
                this.AddLotProperty_ReciveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotProperty_ReciveOperationCompleted);
            }
            this.InvokeAsync("AddLotProperty_Recive", new object[] {
                        InXml}, this.AddLotProperty_ReciveOperationCompleted, userState);
        }
        
        private void OnAddLotProperty_ReciveOperationCompleted(object arg) {
            if ((this.AddLotProperty_ReciveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotProperty_ReciveCompleted(this, new AddLotProperty_ReciveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotProperty_Recive", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotProperty_Recive(string InXml) {
            object[] results = this.Invoke("EditLotProperty_Recive", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotProperty_ReciveAsync(string InXml) {
            this.EditLotProperty_ReciveAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotProperty_ReciveAsync(string InXml, object userState) {
            if ((this.EditLotProperty_ReciveOperationCompleted == null)) {
                this.EditLotProperty_ReciveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotProperty_ReciveOperationCompleted);
            }
            this.InvokeAsync("EditLotProperty_Recive", new object[] {
                        InXml}, this.EditLotProperty_ReciveOperationCompleted, userState);
        }
        
        private void OnEditLotProperty_ReciveOperationCompleted(object arg) {
            if ((this.EditLotProperty_ReciveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotProperty_ReciveCompleted(this, new EditLotProperty_ReciveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotProperty_Recive", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotProperty_Recive(string InXml) {
            object[] results = this.Invoke("DelLotProperty_Recive", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotProperty_ReciveAsync(string InXml) {
            this.DelLotProperty_ReciveAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotProperty_ReciveAsync(string InXml, object userState) {
            if ((this.DelLotProperty_ReciveOperationCompleted == null)) {
                this.DelLotProperty_ReciveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotProperty_ReciveOperationCompleted);
            }
            this.InvokeAsync("DelLotProperty_Recive", new object[] {
                        InXml}, this.DelLotProperty_ReciveOperationCompleted, userState);
        }
        
        private void OnDelLotProperty_ReciveOperationCompleted(object arg) {
            if ((this.DelLotProperty_ReciveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotProperty_ReciveCompleted(this, new DelLotProperty_ReciveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFBasis(string InXml) {
            object[] results = this.Invoke("LoadERFBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFBasisAsync(string InXml) {
            this.LoadERFBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFBasisAsync(string InXml, object userState) {
            if ((this.LoadERFBasisOperationCompleted == null)) {
                this.LoadERFBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFBasisOperationCompleted);
            }
            this.InvokeAsync("LoadERFBasis", new object[] {
                        InXml}, this.LoadERFBasisOperationCompleted, userState);
        }
        
        private void OnLoadERFBasisOperationCompleted(object arg) {
            if ((this.LoadERFBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFBasisCompleted(this, new LoadERFBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFBasisJoinLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFBasisJoinLotBasis(string InXml) {
            object[] results = this.Invoke("LoadERFBasisJoinLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFBasisJoinLotBasisAsync(string InXml) {
            this.LoadERFBasisJoinLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFBasisJoinLotBasisAsync(string InXml, object userState) {
            if ((this.LoadERFBasisJoinLotBasisOperationCompleted == null)) {
                this.LoadERFBasisJoinLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFBasisJoinLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadERFBasisJoinLotBasis", new object[] {
                        InXml}, this.LoadERFBasisJoinLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadERFBasisJoinLotBasisOperationCompleted(object arg) {
            if ((this.LoadERFBasisJoinLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFBasisJoinLotBasisCompleted(this, new LoadERFBasisJoinLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFBasisJoinLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFBasisJoinLotState(string InXml) {
            object[] results = this.Invoke("LoadERFBasisJoinLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFBasisJoinLotStateAsync(string InXml) {
            this.LoadERFBasisJoinLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFBasisJoinLotStateAsync(string InXml, object userState) {
            if ((this.LoadERFBasisJoinLotStateOperationCompleted == null)) {
                this.LoadERFBasisJoinLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFBasisJoinLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadERFBasisJoinLotState", new object[] {
                        InXml}, this.LoadERFBasisJoinLotStateOperationCompleted, userState);
        }
        
        private void OnLoadERFBasisJoinLotStateOperationCompleted(object arg) {
            if ((this.LoadERFBasisJoinLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFBasisJoinLotStateCompleted(this, new LoadERFBasisJoinLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFDisposition", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFDisposition(string InXml) {
            object[] results = this.Invoke("LoadERFDisposition", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFDispositionAsync(string InXml) {
            this.LoadERFDispositionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFDispositionAsync(string InXml, object userState) {
            if ((this.LoadERFDispositionOperationCompleted == null)) {
                this.LoadERFDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFDispositionOperationCompleted);
            }
            this.InvokeAsync("LoadERFDisposition", new object[] {
                        InXml}, this.LoadERFDispositionOperationCompleted, userState);
        }
        
        private void OnLoadERFDispositionOperationCompleted(object arg) {
            if ((this.LoadERFDispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFDispositionCompleted(this, new LoadERFDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFHoldReasonDisp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFHoldReasonDisp(string InXml) {
            object[] results = this.Invoke("LoadERFHoldReasonDisp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFHoldReasonDispAsync(string InXml) {
            this.LoadERFHoldReasonDispAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFHoldReasonDispAsync(string InXml, object userState) {
            if ((this.LoadERFHoldReasonDispOperationCompleted == null)) {
                this.LoadERFHoldReasonDispOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFHoldReasonDispOperationCompleted);
            }
            this.InvokeAsync("LoadERFHoldReasonDisp", new object[] {
                        InXml}, this.LoadERFHoldReasonDispOperationCompleted, userState);
        }
        
        private void OnLoadERFHoldReasonDispOperationCompleted(object arg) {
            if ((this.LoadERFHoldReasonDispCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFHoldReasonDispCompleted(this, new LoadERFHoldReasonDispCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFHoldReason", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFHoldReason(string InXml) {
            object[] results = this.Invoke("LoadERFHoldReason", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFHoldReasonAsync(string InXml) {
            this.LoadERFHoldReasonAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFHoldReasonAsync(string InXml, object userState) {
            if ((this.LoadERFHoldReasonOperationCompleted == null)) {
                this.LoadERFHoldReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFHoldReasonOperationCompleted);
            }
            this.InvokeAsync("LoadERFHoldReason", new object[] {
                        InXml}, this.LoadERFHoldReasonOperationCompleted, userState);
        }
        
        private void OnLoadERFHoldReasonOperationCompleted(object arg) {
            if ((this.LoadERFHoldReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFHoldReasonCompleted(this, new LoadERFHoldReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadERFLotDisposition", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadERFLotDisposition(string InXml) {
            object[] results = this.Invoke("LoadERFLotDisposition", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadERFLotDispositionAsync(string InXml) {
            this.LoadERFLotDispositionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadERFLotDispositionAsync(string InXml, object userState) {
            if ((this.LoadERFLotDispositionOperationCompleted == null)) {
                this.LoadERFLotDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadERFLotDispositionOperationCompleted);
            }
            this.InvokeAsync("LoadERFLotDisposition", new object[] {
                        InXml}, this.LoadERFLotDispositionOperationCompleted, userState);
        }
        
        private void OnLoadERFLotDispositionOperationCompleted(object arg) {
            if ((this.LoadERFLotDispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadERFLotDispositionCompleted(this, new LoadERFLotDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFutureWait", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFutureWait(string InXml) {
            object[] results = this.Invoke("LoadFutureWait", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFutureWaitAsync(string InXml) {
            this.LoadFutureWaitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFutureWaitAsync(string InXml, object userState) {
            if ((this.LoadFutureWaitOperationCompleted == null)) {
                this.LoadFutureWaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFutureWaitOperationCompleted);
            }
            this.InvokeAsync("LoadFutureWait", new object[] {
                        InXml}, this.LoadFutureWaitOperationCompleted, userState);
        }
        
        private void OnLoadFutureWaitOperationCompleted(object arg) {
            if ((this.LoadFutureWaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFutureWaitCompleted(this, new LoadFutureWaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FutureWait_Set", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FutureWait_Set(string InXml) {
            object[] results = this.Invoke("Exe_FutureWait_Set", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FutureWait_SetAsync(string InXml) {
            this.Exe_FutureWait_SetAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FutureWait_SetAsync(string InXml, object userState) {
            if ((this.Exe_FutureWait_SetOperationCompleted == null)) {
                this.Exe_FutureWait_SetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FutureWait_SetOperationCompleted);
            }
            this.InvokeAsync("Exe_FutureWait_Set", new object[] {
                        InXml}, this.Exe_FutureWait_SetOperationCompleted, userState);
        }
        
        private void OnExe_FutureWait_SetOperationCompleted(object arg) {
            if ((this.Exe_FutureWait_SetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FutureWait_SetCompleted(this, new Exe_FutureWait_SetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFutureWait", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFutureWait(string InXml) {
            object[] results = this.Invoke("DelFutureWait", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFutureWaitAsync(string InXml) {
            this.DelFutureWaitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFutureWaitAsync(string InXml, object userState) {
            if ((this.DelFutureWaitOperationCompleted == null)) {
                this.DelFutureWaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFutureWaitOperationCompleted);
            }
            this.InvokeAsync("DelFutureWait", new object[] {
                        InXml}, this.DelFutureWaitOperationCompleted, userState);
        }
        
        private void OnDelFutureWaitOperationCompleted(object arg) {
            if ((this.DelFutureWaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFutureWaitCompleted(this, new DelFutureWaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkLotStamp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkLotStamp(string InXml) {
            object[] results = this.Invoke("ChkLotStamp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkLotStampAsync(string InXml) {
            this.ChkLotStampAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkLotStampAsync(string InXml, object userState) {
            if ((this.ChkLotStampOperationCompleted == null)) {
                this.ChkLotStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkLotStampOperationCompleted);
            }
            this.InvokeAsync("ChkLotStamp", new object[] {
                        InXml}, this.ChkLotStampOperationCompleted, userState);
        }
        
        private void OnChkLotStampOperationCompleted(object arg) {
            if ((this.ChkLotStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkLotStampCompleted(this, new ChkLotStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkWIPEQPCcnsume", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkWIPEQPCcnsume(string InXml) {
            object[] results = this.Invoke("ChkWIPEQPCcnsume", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkWIPEQPCcnsumeAsync(string InXml) {
            this.ChkWIPEQPCcnsumeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkWIPEQPCcnsumeAsync(string InXml, object userState) {
            if ((this.ChkWIPEQPCcnsumeOperationCompleted == null)) {
                this.ChkWIPEQPCcnsumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkWIPEQPCcnsumeOperationCompleted);
            }
            this.InvokeAsync("ChkWIPEQPCcnsume", new object[] {
                        InXml}, this.ChkWIPEQPCcnsumeOperationCompleted, userState);
        }
        
        private void OnChkWIPEQPCcnsumeOperationCompleted(object arg) {
            if ((this.ChkWIPEQPCcnsumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkWIPEQPCcnsumeCompleted(this, new ChkWIPEQPCcnsumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFutureHold", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFutureHold(string InXml) {
            object[] results = this.Invoke("LoadFutureHold", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFutureHoldAsync(string InXml) {
            this.LoadFutureHoldAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFutureHoldAsync(string InXml, object userState) {
            if ((this.LoadFutureHoldOperationCompleted == null)) {
                this.LoadFutureHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFutureHoldOperationCompleted);
            }
            this.InvokeAsync("LoadFutureHold", new object[] {
                        InXml}, this.LoadFutureHoldOperationCompleted, userState);
        }
        
        private void OnLoadFutureHoldOperationCompleted(object arg) {
            if ((this.LoadFutureHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFutureHoldCompleted(this, new LoadFutureHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFutureHoldReason", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFutureHoldReason(string InXml) {
            object[] results = this.Invoke("LoadFutureHoldReason", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFutureHoldReasonAsync(string InXml) {
            this.LoadFutureHoldReasonAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFutureHoldReasonAsync(string InXml, object userState) {
            if ((this.LoadFutureHoldReasonOperationCompleted == null)) {
                this.LoadFutureHoldReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFutureHoldReasonOperationCompleted);
            }
            this.InvokeAsync("LoadFutureHoldReason", new object[] {
                        InXml}, this.LoadFutureHoldReasonOperationCompleted, userState);
        }
        
        private void OnLoadFutureHoldReasonOperationCompleted(object arg) {
            if ((this.LoadFutureHoldReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFutureHoldReasonCompleted(this, new LoadFutureHoldReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFutureHoldReasonJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFutureHoldReasonJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadFutureHoldReasonJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFutureHoldReasonJoinBasisAsync(string InXml) {
            this.LoadFutureHoldReasonJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFutureHoldReasonJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadFutureHoldReasonJoinBasisOperationCompleted == null)) {
                this.LoadFutureHoldReasonJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFutureHoldReasonJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadFutureHoldReasonJoinBasis", new object[] {
                        InXml}, this.LoadFutureHoldReasonJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadFutureHoldReasonJoinBasisOperationCompleted(object arg) {
            if ((this.LoadFutureHoldReasonJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFutureHoldReasonJoinBasisCompleted(this, new LoadFutureHoldReasonJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FutureHold_Set", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FutureHold_Set(string InXml) {
            object[] results = this.Invoke("Exe_FutureHold_Set", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FutureHold_SetAsync(string InXml) {
            this.Exe_FutureHold_SetAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FutureHold_SetAsync(string InXml, object userState) {
            if ((this.Exe_FutureHold_SetOperationCompleted == null)) {
                this.Exe_FutureHold_SetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FutureHold_SetOperationCompleted);
            }
            this.InvokeAsync("Exe_FutureHold_Set", new object[] {
                        InXml}, this.Exe_FutureHold_SetOperationCompleted, userState);
        }
        
        private void OnExe_FutureHold_SetOperationCompleted(object arg) {
            if ((this.Exe_FutureHold_SetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FutureHold_SetCompleted(this, new Exe_FutureHold_SetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelFutureHold", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelFutureHold(string InXml) {
            object[] results = this.Invoke("DelFutureHold", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelFutureHoldAsync(string InXml) {
            this.DelFutureHoldAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelFutureHoldAsync(string InXml, object userState) {
            if ((this.DelFutureHoldOperationCompleted == null)) {
                this.DelFutureHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFutureHoldOperationCompleted);
            }
            this.InvokeAsync("DelFutureHold", new object[] {
                        InXml}, this.DelFutureHoldOperationCompleted, userState);
        }
        
        private void OnDelFutureHoldOperationCompleted(object arg) {
            if ((this.DelFutureHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFutureHoldCompleted(this, new DelFutureHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotOPArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotOPArea(string InXml) {
            object[] results = this.Invoke("LoadLotOPArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotOPAreaAsync(string InXml) {
            this.LoadLotOPAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotOPAreaAsync(string InXml, object userState) {
            if ((this.LoadLotOPAreaOperationCompleted == null)) {
                this.LoadLotOPAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotOPAreaOperationCompleted);
            }
            this.InvokeAsync("LoadLotOPArea", new object[] {
                        InXml}, this.LoadLotOPAreaOperationCompleted, userState);
        }
        
        private void OnLoadLotOPAreaOperationCompleted(object arg) {
            if ((this.LoadLotOPAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotOPAreaCompleted(this, new LoadLotOPAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotOPArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotOPArea(string InXml) {
            object[] results = this.Invoke("AddLotOPArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotOPAreaAsync(string InXml) {
            this.AddLotOPAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotOPAreaAsync(string InXml, object userState) {
            if ((this.AddLotOPAreaOperationCompleted == null)) {
                this.AddLotOPAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotOPAreaOperationCompleted);
            }
            this.InvokeAsync("AddLotOPArea", new object[] {
                        InXml}, this.AddLotOPAreaOperationCompleted, userState);
        }
        
        private void OnAddLotOPAreaOperationCompleted(object arg) {
            if ((this.AddLotOPAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotOPAreaCompleted(this, new AddLotOPAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotOPArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotOPArea(string InXml) {
            object[] results = this.Invoke("EditLotOPArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotOPAreaAsync(string InXml) {
            this.EditLotOPAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotOPAreaAsync(string InXml, object userState) {
            if ((this.EditLotOPAreaOperationCompleted == null)) {
                this.EditLotOPAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotOPAreaOperationCompleted);
            }
            this.InvokeAsync("EditLotOPArea", new object[] {
                        InXml}, this.EditLotOPAreaOperationCompleted, userState);
        }
        
        private void OnEditLotOPAreaOperationCompleted(object arg) {
            if ((this.EditLotOPAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotOPAreaCompleted(this, new EditLotOPAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotOPArea", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotOPArea(string InXml) {
            object[] results = this.Invoke("DelLotOPArea", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotOPAreaAsync(string InXml) {
            this.DelLotOPAreaAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotOPAreaAsync(string InXml, object userState) {
            if ((this.DelLotOPAreaOperationCompleted == null)) {
                this.DelLotOPAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotOPAreaOperationCompleted);
            }
            this.InvokeAsync("DelLotOPArea", new object[] {
                        InXml}, this.DelLotOPAreaOperationCompleted, userState);
        }
        
        private void OnDelLotOPAreaOperationCompleted(object arg) {
            if ((this.DelLotOPAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotOPAreaCompleted(this, new DelLotOPAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Material_JoinLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Material_JoinLog(string InXml) {
            object[] results = this.Invoke("LoadCont_Material_JoinLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_Material_JoinLogAsync(string InXml) {
            this.LoadCont_Material_JoinLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_Material_JoinLogAsync(string InXml, object userState) {
            if ((this.LoadCont_Material_JoinLogOperationCompleted == null)) {
                this.LoadCont_Material_JoinLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_Material_JoinLogOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Material_JoinLog", new object[] {
                        InXml}, this.LoadCont_Material_JoinLogOperationCompleted, userState);
        }
        
        private void OnLoadCont_Material_JoinLogOperationCompleted(object arg) {
            if ((this.LoadCont_Material_JoinLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_Material_JoinLogCompleted(this, new LoadCont_Material_JoinLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Abnormal_JoinLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Abnormal_JoinLog(string InXml) {
            object[] results = this.Invoke("LoadCont_Abnormal_JoinLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_Abnormal_JoinLogAsync(string InXml) {
            this.LoadCont_Abnormal_JoinLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_Abnormal_JoinLogAsync(string InXml, object userState) {
            if ((this.LoadCont_Abnormal_JoinLogOperationCompleted == null)) {
                this.LoadCont_Abnormal_JoinLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_Abnormal_JoinLogOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Abnormal_JoinLog", new object[] {
                        InXml}, this.LoadCont_Abnormal_JoinLogOperationCompleted, userState);
        }
        
        private void OnLoadCont_Abnormal_JoinLogOperationCompleted(object arg) {
            if ((this.LoadCont_Abnormal_JoinLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_Abnormal_JoinLogCompleted(this, new LoadCont_Abnormal_JoinLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_AbnormalRepair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_AbnormalRepair(string InXml) {
            object[] results = this.Invoke("LoadCont_AbnormalRepair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_AbnormalRepairAsync(string InXml) {
            this.LoadCont_AbnormalRepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_AbnormalRepairAsync(string InXml, object userState) {
            if ((this.LoadCont_AbnormalRepairOperationCompleted == null)) {
                this.LoadCont_AbnormalRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_AbnormalRepairOperationCompleted);
            }
            this.InvokeAsync("LoadCont_AbnormalRepair", new object[] {
                        InXml}, this.LoadCont_AbnormalRepairOperationCompleted, userState);
        }
        
        private void OnLoadCont_AbnormalRepairOperationCompleted(object arg) {
            if ((this.LoadCont_AbnormalRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_AbnormalRepairCompleted(this, new LoadCont_AbnormalRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Attrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Attrib(string InXml) {
            object[] results = this.Invoke("LoadCont_Attrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_AttribAsync(string InXml) {
            this.LoadCont_AttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_AttribAsync(string InXml, object userState) {
            if ((this.LoadCont_AttribOperationCompleted == null)) {
                this.LoadCont_AttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_AttribOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Attrib", new object[] {
                        InXml}, this.LoadCont_AttribOperationCompleted, userState);
        }
        
        private void OnLoadCont_AttribOperationCompleted(object arg) {
            if ((this.LoadCont_AttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_AttribCompleted(this, new LoadCont_AttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_LotRecord", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_LotRecord(string InXml) {
            object[] results = this.Invoke("LoadCont_LotRecord", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_LotRecordAsync(string InXml) {
            this.LoadCont_LotRecordAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_LotRecordAsync(string InXml, object userState) {
            if ((this.LoadCont_LotRecordOperationCompleted == null)) {
                this.LoadCont_LotRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_LotRecordOperationCompleted);
            }
            this.InvokeAsync("LoadCont_LotRecord", new object[] {
                        InXml}, this.LoadCont_LotRecordOperationCompleted, userState);
        }
        
        private void OnLoadCont_LotRecordOperationCompleted(object arg) {
            if ((this.LoadCont_LotRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_LotRecordCompleted(this, new LoadCont_LotRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Employee", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Employee(string InXml) {
            object[] results = this.Invoke("LoadCont_Employee", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_EmployeeAsync(string InXml) {
            this.LoadCont_EmployeeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_EmployeeAsync(string InXml, object userState) {
            if ((this.LoadCont_EmployeeOperationCompleted == null)) {
                this.LoadCont_EmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_EmployeeOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Employee", new object[] {
                        InXml}, this.LoadCont_EmployeeOperationCompleted, userState);
        }
        
        private void OnLoadCont_EmployeeOperationCompleted(object arg) {
            if ((this.LoadCont_EmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_EmployeeCompleted(this, new LoadCont_EmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Equipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Equipment(string InXml) {
            object[] results = this.Invoke("LoadCont_Equipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_EquipmentAsync(string InXml) {
            this.LoadCont_EquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_EquipmentAsync(string InXml, object userState) {
            if ((this.LoadCont_EquipmentOperationCompleted == null)) {
                this.LoadCont_EquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_EquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Equipment", new object[] {
                        InXml}, this.LoadCont_EquipmentOperationCompleted, userState);
        }
        
        private void OnLoadCont_EquipmentOperationCompleted(object arg) {
            if ((this.LoadCont_EquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_EquipmentCompleted(this, new LoadCont_EquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Accessory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Accessory(string InXml) {
            object[] results = this.Invoke("LoadCont_Accessory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_AccessoryAsync(string InXml) {
            this.LoadCont_AccessoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_AccessoryAsync(string InXml, object userState) {
            if ((this.LoadCont_AccessoryOperationCompleted == null)) {
                this.LoadCont_AccessoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_AccessoryOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Accessory", new object[] {
                        InXml}, this.LoadCont_AccessoryOperationCompleted, userState);
        }
        
        private void OnLoadCont_AccessoryOperationCompleted(object arg) {
            if ((this.LoadCont_AccessoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_AccessoryCompleted(this, new LoadCont_AccessoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotMerge(string InXml) {
            object[] results = this.Invoke("Exe_LotMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotMergeAsync(string InXml) {
            this.Exe_LotMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotMergeAsync(string InXml, object userState) {
            if ((this.Exe_LotMergeOperationCompleted == null)) {
                this.Exe_LotMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotMergeOperationCompleted);
            }
            this.InvokeAsync("Exe_LotMerge", new object[] {
                        InXml}, this.Exe_LotMergeOperationCompleted, userState);
        }
        
        private void OnExe_LotMergeOperationCompleted(object arg) {
            if ((this.Exe_LotMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotMergeCompleted(this, new Exe_LotMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotMerge(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMergeAsync(string InXml) {
            this.Exe_Manual_LotMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMergeAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotMergeOperationCompleted == null)) {
                this.Exe_Manual_LotMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotMergeOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotMerge", new object[] {
                        InXml}, this.Exe_Manual_LotMergeOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotMergeOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotMergeCompleted(this, new Exe_Manual_LotMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotMerge_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotMerge_Bin(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotMerge_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_BinAsync(string InXml) {
            this.Exe_Manual_LotMerge_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_BinAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotMerge_BinOperationCompleted == null)) {
                this.Exe_Manual_LotMerge_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotMerge_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotMerge_Bin", new object[] {
                        InXml}, this.Exe_Manual_LotMerge_BinOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotMerge_BinOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotMerge_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotMerge_BinCompleted(this, new Exe_Manual_LotMerge_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotMerge_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotMerge_Component(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotMerge_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_ComponentAsync(string InXml) {
            this.Exe_Manual_LotMerge_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotMerge_ComponentOperationCompleted == null)) {
                this.Exe_Manual_LotMerge_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotMerge_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotMerge_Component", new object[] {
                        InXml}, this.Exe_Manual_LotMerge_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotMerge_ComponentOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotMerge_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotMerge_ComponentCompleted(this, new Exe_Manual_LotMerge_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotMerge_Carrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotMerge_Carrier(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotMerge_Carrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_CarrierAsync(string InXml) {
            this.Exe_Manual_LotMerge_CarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotMerge_CarrierAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotMerge_CarrierOperationCompleted == null)) {
                this.Exe_Manual_LotMerge_CarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotMerge_CarrierOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotMerge_Carrier", new object[] {
                        InXml}, this.Exe_Manual_LotMerge_CarrierOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotMerge_CarrierOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotMerge_CarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotMerge_CarrierCompleted(this, new Exe_Manual_LotMerge_CarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_Create", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_Create(string InXml) {
            object[] results = this.Invoke("Exe_ERF_Create", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_CreateAsync(string InXml) {
            this.Exe_ERF_CreateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_CreateAsync(string InXml, object userState) {
            if ((this.Exe_ERF_CreateOperationCompleted == null)) {
                this.Exe_ERF_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_CreateOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_Create", new object[] {
                        InXml}, this.Exe_ERF_CreateOperationCompleted, userState);
        }
        
        private void OnExe_ERF_CreateOperationCompleted(object arg) {
            if ((this.Exe_ERF_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_CreateCompleted(this, new Exe_ERF_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_Disposition", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_Disposition(string InXml) {
            object[] results = this.Invoke("Exe_ERF_Disposition", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_DispositionAsync(string InXml) {
            this.Exe_ERF_DispositionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_DispositionAsync(string InXml, object userState) {
            if ((this.Exe_ERF_DispositionOperationCompleted == null)) {
                this.Exe_ERF_DispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_DispositionOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_Disposition", new object[] {
                        InXml}, this.Exe_ERF_DispositionOperationCompleted, userState);
        }
        
        private void OnExe_ERF_DispositionOperationCompleted(object arg) {
            if ((this.Exe_ERF_DispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_DispositionCompleted(this, new Exe_ERF_DispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_BackToERFDisposition", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_BackToERFDisposition(string InXml) {
            object[] results = this.Invoke("Exe_ERF_BackToERFDisposition", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_BackToERFDispositionAsync(string InXml) {
            this.Exe_ERF_BackToERFDispositionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_BackToERFDispositionAsync(string InXml, object userState) {
            if ((this.Exe_ERF_BackToERFDispositionOperationCompleted == null)) {
                this.Exe_ERF_BackToERFDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_BackToERFDispositionOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_BackToERFDisposition", new object[] {
                        InXml}, this.Exe_ERF_BackToERFDispositionOperationCompleted, userState);
        }
        
        private void OnExe_ERF_BackToERFDispositionOperationCompleted(object arg) {
            if ((this.Exe_ERF_BackToERFDispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_BackToERFDispositionCompleted(this, new Exe_ERF_BackToERFDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_Abort", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_Abort(string InXml) {
            object[] results = this.Invoke("Exe_ERF_Abort", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_AbortAsync(string InXml) {
            this.Exe_ERF_AbortAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_AbortAsync(string InXml, object userState) {
            if ((this.Exe_ERF_AbortOperationCompleted == null)) {
                this.Exe_ERF_AbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_AbortOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_Abort", new object[] {
                        InXml}, this.Exe_ERF_AbortOperationCompleted, userState);
        }
        
        private void OnExe_ERF_AbortOperationCompleted(object arg) {
            if ((this.Exe_ERF_AbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_AbortCompleted(this, new Exe_ERF_AbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotRelease(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotReleaseAsync(string InXml) {
            this.Exe_ERF_LotReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotReleaseAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotReleaseOperationCompleted == null)) {
                this.Exe_ERF_LotReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotReleaseOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotRelease", new object[] {
                        InXml}, this.Exe_ERF_LotReleaseOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotReleaseOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotReleaseCompleted(this, new Exe_ERF_LotReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotSplit(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplitAsync(string InXml) {
            this.Exe_ERF_LotSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplitAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotSplitOperationCompleted == null)) {
                this.Exe_ERF_LotSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotSplit", new object[] {
                        InXml}, this.Exe_ERF_LotSplitOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotSplitOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotSplitCompleted(this, new Exe_ERF_LotSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotSplit_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotSplit_Bin(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotSplit_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplit_BinAsync(string InXml) {
            this.Exe_ERF_LotSplit_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplit_BinAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotSplit_BinOperationCompleted == null)) {
                this.Exe_ERF_LotSplit_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotSplit_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotSplit_Bin", new object[] {
                        InXml}, this.Exe_ERF_LotSplit_BinOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotSplit_BinOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotSplit_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotSplit_BinCompleted(this, new Exe_ERF_LotSplit_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotSplit_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotSplit_Component(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotSplit_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplit_ComponentAsync(string InXml) {
            this.Exe_ERF_LotSplit_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotSplit_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotSplit_ComponentOperationCompleted == null)) {
                this.Exe_ERF_LotSplit_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotSplit_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotSplit_Component", new object[] {
                        InXml}, this.Exe_ERF_LotSplit_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotSplit_ComponentOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotSplit_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotSplit_ComponentCompleted(this, new Exe_ERF_LotSplit_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotMerge", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotMerge(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotMerge", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMergeAsync(string InXml) {
            this.Exe_ERF_LotMergeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMergeAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotMergeOperationCompleted == null)) {
                this.Exe_ERF_LotMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotMergeOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotMerge", new object[] {
                        InXml}, this.Exe_ERF_LotMergeOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotMergeOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotMergeCompleted(this, new Exe_ERF_LotMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotMerge_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotMerge_Bin(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotMerge_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMerge_BinAsync(string InXml) {
            this.Exe_ERF_LotMerge_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMerge_BinAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotMerge_BinOperationCompleted == null)) {
                this.Exe_ERF_LotMerge_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotMerge_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotMerge_Bin", new object[] {
                        InXml}, this.Exe_ERF_LotMerge_BinOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotMerge_BinOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotMerge_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotMerge_BinCompleted(this, new Exe_ERF_LotMerge_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ERF_LotMerge_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ERF_LotMerge_Component(string InXml) {
            object[] results = this.Invoke("Exe_ERF_LotMerge_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMerge_ComponentAsync(string InXml) {
            this.Exe_ERF_LotMerge_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ERF_LotMerge_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_ERF_LotMerge_ComponentOperationCompleted == null)) {
                this.Exe_ERF_LotMerge_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ERF_LotMerge_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_ERF_LotMerge_Component", new object[] {
                        InXml}, this.Exe_ERF_LotMerge_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_ERF_LotMerge_ComponentOperationCompleted(object arg) {
            if ((this.Exe_ERF_LotMerge_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ERF_LotMerge_ComponentCompleted(this, new Exe_ERF_LotMerge_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SendEmailToGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailToGroup(string InXml) {
            object[] results = this.Invoke("SendEmailToGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailToGroupAsync(string InXml) {
            this.SendEmailToGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SendEmailToGroupAsync(string InXml, object userState) {
            if ((this.SendEmailToGroupOperationCompleted == null)) {
                this.SendEmailToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailToGroupOperationCompleted);
            }
            this.InvokeAsync("SendEmailToGroup", new object[] {
                        InXml}, this.SendEmailToGroupOperationCompleted, userState);
        }
        
        private void OnSendEmailToGroupOperationCompleted(object arg) {
            if ((this.SendEmailToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailToGroupCompleted(this, new SendEmailToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SendEmailAndAttachFileToGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailAndAttachFileToGroup(string InXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] AttachFileContent) {
            object[] results = this.Invoke("SendEmailAndAttachFileToGroup", new object[] {
                        InXml,
                        AttachFileContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAndAttachFileToGroupAsync(string InXml, byte[] AttachFileContent) {
            this.SendEmailAndAttachFileToGroupAsync(InXml, AttachFileContent, null);
        }
        
        /// <remarks/>
        public void SendEmailAndAttachFileToGroupAsync(string InXml, byte[] AttachFileContent, object userState) {
            if ((this.SendEmailAndAttachFileToGroupOperationCompleted == null)) {
                this.SendEmailAndAttachFileToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailAndAttachFileToGroupOperationCompleted);
            }
            this.InvokeAsync("SendEmailAndAttachFileToGroup", new object[] {
                        InXml,
                        AttachFileContent}, this.SendEmailAndAttachFileToGroupOperationCompleted, userState);
        }
        
        private void OnSendEmailAndAttachFileToGroupOperationCompleted(object arg) {
            if ((this.SendEmailAndAttachFileToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailAndAttachFileToGroupCompleted(this, new SendEmailAndAttachFileToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SendEmailToERFGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailToERFGroup(string InXml) {
            object[] results = this.Invoke("SendEmailToERFGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailToERFGroupAsync(string InXml) {
            this.SendEmailToERFGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SendEmailToERFGroupAsync(string InXml, object userState) {
            if ((this.SendEmailToERFGroupOperationCompleted == null)) {
                this.SendEmailToERFGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailToERFGroupOperationCompleted);
            }
            this.InvokeAsync("SendEmailToERFGroup", new object[] {
                        InXml}, this.SendEmailToERFGroupOperationCompleted, userState);
        }
        
        private void OnSendEmailToERFGroupOperationCompleted(object arg) {
            if ((this.SendEmailToERFGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailToERFGroupCompleted(this, new SendEmailToERFGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SendEmailToERFGroup_NoneERF", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailToERFGroup_NoneERF(string InXml) {
            object[] results = this.Invoke("SendEmailToERFGroup_NoneERF", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailToERFGroup_NoneERFAsync(string InXml) {
            this.SendEmailToERFGroup_NoneERFAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SendEmailToERFGroup_NoneERFAsync(string InXml, object userState) {
            if ((this.SendEmailToERFGroup_NoneERFOperationCompleted == null)) {
                this.SendEmailToERFGroup_NoneERFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailToERFGroup_NoneERFOperationCompleted);
            }
            this.InvokeAsync("SendEmailToERFGroup_NoneERF", new object[] {
                        InXml}, this.SendEmailToERFGroup_NoneERFOperationCompleted, userState);
        }
        
        private void OnSendEmailToERFGroup_NoneERFOperationCompleted(object arg) {
            if ((this.SendEmailToERFGroup_NoneERFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailToERFGroup_NoneERFCompleted(this, new SendEmailToERFGroup_NoneERFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Chk_ERF_LotRelease", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Chk_ERF_LotRelease(string InXml) {
            object[] results = this.Invoke("Chk_ERF_LotRelease", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Chk_ERF_LotReleaseAsync(string InXml) {
            this.Chk_ERF_LotReleaseAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Chk_ERF_LotReleaseAsync(string InXml, object userState) {
            if ((this.Chk_ERF_LotReleaseOperationCompleted == null)) {
                this.Chk_ERF_LotReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChk_ERF_LotReleaseOperationCompleted);
            }
            this.InvokeAsync("Chk_ERF_LotRelease", new object[] {
                        InXml}, this.Chk_ERF_LotReleaseOperationCompleted, userState);
        }
        
        private void OnChk_ERF_LotReleaseOperationCompleted(object arg) {
            if ((this.Chk_ERF_LotReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Chk_ERF_LotReleaseCompleted(this, new Chk_ERF_LotReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Packing", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Packing(string InXml) {
            object[] results = this.Invoke("Exe_Packing", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_PackingAsync(string InXml) {
            this.Exe_PackingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_PackingAsync(string InXml, object userState) {
            if ((this.Exe_PackingOperationCompleted == null)) {
                this.Exe_PackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_PackingOperationCompleted);
            }
            this.InvokeAsync("Exe_Packing", new object[] {
                        InXml}, this.Exe_PackingOperationCompleted, userState);
        }
        
        private void OnExe_PackingOperationCompleted(object arg) {
            if ((this.Exe_PackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_PackingCompleted(this, new Exe_PackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ProductVersionChange", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ProductVersionChange(string InXml) {
            object[] results = this.Invoke("Exe_ProductVersionChange", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ProductVersionChangeAsync(string InXml) {
            this.Exe_ProductVersionChangeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ProductVersionChangeAsync(string InXml, object userState) {
            if ((this.Exe_ProductVersionChangeOperationCompleted == null)) {
                this.Exe_ProductVersionChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ProductVersionChangeOperationCompleted);
            }
            this.InvokeAsync("Exe_ProductVersionChange", new object[] {
                        InXml}, this.Exe_ProductVersionChangeOperationCompleted, userState);
        }
        
        private void OnExe_ProductVersionChangeOperationCompleted(object arg) {
            if ((this.Exe_ProductVersionChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ProductVersionChangeCompleted(this, new Exe_ProductVersionChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotOPAreaChange", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotOPAreaChange(string InXml) {
            object[] results = this.Invoke("Exe_LotOPAreaChange", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotOPAreaChangeAsync(string InXml) {
            this.Exe_LotOPAreaChangeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotOPAreaChangeAsync(string InXml, object userState) {
            if ((this.Exe_LotOPAreaChangeOperationCompleted == null)) {
                this.Exe_LotOPAreaChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotOPAreaChangeOperationCompleted);
            }
            this.InvokeAsync("Exe_LotOPAreaChange", new object[] {
                        InXml}, this.Exe_LotOPAreaChangeOperationCompleted, userState);
        }
        
        private void OnExe_LotOPAreaChangeOperationCompleted(object arg) {
            if ((this.Exe_LotOPAreaChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotOPAreaChangeCompleted(this, new Exe_LotOPAreaChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Material", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Material(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Material", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_MaterialAsync(string InXml) {
            this.Exe_CheckOut_MaterialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_MaterialAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_MaterialOperationCompleted == null)) {
                this.Exe_CheckOut_MaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_MaterialOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Material", new object[] {
                        InXml}, this.Exe_CheckOut_MaterialOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_MaterialOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_MaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_MaterialCompleted(this, new Exe_CheckOut_MaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_AutoSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_AutoSplit(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_AutoSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_AutoSplitAsync(string InXml) {
            this.Exe_CheckOut_AutoSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_AutoSplitAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_AutoSplitOperationCompleted == null)) {
                this.Exe_CheckOut_AutoSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_AutoSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_AutoSplit", new object[] {
                        InXml}, this.Exe_CheckOut_AutoSplitOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_AutoSplitOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_AutoSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_AutoSplitCompleted(this, new Exe_CheckOut_AutoSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FinalQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FinalQC(string InXml) {
            object[] results = this.Invoke("Exe_FinalQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FinalQCAsync(string InXml) {
            this.Exe_FinalQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FinalQCAsync(string InXml, object userState) {
            if ((this.Exe_FinalQCOperationCompleted == null)) {
                this.Exe_FinalQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FinalQCOperationCompleted);
            }
            this.InvokeAsync("Exe_FinalQC", new object[] {
                        InXml}, this.Exe_FinalQCOperationCompleted, userState);
        }
        
        private void OnExe_FinalQCOperationCompleted(object arg) {
            if ((this.Exe_FinalQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FinalQCCompleted(this, new Exe_FinalQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Repair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Repair(string InXml) {
            object[] results = this.Invoke("Exe_Repair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_RepairAsync(string InXml) {
            this.Exe_RepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_RepairAsync(string InXml, object userState) {
            if ((this.Exe_RepairOperationCompleted == null)) {
                this.Exe_RepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_RepairOperationCompleted);
            }
            this.InvokeAsync("Exe_Repair", new object[] {
                        InXml}, this.Exe_RepairOperationCompleted, userState);
        }
        
        private void OnExe_RepairOperationCompleted(object arg) {
            if ((this.Exe_RepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_RepairCompleted(this, new Exe_RepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CreateLotByBom", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CreateLotByBom(string InXml) {
            object[] results = this.Invoke("Exe_CreateLotByBom", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CreateLotByBomAsync(string InXml) {
            this.Exe_CreateLotByBomAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CreateLotByBomAsync(string InXml, object userState) {
            if ((this.Exe_CreateLotByBomOperationCompleted == null)) {
                this.Exe_CreateLotByBomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CreateLotByBomOperationCompleted);
            }
            this.InvokeAsync("Exe_CreateLotByBom", new object[] {
                        InXml}, this.Exe_CreateLotByBomOperationCompleted, userState);
        }
        
        private void OnExe_CreateLotByBomOperationCompleted(object arg) {
            if ((this.Exe_CreateLotByBomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CreateLotByBomCompleted(this, new Exe_CreateLotByBomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_AbnormalCollect", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_AbnormalCollect(string InXml) {
            object[] results = this.Invoke("Exe_AbnormalCollect", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_AbnormalCollectAsync(string InXml) {
            this.Exe_AbnormalCollectAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_AbnormalCollectAsync(string InXml, object userState) {
            if ((this.Exe_AbnormalCollectOperationCompleted == null)) {
                this.Exe_AbnormalCollectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_AbnormalCollectOperationCompleted);
            }
            this.InvokeAsync("Exe_AbnormalCollect", new object[] {
                        InXml}, this.Exe_AbnormalCollectOperationCompleted, userState);
        }
        
        private void OnExe_AbnormalCollectOperationCompleted(object arg) {
            if ((this.Exe_AbnormalCollectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_AbnormalCollectCompleted(this, new Exe_AbnormalCollectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_BatchCI_NOR", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_BatchCI_NOR(string InXml) {
            object[] results = this.Invoke("Exe_BatchCI_NOR", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_BatchCI_NORAsync(string InXml) {
            this.Exe_BatchCI_NORAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_BatchCI_NORAsync(string InXml, object userState) {
            if ((this.Exe_BatchCI_NOROperationCompleted == null)) {
                this.Exe_BatchCI_NOROperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_BatchCI_NOROperationCompleted);
            }
            this.InvokeAsync("Exe_BatchCI_NOR", new object[] {
                        InXml}, this.Exe_BatchCI_NOROperationCompleted, userState);
        }
        
        private void OnExe_BatchCI_NOROperationCompleted(object arg) {
            if ((this.Exe_BatchCI_NORCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_BatchCI_NORCompleted(this, new Exe_BatchCI_NORCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Repair_Assembly", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Repair_Assembly(string InXml) {
            object[] results = this.Invoke("Exe_Repair_Assembly", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Repair_AssemblyAsync(string InXml) {
            this.Exe_Repair_AssemblyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Repair_AssemblyAsync(string InXml, object userState) {
            if ((this.Exe_Repair_AssemblyOperationCompleted == null)) {
                this.Exe_Repair_AssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Repair_AssemblyOperationCompleted);
            }
            this.InvokeAsync("Exe_Repair_Assembly", new object[] {
                        InXml}, this.Exe_Repair_AssemblyOperationCompleted, userState);
        }
        
        private void OnExe_Repair_AssemblyOperationCompleted(object arg) {
            if ((this.Exe_Repair_AssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Repair_AssemblyCompleted(this, new Exe_Repair_AssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_BatchCO_Unit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_BatchCO_Unit(string InXml) {
            object[] results = this.Invoke("Exe_BatchCO_Unit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_BatchCO_UnitAsync(string InXml) {
            this.Exe_BatchCO_UnitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_BatchCO_UnitAsync(string InXml, object userState) {
            if ((this.Exe_BatchCO_UnitOperationCompleted == null)) {
                this.Exe_BatchCO_UnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_BatchCO_UnitOperationCompleted);
            }
            this.InvokeAsync("Exe_BatchCO_Unit", new object[] {
                        InXml}, this.Exe_BatchCO_UnitOperationCompleted, userState);
        }
        
        private void OnExe_BatchCO_UnitOperationCompleted(object arg) {
            if ((this.Exe_BatchCO_UnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_BatchCO_UnitCompleted(this, new Exe_BatchCO_UnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_BatchCI_Unit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_BatchCI_Unit(string InXml) {
            object[] results = this.Invoke("Exe_BatchCI_Unit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_BatchCI_UnitAsync(string InXml) {
            this.Exe_BatchCI_UnitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_BatchCI_UnitAsync(string InXml, object userState) {
            if ((this.Exe_BatchCI_UnitOperationCompleted == null)) {
                this.Exe_BatchCI_UnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_BatchCI_UnitOperationCompleted);
            }
            this.InvokeAsync("Exe_BatchCI_Unit", new object[] {
                        InXml}, this.Exe_BatchCI_UnitOperationCompleted, userState);
        }
        
        private void OnExe_BatchCI_UnitOperationCompleted(object arg) {
            if ((this.Exe_BatchCI_UnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_BatchCI_UnitCompleted(this, new Exe_BatchCI_UnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotProcess(string InXml) {
            object[] results = this.Invoke("LoadLotProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotProcessAsync(string InXml) {
            this.LoadLotProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotProcessAsync(string InXml, object userState) {
            if ((this.LoadLotProcessOperationCompleted == null)) {
                this.LoadLotProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotProcessOperationCompleted);
            }
            this.InvokeAsync("LoadLotProcess", new object[] {
                        InXml}, this.LoadLotProcessOperationCompleted, userState);
        }
        
        private void OnLoadLotProcessOperationCompleted(object arg) {
            if ((this.LoadLotProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotProcessCompleted(this, new LoadLotProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotProcess(string InXml) {
            object[] results = this.Invoke("AddLotProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotProcessAsync(string InXml) {
            this.AddLotProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotProcessAsync(string InXml, object userState) {
            if ((this.AddLotProcessOperationCompleted == null)) {
                this.AddLotProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotProcessOperationCompleted);
            }
            this.InvokeAsync("AddLotProcess", new object[] {
                        InXml}, this.AddLotProcessOperationCompleted, userState);
        }
        
        private void OnAddLotProcessOperationCompleted(object arg) {
            if ((this.AddLotProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotProcessCompleted(this, new AddLotProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotProcess(string InXml) {
            object[] results = this.Invoke("EditLotProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotProcessAsync(string InXml) {
            this.EditLotProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotProcessAsync(string InXml, object userState) {
            if ((this.EditLotProcessOperationCompleted == null)) {
                this.EditLotProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotProcessOperationCompleted);
            }
            this.InvokeAsync("EditLotProcess", new object[] {
                        InXml}, this.EditLotProcessOperationCompleted, userState);
        }
        
        private void OnEditLotProcessOperationCompleted(object arg) {
            if ((this.EditLotProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotProcessCompleted(this, new EditLotProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotProcess", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotProcess(string InXml) {
            object[] results = this.Invoke("DelLotProcess", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotProcessAsync(string InXml) {
            this.DelLotProcessAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotProcessAsync(string InXml, object userState) {
            if ((this.DelLotProcessOperationCompleted == null)) {
                this.DelLotProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotProcessOperationCompleted);
            }
            this.InvokeAsync("DelLotProcess", new object[] {
                        InXml}, this.DelLotProcessOperationCompleted, userState);
        }
        
        private void OnDelLotProcessOperationCompleted(object arg) {
            if ((this.DelLotProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotProcessCompleted(this, new DelLotProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetNextOPNode", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNextOPNode(string InXml) {
            object[] results = this.Invoke("GetNextOPNode", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextOPNodeAsync(string InXml) {
            this.GetNextOPNodeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetNextOPNodeAsync(string InXml, object userState) {
            if ((this.GetNextOPNodeOperationCompleted == null)) {
                this.GetNextOPNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextOPNodeOperationCompleted);
            }
            this.InvokeAsync("GetNextOPNode", new object[] {
                        InXml}, this.GetNextOPNodeOperationCompleted, userState);
        }
        
        private void OnGetNextOPNodeOperationCompleted(object arg) {
            if ((this.GetNextOPNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextOPNodeCompleted(this, new GetNextOPNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadNextOPNode", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadNextOPNode(string InXml) {
            object[] results = this.Invoke("LoadNextOPNode", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadNextOPNodeAsync(string InXml) {
            this.LoadNextOPNodeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadNextOPNodeAsync(string InXml, object userState) {
            if ((this.LoadNextOPNodeOperationCompleted == null)) {
                this.LoadNextOPNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadNextOPNodeOperationCompleted);
            }
            this.InvokeAsync("LoadNextOPNode", new object[] {
                        InXml}, this.LoadNextOPNodeOperationCompleted, userState);
        }
        
        private void OnLoadNextOPNodeOperationCompleted(object arg) {
            if ((this.LoadNextOPNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadNextOPNodeCompleted(this, new LoadNextOPNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotLog(string InXml) {
            object[] results = this.Invoke("LoadLotLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotLogAsync(string InXml) {
            this.LoadLotLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotLogAsync(string InXml, object userState) {
            if ((this.LoadLotLogOperationCompleted == null)) {
                this.LoadLotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotLogOperationCompleted);
            }
            this.InvokeAsync("LoadLotLog", new object[] {
                        InXml}, this.LoadLotLogOperationCompleted, userState);
        }
        
        private void OnLoadLotLogOperationCompleted(object arg) {
            if ((this.LoadLotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotLogCompleted(this, new LoadLotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotLogJoinModuleLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotLogJoinModuleLog(string InXml) {
            object[] results = this.Invoke("LoadLotLogJoinModuleLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotLogJoinModuleLogAsync(string InXml) {
            this.LoadLotLogJoinModuleLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotLogJoinModuleLogAsync(string InXml, object userState) {
            if ((this.LoadLotLogJoinModuleLogOperationCompleted == null)) {
                this.LoadLotLogJoinModuleLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotLogJoinModuleLogOperationCompleted);
            }
            this.InvokeAsync("LoadLotLogJoinModuleLog", new object[] {
                        InXml}, this.LoadLotLogJoinModuleLogOperationCompleted, userState);
        }
        
        private void OnLoadLotLogJoinModuleLogOperationCompleted(object arg) {
            if ((this.LoadLotLogJoinModuleLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotLogJoinModuleLogCompleted(this, new LoadLotLogJoinModuleLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotLog_Report", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotLog_Report(string InXml) {
            object[] results = this.Invoke("LoadLotLog_Report", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotLog_ReportAsync(string InXml) {
            this.LoadLotLog_ReportAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotLog_ReportAsync(string InXml, object userState) {
            if ((this.LoadLotLog_ReportOperationCompleted == null)) {
                this.LoadLotLog_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotLog_ReportOperationCompleted);
            }
            this.InvokeAsync("LoadLotLog_Report", new object[] {
                        InXml}, this.LoadLotLog_ReportOperationCompleted, userState);
        }
        
        private void OnLoadLotLog_ReportOperationCompleted(object arg) {
            if ((this.LoadLotLog_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotLog_ReportCompleted(this, new LoadLotLog_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotLogReport_Modify", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotLogReport_Modify(string InXml) {
            object[] results = this.Invoke("LoadLotLogReport_Modify", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotLogReport_ModifyAsync(string InXml) {
            this.LoadLotLogReport_ModifyAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotLogReport_ModifyAsync(string InXml, object userState) {
            if ((this.LoadLotLogReport_ModifyOperationCompleted == null)) {
                this.LoadLotLogReport_ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotLogReport_ModifyOperationCompleted);
            }
            this.InvokeAsync("LoadLotLogReport_Modify", new object[] {
                        InXml}, this.LoadLotLogReport_ModifyOperationCompleted, userState);
        }
        
        private void OnLoadLotLogReport_ModifyOperationCompleted(object arg) {
            if ((this.LoadLotLogReport_ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotLogReport_ModifyCompleted(this, new LoadLotLogReport_ModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotLog_ReportJoinLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotLog_ReportJoinLotBasis(string InXml) {
            object[] results = this.Invoke("LoadLotLog_ReportJoinLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotLog_ReportJoinLotBasisAsync(string InXml) {
            this.LoadLotLog_ReportJoinLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotLog_ReportJoinLotBasisAsync(string InXml, object userState) {
            if ((this.LoadLotLog_ReportJoinLotBasisOperationCompleted == null)) {
                this.LoadLotLog_ReportJoinLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotLog_ReportJoinLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadLotLog_ReportJoinLotBasis", new object[] {
                        InXml}, this.LoadLotLog_ReportJoinLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadLotLog_ReportJoinLotBasisOperationCompleted(object arg) {
            if ((this.LoadLotLog_ReportJoinLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotLog_ReportJoinLotBasisCompleted(this, new LoadLotLog_ReportJoinLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotPSLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotPSLog(string InXml) {
            object[] results = this.Invoke("LoadLotPSLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotPSLogAsync(string InXml) {
            this.LoadLotPSLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotPSLogAsync(string InXml, object userState) {
            if ((this.LoadLotPSLogOperationCompleted == null)) {
                this.LoadLotPSLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotPSLogOperationCompleted);
            }
            this.InvokeAsync("LoadLotPSLog", new object[] {
                        InXml}, this.LoadLotPSLogOperationCompleted, userState);
        }
        
        private void OnLoadLotPSLogOperationCompleted(object arg) {
            if ((this.LoadLotPSLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotPSLogCompleted(this, new LoadLotPSLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_Raw", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_Raw(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_Raw", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_RawAsync(string InXml) {
            this.LoadWIPInventory_RawAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_RawAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_RawOperationCompleted == null)) {
                this.LoadWIPInventory_RawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_RawOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_Raw", new object[] {
                        InXml}, this.LoadWIPInventory_RawOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_RawOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_RawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_RawCompleted(this, new LoadWIPInventory_RawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPInventory_Raw", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPInventory_Raw(string InXml) {
            object[] results = this.Invoke("AddWIPInventory_Raw", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPInventory_RawAsync(string InXml) {
            this.AddWIPInventory_RawAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWIPInventory_RawAsync(string InXml, object userState) {
            if ((this.AddWIPInventory_RawOperationCompleted == null)) {
                this.AddWIPInventory_RawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPInventory_RawOperationCompleted);
            }
            this.InvokeAsync("AddWIPInventory_Raw", new object[] {
                        InXml}, this.AddWIPInventory_RawOperationCompleted, userState);
        }
        
        private void OnAddWIPInventory_RawOperationCompleted(object arg) {
            if ((this.AddWIPInventory_RawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPInventory_RawCompleted(this, new AddWIPInventory_RawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPInventory_Raw", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPInventory_Raw(string InXml) {
            object[] results = this.Invoke("EditWIPInventory_Raw", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPInventory_RawAsync(string InXml) {
            this.EditWIPInventory_RawAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPInventory_RawAsync(string InXml, object userState) {
            if ((this.EditWIPInventory_RawOperationCompleted == null)) {
                this.EditWIPInventory_RawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPInventory_RawOperationCompleted);
            }
            this.InvokeAsync("EditWIPInventory_Raw", new object[] {
                        InXml}, this.EditWIPInventory_RawOperationCompleted, userState);
        }
        
        private void OnEditWIPInventory_RawOperationCompleted(object arg) {
            if ((this.EditWIPInventory_RawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPInventory_RawCompleted(this, new EditWIPInventory_RawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPInventory_Raw", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPInventory_Raw(string InXml) {
            object[] results = this.Invoke("DelWIPInventory_Raw", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPInventory_RawAsync(string InXml) {
            this.DelWIPInventory_RawAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPInventory_RawAsync(string InXml, object userState) {
            if ((this.DelWIPInventory_RawOperationCompleted == null)) {
                this.DelWIPInventory_RawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPInventory_RawOperationCompleted);
            }
            this.InvokeAsync("DelWIPInventory_Raw", new object[] {
                        InXml}, this.DelWIPInventory_RawOperationCompleted, userState);
        }
        
        private void OnDelWIPInventory_RawOperationCompleted(object arg) {
            if ((this.DelWIPInventory_RawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPInventory_RawCompleted(this, new DelWIPInventory_RawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_SEMI", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_SEMI(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_SEMI", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIAsync(string InXml) {
            this.LoadWIPInventory_SEMIAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_SEMIOperationCompleted == null)) {
                this.LoadWIPInventory_SEMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_SEMIOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_SEMI", new object[] {
                        InXml}, this.LoadWIPInventory_SEMIOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_SEMIOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_SEMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_SEMICompleted(this, new LoadWIPInventory_SEMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_Component(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_ComponentAsync(string InXml) {
            this.LoadWIPInventory_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_ComponentAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_ComponentOperationCompleted == null)) {
                this.LoadWIPInventory_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_ComponentOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_Component", new object[] {
                        InXml}, this.LoadWIPInventory_ComponentOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_ComponentOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_ComponentCompleted(this, new LoadWIPInventory_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_SEMIJoinLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_SEMIJoinLotBasis(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_SEMIJoinLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIJoinLotBasisAsync(string InXml) {
            this.LoadWIPInventory_SEMIJoinLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIJoinLotBasisAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_SEMIJoinLotBasisOperationCompleted == null)) {
                this.LoadWIPInventory_SEMIJoinLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_SEMIJoinLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_SEMIJoinLotBasis", new object[] {
                        InXml}, this.LoadWIPInventory_SEMIJoinLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_SEMIJoinLotBasisOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_SEMIJoinLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_SEMIJoinLotBasisCompleted(this, new LoadWIPInventory_SEMIJoinLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_SEMIJoinLotBasisSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_SEMIJoinLotBasisSplit(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_SEMIJoinLotBasisSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIJoinLotBasisSplitAsync(string InXml) {
            this.LoadWIPInventory_SEMIJoinLotBasisSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIJoinLotBasisSplitAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted == null)) {
                this.LoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_SEMIJoinLotBasisSplit", new object[] {
                        InXml}, this.LoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_SEMIJoinLotBasisSplitOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_SEMIJoinLotBasisSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_SEMIJoinLotBasisSplitCompleted(this, new LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIPInventory_SEMIbyLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIPInventory_SEMIbyLot(string InXml) {
            object[] results = this.Invoke("LoadWIPInventory_SEMIbyLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIbyLotAsync(string InXml) {
            this.LoadWIPInventory_SEMIbyLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIPInventory_SEMIbyLotAsync(string InXml, object userState) {
            if ((this.LoadWIPInventory_SEMIbyLotOperationCompleted == null)) {
                this.LoadWIPInventory_SEMIbyLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIPInventory_SEMIbyLotOperationCompleted);
            }
            this.InvokeAsync("LoadWIPInventory_SEMIbyLot", new object[] {
                        InXml}, this.LoadWIPInventory_SEMIbyLotOperationCompleted, userState);
        }
        
        private void OnLoadWIPInventory_SEMIbyLotOperationCompleted(object arg) {
            if ((this.LoadWIPInventory_SEMIbyLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIPInventory_SEMIbyLotCompleted(this, new LoadWIPInventory_SEMIbyLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddWIPInventory_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWIPInventory_Semi(string InXml) {
            object[] results = this.Invoke("AddWIPInventory_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWIPInventory_SemiAsync(string InXml) {
            this.AddWIPInventory_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddWIPInventory_SemiAsync(string InXml, object userState) {
            if ((this.AddWIPInventory_SemiOperationCompleted == null)) {
                this.AddWIPInventory_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWIPInventory_SemiOperationCompleted);
            }
            this.InvokeAsync("AddWIPInventory_Semi", new object[] {
                        InXml}, this.AddWIPInventory_SemiOperationCompleted, userState);
        }
        
        private void OnAddWIPInventory_SemiOperationCompleted(object arg) {
            if ((this.AddWIPInventory_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWIPInventory_SemiCompleted(this, new AddWIPInventory_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPInventory_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPInventory_Semi(string InXml) {
            object[] results = this.Invoke("EditWIPInventory_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPInventory_SemiAsync(string InXml) {
            this.EditWIPInventory_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPInventory_SemiAsync(string InXml, object userState) {
            if ((this.EditWIPInventory_SemiOperationCompleted == null)) {
                this.EditWIPInventory_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPInventory_SemiOperationCompleted);
            }
            this.InvokeAsync("EditWIPInventory_Semi", new object[] {
                        InXml}, this.EditWIPInventory_SemiOperationCompleted, userState);
        }
        
        private void OnEditWIPInventory_SemiOperationCompleted(object arg) {
            if ((this.EditWIPInventory_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPInventory_SemiCompleted(this, new EditWIPInventory_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditWIPInventory_Scrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWIPInventory_Scrap(string InXml) {
            object[] results = this.Invoke("EditWIPInventory_Scrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWIPInventory_ScrapAsync(string InXml) {
            this.EditWIPInventory_ScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditWIPInventory_ScrapAsync(string InXml, object userState) {
            if ((this.EditWIPInventory_ScrapOperationCompleted == null)) {
                this.EditWIPInventory_ScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWIPInventory_ScrapOperationCompleted);
            }
            this.InvokeAsync("EditWIPInventory_Scrap", new object[] {
                        InXml}, this.EditWIPInventory_ScrapOperationCompleted, userState);
        }
        
        private void OnEditWIPInventory_ScrapOperationCompleted(object arg) {
            if ((this.EditWIPInventory_ScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWIPInventory_ScrapCompleted(this, new EditWIPInventory_ScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPInventory_Semi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPInventory_Semi(string InXml) {
            object[] results = this.Invoke("DelWIPInventory_Semi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPInventory_SemiAsync(string InXml) {
            this.DelWIPInventory_SemiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPInventory_SemiAsync(string InXml, object userState) {
            if ((this.DelWIPInventory_SemiOperationCompleted == null)) {
                this.DelWIPInventory_SemiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPInventory_SemiOperationCompleted);
            }
            this.InvokeAsync("DelWIPInventory_Semi", new object[] {
                        InXml}, this.DelWIPInventory_SemiOperationCompleted, userState);
        }
        
        private void OnDelWIPInventory_SemiOperationCompleted(object arg) {
            if ((this.DelWIPInventory_SemiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPInventory_SemiCompleted(this, new DelWIPInventory_SemiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_Scrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_Scrap(string InXml) {
            object[] results = this.Invoke("LoadWIP_Scrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapAsync(string InXml) {
            this.LoadWIP_ScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapAsync(string InXml, object userState) {
            if ((this.LoadWIP_ScrapOperationCompleted == null)) {
                this.LoadWIP_ScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_ScrapOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_Scrap", new object[] {
                        InXml}, this.LoadWIP_ScrapOperationCompleted, userState);
        }
        
        private void OnLoadWIP_ScrapOperationCompleted(object arg) {
            if ((this.LoadWIP_ScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_ScrapCompleted(this, new LoadWIP_ScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIPInventory_Scrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIPInventory_Scrap(string InXml) {
            object[] results = this.Invoke("DelWIPInventory_Scrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIPInventory_ScrapAsync(string InXml) {
            this.DelWIPInventory_ScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIPInventory_ScrapAsync(string InXml, object userState) {
            if ((this.DelWIPInventory_ScrapOperationCompleted == null)) {
                this.DelWIPInventory_ScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIPInventory_ScrapOperationCompleted);
            }
            this.InvokeAsync("DelWIPInventory_Scrap", new object[] {
                        InXml}, this.DelWIPInventory_ScrapOperationCompleted, userState);
        }
        
        private void OnDelWIPInventory_ScrapOperationCompleted(object arg) {
            if ((this.DelWIPInventory_ScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIPInventory_ScrapCompleted(this, new DelWIPInventory_ScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_ScrapByError", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_ScrapByError(string InXml) {
            object[] results = this.Invoke("LoadWIP_ScrapByError", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapByErrorAsync(string InXml) {
            this.LoadWIP_ScrapByErrorAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_ScrapByErrorAsync(string InXml, object userState) {
            if ((this.LoadWIP_ScrapByErrorOperationCompleted == null)) {
                this.LoadWIP_ScrapByErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_ScrapByErrorOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_ScrapByError", new object[] {
                        InXml}, this.LoadWIP_ScrapByErrorOperationCompleted, userState);
        }
        
        private void OnLoadWIP_ScrapByErrorOperationCompleted(object arg) {
            if ((this.LoadWIP_ScrapByErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_ScrapByErrorCompleted(this, new LoadWIP_ScrapByErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_ComponentScrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_ComponentScrap(string InXml) {
            object[] results = this.Invoke("LoadWIP_ComponentScrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_ComponentScrapAsync(string InXml) {
            this.LoadWIP_ComponentScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_ComponentScrapAsync(string InXml, object userState) {
            if ((this.LoadWIP_ComponentScrapOperationCompleted == null)) {
                this.LoadWIP_ComponentScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_ComponentScrapOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_ComponentScrap", new object[] {
                        InXml}, this.LoadWIP_ComponentScrapOperationCompleted, userState);
        }
        
        private void OnLoadWIP_ComponentScrapOperationCompleted(object arg) {
            if ((this.LoadWIP_ComponentScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_ComponentScrapCompleted(this, new LoadWIP_ComponentScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelWIP_ComponentScrap", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelWIP_ComponentScrap(string InXml) {
            object[] results = this.Invoke("DelWIP_ComponentScrap", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelWIP_ComponentScrapAsync(string InXml) {
            this.DelWIP_ComponentScrapAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelWIP_ComponentScrapAsync(string InXml, object userState) {
            if ((this.DelWIP_ComponentScrapOperationCompleted == null)) {
                this.DelWIP_ComponentScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWIP_ComponentScrapOperationCompleted);
            }
            this.InvokeAsync("DelWIP_ComponentScrap", new object[] {
                        InXml}, this.DelWIP_ComponentScrapOperationCompleted, userState);
        }
        
        private void OnDelWIP_ComponentScrapOperationCompleted(object arg) {
            if ((this.DelWIP_ComponentScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWIP_ComponentScrapCompleted(this, new DelWIP_ComponentScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_FailBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_FailBin(string InXml) {
            object[] results = this.Invoke("LoadWIP_FailBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_FailBinAsync(string InXml) {
            this.LoadWIP_FailBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_FailBinAsync(string InXml, object userState) {
            if ((this.LoadWIP_FailBinOperationCompleted == null)) {
                this.LoadWIP_FailBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_FailBinOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_FailBin", new object[] {
                        InXml}, this.LoadWIP_FailBinOperationCompleted, userState);
        }
        
        private void OnLoadWIP_FailBinOperationCompleted(object arg) {
            if ((this.LoadWIP_FailBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_FailBinCompleted(this, new LoadWIP_FailBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSEMIInventory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSEMIInventory(string InXml) {
            object[] results = this.Invoke("LoadSEMIInventory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSEMIInventoryAsync(string InXml) {
            this.LoadSEMIInventoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSEMIInventoryAsync(string InXml, object userState) {
            if ((this.LoadSEMIInventoryOperationCompleted == null)) {
                this.LoadSEMIInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSEMIInventoryOperationCompleted);
            }
            this.InvokeAsync("LoadSEMIInventory", new object[] {
                        InXml}, this.LoadSEMIInventoryOperationCompleted, userState);
        }
        
        private void OnLoadSEMIInventoryOperationCompleted(object arg) {
            if ((this.LoadSEMIInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSEMIInventoryCompleted(this, new LoadSEMIInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFGDInventory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFGDInventory(string InXml) {
            object[] results = this.Invoke("LoadFGDInventory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFGDInventoryAsync(string InXml) {
            this.LoadFGDInventoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFGDInventoryAsync(string InXml, object userState) {
            if ((this.LoadFGDInventoryOperationCompleted == null)) {
                this.LoadFGDInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFGDInventoryOperationCompleted);
            }
            this.InvokeAsync("LoadFGDInventory", new object[] {
                        InXml}, this.LoadFGDInventoryOperationCompleted, userState);
        }
        
        private void OnLoadFGDInventoryOperationCompleted(object arg) {
            if ((this.LoadFGDInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFGDInventoryCompleted(this, new LoadFGDInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_WIPSemiTurn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_WIPSemiTurn(string InXml) {
            object[] results = this.Invoke("Exe_WIPSemiTurn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_WIPSemiTurnAsync(string InXml) {
            this.Exe_WIPSemiTurnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_WIPSemiTurnAsync(string InXml, object userState) {
            if ((this.Exe_WIPSemiTurnOperationCompleted == null)) {
                this.Exe_WIPSemiTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_WIPSemiTurnOperationCompleted);
            }
            this.InvokeAsync("Exe_WIPSemiTurn", new object[] {
                        InXml}, this.Exe_WIPSemiTurnOperationCompleted, userState);
        }
        
        private void OnExe_WIPSemiTurnOperationCompleted(object arg) {
            if ((this.Exe_WIPSemiTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_WIPSemiTurnCompleted(this, new Exe_WIPSemiTurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SEMITurn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SEMITurn(string InXml) {
            object[] results = this.Invoke("Exe_SEMITurn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SEMITurnAsync(string InXml) {
            this.Exe_SEMITurnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SEMITurnAsync(string InXml, object userState) {
            if ((this.Exe_SEMITurnOperationCompleted == null)) {
                this.Exe_SEMITurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SEMITurnOperationCompleted);
            }
            this.InvokeAsync("Exe_SEMITurn", new object[] {
                        InXml}, this.Exe_SEMITurnOperationCompleted, userState);
        }
        
        private void OnExe_SEMITurnOperationCompleted(object arg) {
            if ((this.Exe_SEMITurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SEMITurnCompleted(this, new Exe_SEMITurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_WIPScrapTurn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_WIPScrapTurn(string InXml) {
            object[] results = this.Invoke("Exe_WIPScrapTurn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_WIPScrapTurnAsync(string InXml) {
            this.Exe_WIPScrapTurnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_WIPScrapTurnAsync(string InXml, object userState) {
            if ((this.Exe_WIPScrapTurnOperationCompleted == null)) {
                this.Exe_WIPScrapTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_WIPScrapTurnOperationCompleted);
            }
            this.InvokeAsync("Exe_WIPScrapTurn", new object[] {
                        InXml}, this.Exe_WIPScrapTurnOperationCompleted, userState);
        }
        
        private void OnExe_WIPScrapTurnOperationCompleted(object arg) {
            if ((this.Exe_WIPScrapTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_WIPScrapTurnCompleted(this, new Exe_WIPScrapTurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_FGDTurn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_FGDTurn(string InXml) {
            object[] results = this.Invoke("Exe_FGDTurn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_FGDTurnAsync(string InXml) {
            this.Exe_FGDTurnAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_FGDTurnAsync(string InXml, object userState) {
            if ((this.Exe_FGDTurnOperationCompleted == null)) {
                this.Exe_FGDTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_FGDTurnOperationCompleted);
            }
            this.InvokeAsync("Exe_FGDTurn", new object[] {
                        InXml}, this.Exe_FGDTurnOperationCompleted, userState);
        }
        
        private void OnExe_FGDTurnOperationCompleted(object arg) {
            if ((this.Exe_FGDTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_FGDTurnCompleted(this, new Exe_FGDTurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_Incoming", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_Incoming(string InXml) {
            object[] results = this.Invoke("LoadWIP_Incoming", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_IncomingAsync(string InXml) {
            this.LoadWIP_IncomingAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_IncomingAsync(string InXml, object userState) {
            if ((this.LoadWIP_IncomingOperationCompleted == null)) {
                this.LoadWIP_IncomingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_IncomingOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_Incoming", new object[] {
                        InXml}, this.LoadWIP_IncomingOperationCompleted, userState);
        }
        
        private void OnLoadWIP_IncomingOperationCompleted(object arg) {
            if ((this.LoadWIP_IncomingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_IncomingCompleted(this, new LoadWIP_IncomingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFGDInventory_General", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFGDInventory_General(string InXml) {
            object[] results = this.Invoke("LoadFGDInventory_General", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFGDInventory_GeneralAsync(string InXml) {
            this.LoadFGDInventory_GeneralAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFGDInventory_GeneralAsync(string InXml, object userState) {
            if ((this.LoadFGDInventory_GeneralOperationCompleted == null)) {
                this.LoadFGDInventory_GeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFGDInventory_GeneralOperationCompleted);
            }
            this.InvokeAsync("LoadFGDInventory_General", new object[] {
                        InXml}, this.LoadFGDInventory_GeneralOperationCompleted, userState);
        }
        
        private void OnLoadFGDInventory_GeneralOperationCompleted(object arg) {
            if ((this.LoadFGDInventory_GeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFGDInventory_GeneralCompleted(this, new LoadFGDInventory_GeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFGDInventory_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFGDInventory_Component(string InXml) {
            object[] results = this.Invoke("LoadFGDInventory_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFGDInventory_ComponentAsync(string InXml) {
            this.LoadFGDInventory_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFGDInventory_ComponentAsync(string InXml, object userState) {
            if ((this.LoadFGDInventory_ComponentOperationCompleted == null)) {
                this.LoadFGDInventory_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFGDInventory_ComponentOperationCompleted);
            }
            this.InvokeAsync("LoadFGDInventory_Component", new object[] {
                        InXml}, this.LoadFGDInventory_ComponentOperationCompleted, userState);
        }
        
        private void OnLoadFGDInventory_ComponentOperationCompleted(object arg) {
            if ((this.LoadFGDInventory_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFGDInventory_ComponentCompleted(this, new LoadFGDInventory_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadFGDInventory_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFGDInventory_Bin(string InXml) {
            object[] results = this.Invoke("LoadFGDInventory_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFGDInventory_BinAsync(string InXml) {
            this.LoadFGDInventory_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadFGDInventory_BinAsync(string InXml, object userState) {
            if ((this.LoadFGDInventory_BinOperationCompleted == null)) {
                this.LoadFGDInventory_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFGDInventory_BinOperationCompleted);
            }
            this.InvokeAsync("LoadFGDInventory_Bin", new object[] {
                        InXml}, this.LoadFGDInventory_BinOperationCompleted, userState);
        }
        
        private void OnLoadFGDInventory_BinOperationCompleted(object arg) {
            if ((this.LoadFGDInventory_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFGDInventory_BinCompleted(this, new LoadFGDInventory_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_OPMaterialState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_OPMaterialState(string InXml) {
            object[] results = this.Invoke("LoadWIP_OPMaterialState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_OPMaterialStateAsync(string InXml) {
            this.LoadWIP_OPMaterialStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_OPMaterialStateAsync(string InXml, object userState) {
            if ((this.LoadWIP_OPMaterialStateOperationCompleted == null)) {
                this.LoadWIP_OPMaterialStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_OPMaterialStateOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_OPMaterialState", new object[] {
                        InXml}, this.LoadWIP_OPMaterialStateOperationCompleted, userState);
        }
        
        private void OnLoadWIP_OPMaterialStateOperationCompleted(object arg) {
            if ((this.LoadWIP_OPMaterialStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_OPMaterialStateCompleted(this, new LoadWIP_OPMaterialStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_TransferBU", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_TransferBU(string InXml) {
            object[] results = this.Invoke("Exe_TransferBU", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_TransferBUAsync(string InXml) {
            this.Exe_TransferBUAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_TransferBUAsync(string InXml, object userState) {
            if ((this.Exe_TransferBUOperationCompleted == null)) {
                this.Exe_TransferBUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_TransferBUOperationCompleted);
            }
            this.InvokeAsync("Exe_TransferBU", new object[] {
                        InXml}, this.Exe_TransferBUOperationCompleted, userState);
        }
        
        private void OnExe_TransferBUOperationCompleted(object arg) {
            if ((this.Exe_TransferBUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_TransferBUCompleted(this, new Exe_TransferBUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadWIP_Incoming_Comp", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadWIP_Incoming_Comp(string InXml) {
            object[] results = this.Invoke("LoadWIP_Incoming_Comp", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWIP_Incoming_CompAsync(string InXml) {
            this.LoadWIP_Incoming_CompAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadWIP_Incoming_CompAsync(string InXml, object userState) {
            if ((this.LoadWIP_Incoming_CompOperationCompleted == null)) {
                this.LoadWIP_Incoming_CompOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWIP_Incoming_CompOperationCompleted);
            }
            this.InvokeAsync("LoadWIP_Incoming_Comp", new object[] {
                        InXml}, this.LoadWIP_Incoming_CompOperationCompleted, userState);
        }
        
        private void OnLoadWIP_Incoming_CompOperationCompleted(object arg) {
            if ((this.LoadWIP_Incoming_CompCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWIP_Incoming_CompCompleted(this, new LoadWIP_Incoming_CompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSCRInventory_General", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSCRInventory_General(string InXml) {
            object[] results = this.Invoke("LoadSCRInventory_General", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSCRInventory_GeneralAsync(string InXml) {
            this.LoadSCRInventory_GeneralAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSCRInventory_GeneralAsync(string InXml, object userState) {
            if ((this.LoadSCRInventory_GeneralOperationCompleted == null)) {
                this.LoadSCRInventory_GeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSCRInventory_GeneralOperationCompleted);
            }
            this.InvokeAsync("LoadSCRInventory_General", new object[] {
                        InXml}, this.LoadSCRInventory_GeneralOperationCompleted, userState);
        }
        
        private void OnLoadSCRInventory_GeneralOperationCompleted(object arg) {
            if ((this.LoadSCRInventory_GeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSCRInventory_GeneralCompleted(this, new LoadSCRInventory_GeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSCRInventory_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSCRInventory_Component(string InXml) {
            object[] results = this.Invoke("LoadSCRInventory_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSCRInventory_ComponentAsync(string InXml) {
            this.LoadSCRInventory_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSCRInventory_ComponentAsync(string InXml, object userState) {
            if ((this.LoadSCRInventory_ComponentOperationCompleted == null)) {
                this.LoadSCRInventory_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSCRInventory_ComponentOperationCompleted);
            }
            this.InvokeAsync("LoadSCRInventory_Component", new object[] {
                        InXml}, this.LoadSCRInventory_ComponentOperationCompleted, userState);
        }
        
        private void OnLoadSCRInventory_ComponentOperationCompleted(object arg) {
            if ((this.LoadSCRInventory_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSCRInventory_ComponentCompleted(this, new LoadSCRInventory_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadSCRInventory_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadSCRInventory_Bin(string InXml) {
            object[] results = this.Invoke("LoadSCRInventory_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSCRInventory_BinAsync(string InXml) {
            this.LoadSCRInventory_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadSCRInventory_BinAsync(string InXml, object userState) {
            if ((this.LoadSCRInventory_BinOperationCompleted == null)) {
                this.LoadSCRInventory_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSCRInventory_BinOperationCompleted);
            }
            this.InvokeAsync("LoadSCRInventory_Bin", new object[] {
                        InXml}, this.LoadSCRInventory_BinOperationCompleted, userState);
        }
        
        private void OnLoadSCRInventory_BinOperationCompleted(object arg) {
            if ((this.LoadSCRInventory_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSCRInventory_BinCompleted(this, new LoadSCRInventory_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadInventory_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadInventory_Component(string InXml) {
            object[] results = this.Invoke("LoadInventory_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadInventory_ComponentAsync(string InXml) {
            this.LoadInventory_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadInventory_ComponentAsync(string InXml, object userState) {
            if ((this.LoadInventory_ComponentOperationCompleted == null)) {
                this.LoadInventory_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInventory_ComponentOperationCompleted);
            }
            this.InvokeAsync("LoadInventory_Component", new object[] {
                        InXml}, this.LoadInventory_ComponentOperationCompleted, userState);
        }
        
        private void OnLoadInventory_ComponentOperationCompleted(object arg) {
            if ((this.LoadInventory_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInventory_ComponentCompleted(this, new LoadInventory_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TrainsferInventory", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TrainsferInventory(string InXml) {
            object[] results = this.Invoke("TrainsferInventory", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TrainsferInventoryAsync(string InXml) {
            this.TrainsferInventoryAsync(InXml, null);
        }
        
        /// <remarks/>
        public void TrainsferInventoryAsync(string InXml, object userState) {
            if ((this.TrainsferInventoryOperationCompleted == null)) {
                this.TrainsferInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrainsferInventoryOperationCompleted);
            }
            this.InvokeAsync("TrainsferInventory", new object[] {
                        InXml}, this.TrainsferInventoryOperationCompleted, userState);
        }
        
        private void OnTrainsferInventoryOperationCompleted(object arg) {
            if ((this.TrainsferInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrainsferInventoryCompleted(this, new TrainsferInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadComponentState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadComponentState(string InXml) {
            object[] results = this.Invoke("LoadComponentState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadComponentStateAsync(string InXml) {
            this.LoadComponentStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadComponentStateAsync(string InXml, object userState) {
            if ((this.LoadComponentStateOperationCompleted == null)) {
                this.LoadComponentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadComponentStateOperationCompleted);
            }
            this.InvokeAsync("LoadComponentState", new object[] {
                        InXml}, this.LoadComponentStateOperationCompleted, userState);
        }
        
        private void OnLoadComponentStateOperationCompleted(object arg) {
            if ((this.LoadComponentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadComponentStateCompleted(this, new LoadComponentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddComponentState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddComponentState(string InXml) {
            object[] results = this.Invoke("AddComponentState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddComponentStateAsync(string InXml) {
            this.AddComponentStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddComponentStateAsync(string InXml, object userState) {
            if ((this.AddComponentStateOperationCompleted == null)) {
                this.AddComponentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddComponentStateOperationCompleted);
            }
            this.InvokeAsync("AddComponentState", new object[] {
                        InXml}, this.AddComponentStateOperationCompleted, userState);
        }
        
        private void OnAddComponentStateOperationCompleted(object arg) {
            if ((this.AddComponentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddComponentStateCompleted(this, new AddComponentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/HelloMES", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloMES(string InXml) {
            object[] results = this.Invoke("HelloMES", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloMESAsync(string InXml) {
            this.HelloMESAsync(InXml, null);
        }
        
        /// <remarks/>
        public void HelloMESAsync(string InXml, object userState) {
            if ((this.HelloMESOperationCompleted == null)) {
                this.HelloMESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloMESOperationCompleted);
            }
            this.InvokeAsync("HelloMES", new object[] {
                        InXml}, this.HelloMESOperationCompleted, userState);
        }
        
        private void OnHelloMESOperationCompleted(object arg) {
            if ((this.HelloMESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloMESCompleted(this, new HelloMESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadOPMaterialState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOPMaterialState(string InXml) {
            object[] results = this.Invoke("LoadOPMaterialState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOPMaterialStateAsync(string InXml) {
            this.LoadOPMaterialStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadOPMaterialStateAsync(string InXml, object userState) {
            if ((this.LoadOPMaterialStateOperationCompleted == null)) {
                this.LoadOPMaterialStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOPMaterialStateOperationCompleted);
            }
            this.InvokeAsync("LoadOPMaterialState", new object[] {
                        InXml}, this.LoadOPMaterialStateOperationCompleted, userState);
        }
        
        private void OnLoadOPMaterialStateOperationCompleted(object arg) {
            if ((this.LoadOPMaterialStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOPMaterialStateCompleted(this, new LoadOPMaterialStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddOPMaterialState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddOPMaterialState(string InXml) {
            object[] results = this.Invoke("AddOPMaterialState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOPMaterialStateAsync(string InXml) {
            this.AddOPMaterialStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddOPMaterialStateAsync(string InXml, object userState) {
            if ((this.AddOPMaterialStateOperationCompleted == null)) {
                this.AddOPMaterialStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOPMaterialStateOperationCompleted);
            }
            this.InvokeAsync("AddOPMaterialState", new object[] {
                        InXml}, this.AddOPMaterialStateOperationCompleted, userState);
        }
        
        private void OnAddOPMaterialStateOperationCompleted(object arg) {
            if ((this.AddOPMaterialStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOPMaterialStateCompleted(this, new AddOPMaterialStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditOPMaterialState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditOPMaterialState(string InXml) {
            object[] results = this.Invoke("EditOPMaterialState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOPMaterialStateAsync(string InXml) {
            this.EditOPMaterialStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditOPMaterialStateAsync(string InXml, object userState) {
            if ((this.EditOPMaterialStateOperationCompleted == null)) {
                this.EditOPMaterialStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOPMaterialStateOperationCompleted);
            }
            this.InvokeAsync("EditOPMaterialState", new object[] {
                        InXml}, this.EditOPMaterialStateOperationCompleted, userState);
        }
        
        private void OnEditOPMaterialStateOperationCompleted(object arg) {
            if ((this.EditOPMaterialStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOPMaterialStateCompleted(this, new EditOPMaterialStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelOPMaterialState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelOPMaterialState(string InXml) {
            object[] results = this.Invoke("DelOPMaterialState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelOPMaterialStateAsync(string InXml) {
            this.DelOPMaterialStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelOPMaterialStateAsync(string InXml, object userState) {
            if ((this.DelOPMaterialStateOperationCompleted == null)) {
                this.DelOPMaterialStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOPMaterialStateOperationCompleted);
            }
            this.InvokeAsync("DelOPMaterialState", new object[] {
                        InXml}, this.DelOPMaterialStateOperationCompleted, userState);
        }
        
        private void OnDelOPMaterialStateOperationCompleted(object arg) {
            if ((this.DelOPMaterialStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOPMaterialStateCompleted(this, new DelOPMaterialStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotBasis(string InXml) {
            object[] results = this.Invoke("LoadLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotBasisAsync(string InXml) {
            this.LoadLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotBasisAsync(string InXml, object userState) {
            if ((this.LoadLotBasisOperationCompleted == null)) {
                this.LoadLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotBasisOperationCompleted);
            }
            this.InvokeAsync("LoadLotBasis", new object[] {
                        InXml}, this.LoadLotBasisOperationCompleted, userState);
        }
        
        private void OnLoadLotBasisOperationCompleted(object arg) {
            if ((this.LoadLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotBasisCompleted(this, new LoadLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasis(string InXml) {
            object[] results = this.Invoke("AddLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasisAsync(string InXml) {
            this.AddLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasisAsync(string InXml, object userState) {
            if ((this.AddLotBasisOperationCompleted == null)) {
                this.AddLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasisOperationCompleted);
            }
            this.InvokeAsync("AddLotBasis", new object[] {
                        InXml}, this.AddLotBasisOperationCompleted, userState);
        }
        
        private void OnAddLotBasisOperationCompleted(object arg) {
            if ((this.AddLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasisCompleted(this, new AddLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotBasis(string InXml) {
            object[] results = this.Invoke("EditLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotBasisAsync(string InXml) {
            this.EditLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotBasisAsync(string InXml, object userState) {
            if ((this.EditLotBasisOperationCompleted == null)) {
                this.EditLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotBasisOperationCompleted);
            }
            this.InvokeAsync("EditLotBasis", new object[] {
                        InXml}, this.EditLotBasisOperationCompleted, userState);
        }
        
        private void OnEditLotBasisOperationCompleted(object arg) {
            if ((this.EditLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotBasisCompleted(this, new EditLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotBasis(string InXml) {
            object[] results = this.Invoke("DelLotBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotBasisAsync(string InXml) {
            this.DelLotBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotBasisAsync(string InXml, object userState) {
            if ((this.DelLotBasisOperationCompleted == null)) {
                this.DelLotBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotBasisOperationCompleted);
            }
            this.InvokeAsync("DelLotBasis", new object[] {
                        InXml}, this.DelLotBasisOperationCompleted, userState);
        }
        
        private void OnDelLotBasisOperationCompleted(object arg) {
            if ((this.DelLotBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotBasisCompleted(this, new DelLotBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetLotBasisLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLotBasisLotState(string InXml) {
            object[] results = this.Invoke("SetLotBasisLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLotBasisLotStateAsync(string InXml) {
            this.SetLotBasisLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetLotBasisLotStateAsync(string InXml, object userState) {
            if ((this.SetLotBasisLotStateOperationCompleted == null)) {
                this.SetLotBasisLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLotBasisLotStateOperationCompleted);
            }
            this.InvokeAsync("SetLotBasisLotState", new object[] {
                        InXml}, this.SetLotBasisLotStateOperationCompleted, userState);
        }
        
        private void OnSetLotBasisLotStateOperationCompleted(object arg) {
            if ((this.SetLotBasisLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLotBasisLotStateCompleted(this, new SetLotBasisLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotBasisDistinctColumnValue", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotBasisDistinctColumnValue(string InXml) {
            object[] results = this.Invoke("LoadLotBasisDistinctColumnValue", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotBasisDistinctColumnValueAsync(string InXml) {
            this.LoadLotBasisDistinctColumnValueAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotBasisDistinctColumnValueAsync(string InXml, object userState) {
            if ((this.LoadLotBasisDistinctColumnValueOperationCompleted == null)) {
                this.LoadLotBasisDistinctColumnValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotBasisDistinctColumnValueOperationCompleted);
            }
            this.InvokeAsync("LoadLotBasisDistinctColumnValue", new object[] {
                        InXml}, this.LoadLotBasisDistinctColumnValueOperationCompleted, userState);
        }
        
        private void OnLoadLotBasisDistinctColumnValueOperationCompleted(object arg) {
            if ((this.LoadLotBasisDistinctColumnValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotBasisDistinctColumnValueCompleted(this, new LoadLotBasisDistinctColumnValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotBasis_BOM", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotBasis_BOM(string InXml) {
            object[] results = this.Invoke("AddLotBasis_BOM", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotBasis_BOMAsync(string InXml) {
            this.AddLotBasis_BOMAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotBasis_BOMAsync(string InXml, object userState) {
            if ((this.AddLotBasis_BOMOperationCompleted == null)) {
                this.AddLotBasis_BOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotBasis_BOMOperationCompleted);
            }
            this.InvokeAsync("AddLotBasis_BOM", new object[] {
                        InXml}, this.AddLotBasis_BOMOperationCompleted, userState);
        }
        
        private void OnAddLotBasis_BOMOperationCompleted(object arg) {
            if ((this.AddLotBasis_BOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotBasis_BOMCompleted(this, new AddLotBasis_BOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotState(string InXml) {
            object[] results = this.Invoke("LoadLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotStateAsync(string InXml) {
            this.LoadLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotStateAsync(string InXml, object userState) {
            if ((this.LoadLotStateOperationCompleted == null)) {
                this.LoadLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotStateOperationCompleted);
            }
            this.InvokeAsync("LoadLotState", new object[] {
                        InXml}, this.LoadLotStateOperationCompleted, userState);
        }
        
        private void OnLoadLotStateOperationCompleted(object arg) {
            if ((this.LoadLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotStateCompleted(this, new LoadLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/AddLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLotState(string InXml) {
            object[] results = this.Invoke("AddLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLotStateAsync(string InXml) {
            this.AddLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void AddLotStateAsync(string InXml, object userState) {
            if ((this.AddLotStateOperationCompleted == null)) {
                this.AddLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLotStateOperationCompleted);
            }
            this.InvokeAsync("AddLotState", new object[] {
                        InXml}, this.AddLotStateOperationCompleted, userState);
        }
        
        private void OnAddLotStateOperationCompleted(object arg) {
            if ((this.AddLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLotStateCompleted(this, new AddLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotState(string InXml) {
            object[] results = this.Invoke("EditLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotStateAsync(string InXml) {
            this.EditLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotStateAsync(string InXml, object userState) {
            if ((this.EditLotStateOperationCompleted == null)) {
                this.EditLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotStateOperationCompleted);
            }
            this.InvokeAsync("EditLotState", new object[] {
                        InXml}, this.EditLotStateOperationCompleted, userState);
        }
        
        private void OnEditLotStateOperationCompleted(object arg) {
            if ((this.EditLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotStateCompleted(this, new EditLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelLotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelLotState(string InXml) {
            object[] results = this.Invoke("DelLotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelLotStateAsync(string InXml) {
            this.DelLotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelLotStateAsync(string InXml, object userState) {
            if ((this.DelLotStateOperationCompleted == null)) {
                this.DelLotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLotStateOperationCompleted);
            }
            this.InvokeAsync("DelLotState", new object[] {
                        InXml}, this.DelLotStateOperationCompleted, userState);
        }
        
        private void OnDelLotStateOperationCompleted(object arg) {
            if ((this.DelLotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLotStateCompleted(this, new DelLotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotBasisJoinState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotBasisJoinState(string InXml) {
            object[] results = this.Invoke("LoadLotBasisJoinState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinStateAsync(string InXml) {
            this.LoadLotBasisJoinStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinStateAsync(string InXml, object userState) {
            if ((this.LoadLotBasisJoinStateOperationCompleted == null)) {
                this.LoadLotBasisJoinStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotBasisJoinStateOperationCompleted);
            }
            this.InvokeAsync("LoadLotBasisJoinState", new object[] {
                        InXml}, this.LoadLotBasisJoinStateOperationCompleted, userState);
        }
        
        private void OnLoadLotBasisJoinStateOperationCompleted(object arg) {
            if ((this.LoadLotBasisJoinStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotBasisJoinStateCompleted(this, new LoadLotBasisJoinStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotBasisJoinStateInLotNos", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotBasisJoinStateInLotNos(string InXml) {
            object[] results = this.Invoke("LoadLotBasisJoinStateInLotNos", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinStateInLotNosAsync(string InXml) {
            this.LoadLotBasisJoinStateInLotNosAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotBasisJoinStateInLotNosAsync(string InXml, object userState) {
            if ((this.LoadLotBasisJoinStateInLotNosOperationCompleted == null)) {
                this.LoadLotBasisJoinStateInLotNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotBasisJoinStateInLotNosOperationCompleted);
            }
            this.InvokeAsync("LoadLotBasisJoinStateInLotNos", new object[] {
                        InXml}, this.LoadLotBasisJoinStateInLotNosOperationCompleted, userState);
        }
        
        private void OnLoadLotBasisJoinStateInLotNosOperationCompleted(object arg) {
            if ((this.LoadLotBasisJoinStateInLotNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotBasisJoinStateInLotNosCompleted(this, new LoadLotBasisJoinStateInLotNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotStateJoinGoodBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotStateJoinGoodBin(string InXml) {
            object[] results = this.Invoke("LoadLotStateJoinGoodBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotStateJoinGoodBinAsync(string InXml) {
            this.LoadLotStateJoinGoodBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotStateJoinGoodBinAsync(string InXml, object userState) {
            if ((this.LoadLotStateJoinGoodBinOperationCompleted == null)) {
                this.LoadLotStateJoinGoodBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotStateJoinGoodBinOperationCompleted);
            }
            this.InvokeAsync("LoadLotStateJoinGoodBin", new object[] {
                        InXml}, this.LoadLotStateJoinGoodBinOperationCompleted, userState);
        }
        
        private void OnLoadLotStateJoinGoodBinOperationCompleted(object arg) {
            if ((this.LoadLotStateJoinGoodBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotStateJoinGoodBinCompleted(this, new LoadLotStateJoinGoodBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotStateJoinOPName", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotStateJoinOPName(string InXml) {
            object[] results = this.Invoke("LoadLotStateJoinOPName", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotStateJoinOPNameAsync(string InXml) {
            this.LoadLotStateJoinOPNameAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotStateJoinOPNameAsync(string InXml, object userState) {
            if ((this.LoadLotStateJoinOPNameOperationCompleted == null)) {
                this.LoadLotStateJoinOPNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotStateJoinOPNameOperationCompleted);
            }
            this.InvokeAsync("LoadLotStateJoinOPName", new object[] {
                        InXml}, this.LoadLotStateJoinOPNameOperationCompleted, userState);
        }
        
        private void OnLoadLotStateJoinOPNameOperationCompleted(object arg) {
            if ((this.LoadLotStateJoinOPNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotStateJoinOPNameCompleted(this, new LoadLotStateJoinOPNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadMaterialLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadMaterialLot(string InXml) {
            object[] results = this.Invoke("LoadMaterialLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMaterialLotAsync(string InXml) {
            this.LoadMaterialLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadMaterialLotAsync(string InXml, object userState) {
            if ((this.LoadMaterialLotOperationCompleted == null)) {
                this.LoadMaterialLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMaterialLotOperationCompleted);
            }
            this.InvokeAsync("LoadMaterialLot", new object[] {
                        InXml}, this.LoadMaterialLotOperationCompleted, userState);
        }
        
        private void OnLoadMaterialLotOperationCompleted(object arg) {
            if ((this.LoadMaterialLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMaterialLotCompleted(this, new LoadMaterialLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_LotState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_LotState(string InXml) {
            object[] results = this.Invoke("LoadTemp_LotState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_LotStateAsync(string InXml) {
            this.LoadTemp_LotStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_LotStateAsync(string InXml, object userState) {
            if ((this.LoadTemp_LotStateOperationCompleted == null)) {
                this.LoadTemp_LotStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_LotStateOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_LotState", new object[] {
                        InXml}, this.LoadTemp_LotStateOperationCompleted, userState);
        }
        
        private void OnLoadTemp_LotStateOperationCompleted(object arg) {
            if ((this.LoadTemp_LotStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_LotStateCompleted(this, new LoadTemp_LotStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_Attrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_Attrib(string InXml) {
            object[] results = this.Invoke("LoadTemp_Attrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_AttribAsync(string InXml) {
            this.LoadTemp_AttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_AttribAsync(string InXml, object userState) {
            if ((this.LoadTemp_AttribOperationCompleted == null)) {
                this.LoadTemp_AttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_AttribOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_Attrib", new object[] {
                        InXml}, this.LoadTemp_AttribOperationCompleted, userState);
        }
        
        private void OnLoadTemp_AttribOperationCompleted(object arg) {
            if ((this.LoadTemp_AttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_AttribCompleted(this, new LoadTemp_AttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_AttribJoinBasis", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_AttribJoinBasis(string InXml) {
            object[] results = this.Invoke("LoadTemp_AttribJoinBasis", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_AttribJoinBasisAsync(string InXml) {
            this.LoadTemp_AttribJoinBasisAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_AttribJoinBasisAsync(string InXml, object userState) {
            if ((this.LoadTemp_AttribJoinBasisOperationCompleted == null)) {
                this.LoadTemp_AttribJoinBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_AttribJoinBasisOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_AttribJoinBasis", new object[] {
                        InXml}, this.LoadTemp_AttribJoinBasisOperationCompleted, userState);
        }
        
        private void OnLoadTemp_AttribJoinBasisOperationCompleted(object arg) {
            if ((this.LoadTemp_AttribJoinBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_AttribJoinBasisCompleted(this, new LoadTemp_AttribJoinBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_Equipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_Equipment(string InXml) {
            object[] results = this.Invoke("LoadTemp_Equipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentAsync(string InXml) {
            this.LoadTemp_EquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_EquipmentAsync(string InXml, object userState) {
            if ((this.LoadTemp_EquipmentOperationCompleted == null)) {
                this.LoadTemp_EquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_EquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_Equipment", new object[] {
                        InXml}, this.LoadTemp_EquipmentOperationCompleted, userState);
        }
        
        private void OnLoadTemp_EquipmentOperationCompleted(object arg) {
            if ((this.LoadTemp_EquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_EquipmentCompleted(this, new LoadTemp_EquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_ComponentAttrib", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_ComponentAttrib(string InXml) {
            object[] results = this.Invoke("LoadTemp_ComponentAttrib", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_ComponentAttribAsync(string InXml) {
            this.LoadTemp_ComponentAttribAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_ComponentAttribAsync(string InXml, object userState) {
            if ((this.LoadTemp_ComponentAttribOperationCompleted == null)) {
                this.LoadTemp_ComponentAttribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_ComponentAttribOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_ComponentAttrib", new object[] {
                        InXml}, this.LoadTemp_ComponentAttribOperationCompleted, userState);
        }
        
        private void OnLoadTemp_ComponentAttribOperationCompleted(object arg) {
            if ((this.LoadTemp_ComponentAttribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_ComponentAttribCompleted(this, new LoadTemp_ComponentAttribCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_QCItem", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_QCItem(string InXml) {
            object[] results = this.Invoke("LoadTemp_QCItem", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_QCItemAsync(string InXml) {
            this.LoadTemp_QCItemAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_QCItemAsync(string InXml, object userState) {
            if ((this.LoadTemp_QCItemOperationCompleted == null)) {
                this.LoadTemp_QCItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_QCItemOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_QCItem", new object[] {
                        InXml}, this.LoadTemp_QCItemOperationCompleted, userState);
        }
        
        private void OnLoadTemp_QCItemOperationCompleted(object arg) {
            if ((this.LoadTemp_QCItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_QCItemCompleted(this, new LoadTemp_QCItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTemp_Material", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTemp_Material(string InXml) {
            object[] results = this.Invoke("LoadTemp_Material", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTemp_MaterialAsync(string InXml) {
            this.LoadTemp_MaterialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTemp_MaterialAsync(string InXml, object userState) {
            if ((this.LoadTemp_MaterialOperationCompleted == null)) {
                this.LoadTemp_MaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTemp_MaterialOperationCompleted);
            }
            this.InvokeAsync("LoadTemp_Material", new object[] {
                        InXml}, this.LoadTemp_MaterialOperationCompleted, userState);
        }
        
        private void OnLoadTemp_MaterialOperationCompleted(object arg) {
            if ((this.LoadTemp_MaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTemp_MaterialCompleted(this, new LoadTemp_MaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableLotOnEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableLotOnEQP(string InXml) {
            object[] results = this.Invoke("LoadAvailableLotOnEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableLotOnEQPAsync(string InXml) {
            this.LoadAvailableLotOnEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableLotOnEQPAsync(string InXml, object userState) {
            if ((this.LoadAvailableLotOnEQPOperationCompleted == null)) {
                this.LoadAvailableLotOnEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableLotOnEQPOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableLotOnEQP", new object[] {
                        InXml}, this.LoadAvailableLotOnEQPOperationCompleted, userState);
        }
        
        private void OnLoadAvailableLotOnEQPOperationCompleted(object arg) {
            if ((this.LoadAvailableLotOnEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableLotOnEQPCompleted(this, new LoadAvailableLotOnEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableCarrierLotOnEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableCarrierLotOnEQP(string InXml) {
            object[] results = this.Invoke("LoadAvailableCarrierLotOnEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableCarrierLotOnEQPAsync(string InXml) {
            this.LoadAvailableCarrierLotOnEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableCarrierLotOnEQPAsync(string InXml, object userState) {
            if ((this.LoadAvailableCarrierLotOnEQPOperationCompleted == null)) {
                this.LoadAvailableCarrierLotOnEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableCarrierLotOnEQPOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableCarrierLotOnEQP", new object[] {
                        InXml}, this.LoadAvailableCarrierLotOnEQPOperationCompleted, userState);
        }
        
        private void OnLoadAvailableCarrierLotOnEQPOperationCompleted(object arg) {
            if ((this.LoadAvailableCarrierLotOnEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableCarrierLotOnEQPCompleted(this, new LoadAvailableCarrierLotOnEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRecipe", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRecipe(string InXml) {
            object[] results = this.Invoke("LoadRecipe", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRecipeAsync(string InXml) {
            this.LoadRecipeAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRecipeAsync(string InXml, object userState) {
            if ((this.LoadRecipeOperationCompleted == null)) {
                this.LoadRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRecipeOperationCompleted);
            }
            this.InvokeAsync("LoadRecipe", new object[] {
                        InXml}, this.LoadRecipeOperationCompleted, userState);
        }
        
        private void OnLoadRecipeOperationCompleted(object arg) {
            if ((this.LoadRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRecipeCompleted(this, new LoadRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadRecipeByLogGroupSerial", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadRecipeByLogGroupSerial(string InXml) {
            object[] results = this.Invoke("LoadRecipeByLogGroupSerial", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRecipeByLogGroupSerialAsync(string InXml) {
            this.LoadRecipeByLogGroupSerialAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadRecipeByLogGroupSerialAsync(string InXml, object userState) {
            if ((this.LoadRecipeByLogGroupSerialOperationCompleted == null)) {
                this.LoadRecipeByLogGroupSerialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRecipeByLogGroupSerialOperationCompleted);
            }
            this.InvokeAsync("LoadRecipeByLogGroupSerial", new object[] {
                        InXml}, this.LoadRecipeByLogGroupSerialOperationCompleted, userState);
        }
        
        private void OnLoadRecipeByLogGroupSerialOperationCompleted(object arg) {
            if ((this.LoadRecipeByLogGroupSerialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRecipeByLogGroupSerialCompleted(this, new LoadRecipeByLogGroupSerialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotNoExtraInfoOnEQP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotNoExtraInfoOnEQP(string InXml) {
            object[] results = this.Invoke("LoadLotNoExtraInfoOnEQP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotNoExtraInfoOnEQPAsync(string InXml) {
            this.LoadLotNoExtraInfoOnEQPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotNoExtraInfoOnEQPAsync(string InXml, object userState) {
            if ((this.LoadLotNoExtraInfoOnEQPOperationCompleted == null)) {
                this.LoadLotNoExtraInfoOnEQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotNoExtraInfoOnEQPOperationCompleted);
            }
            this.InvokeAsync("LoadLotNoExtraInfoOnEQP", new object[] {
                        InXml}, this.LoadLotNoExtraInfoOnEQPOperationCompleted, userState);
        }
        
        private void OnLoadLotNoExtraInfoOnEQPOperationCompleted(object arg) {
            if ((this.LoadLotNoExtraInfoOnEQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotNoExtraInfoOnEQPCompleted(this, new LoadLotNoExtraInfoOnEQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAreaEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAreaEquipment(string InXml) {
            object[] results = this.Invoke("LoadAreaEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAreaEquipmentAsync(string InXml) {
            this.LoadAreaEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAreaEquipmentAsync(string InXml, object userState) {
            if ((this.LoadAreaEquipmentOperationCompleted == null)) {
                this.LoadAreaEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAreaEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadAreaEquipment", new object[] {
                        InXml}, this.LoadAreaEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadAreaEquipmentOperationCompleted(object arg) {
            if ((this.LoadAreaEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAreaEquipmentCompleted(this, new LoadAreaEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableEquipment", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableEquipment(string InXml) {
            object[] results = this.Invoke("LoadAvailableEquipment", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableEquipmentAsync(string InXml) {
            this.LoadAvailableEquipmentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableEquipmentAsync(string InXml, object userState) {
            if ((this.LoadAvailableEquipmentOperationCompleted == null)) {
                this.LoadAvailableEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableEquipmentOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableEquipment", new object[] {
                        InXml}, this.LoadAvailableEquipmentOperationCompleted, userState);
        }
        
        private void OnLoadAvailableEquipmentOperationCompleted(object arg) {
            if ((this.LoadAvailableEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableEquipmentCompleted(this, new LoadAvailableEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadAvailableEquipment_All", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAvailableEquipment_All(string InXml) {
            object[] results = this.Invoke("LoadAvailableEquipment_All", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableEquipment_AllAsync(string InXml) {
            this.LoadAvailableEquipment_AllAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadAvailableEquipment_AllAsync(string InXml, object userState) {
            if ((this.LoadAvailableEquipment_AllOperationCompleted == null)) {
                this.LoadAvailableEquipment_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableEquipment_AllOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableEquipment_All", new object[] {
                        InXml}, this.LoadAvailableEquipment_AllOperationCompleted, userState);
        }
        
        private void OnLoadAvailableEquipment_AllOperationCompleted(object arg) {
            if ((this.LoadAvailableEquipment_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableEquipment_AllCompleted(this, new LoadAvailableEquipment_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadLotAttribution", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadLotAttribution(string InXml) {
            object[] results = this.Invoke("LoadLotAttribution", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLotAttributionAsync(string InXml) {
            this.LoadLotAttributionAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadLotAttributionAsync(string InXml, object userState) {
            if ((this.LoadLotAttributionOperationCompleted == null)) {
                this.LoadLotAttributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLotAttributionOperationCompleted);
            }
            this.InvokeAsync("LoadLotAttribution", new object[] {
                        InXml}, this.LoadLotAttributionOperationCompleted, userState);
        }
        
        private void OnLoadLotAttributionOperationCompleted(object arg) {
            if ((this.LoadLotAttributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLotAttributionCompleted(this, new LoadLotAttributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMaskGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaskGroup(string InXml) {
            object[] results = this.Invoke("GetMaskGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaskGroupAsync(string InXml) {
            this.GetMaskGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMaskGroupAsync(string InXml, object userState) {
            if ((this.GetMaskGroupOperationCompleted == null)) {
                this.GetMaskGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaskGroupOperationCompleted);
            }
            this.InvokeAsync("GetMaskGroup", new object[] {
                        InXml}, this.GetMaskGroupOperationCompleted, userState);
        }
        
        private void OnGetMaskGroupOperationCompleted(object arg) {
            if ((this.GetMaskGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaskGroupCompleted(this, new GetMaskGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetMultiMaskGroup", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMultiMaskGroup(string InXml) {
            object[] results = this.Invoke("GetMultiMaskGroup", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiMaskGroupAsync(string InXml) {
            this.GetMultiMaskGroupAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetMultiMaskGroupAsync(string InXml, object userState) {
            if ((this.GetMultiMaskGroupOperationCompleted == null)) {
                this.GetMultiMaskGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiMaskGroupOperationCompleted);
            }
            this.InvokeAsync("GetMultiMaskGroup", new object[] {
                        InXml}, this.GetMultiMaskGroupOperationCompleted, userState);
        }
        
        private void OnGetMultiMaskGroupOperationCompleted(object arg) {
            if ((this.GetMultiMaskGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiMaskGroupCompleted(this, new GetMultiMaskGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/StartLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StartLot(string InXml) {
            object[] results = this.Invoke("StartLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartLotAsync(string InXml) {
            this.StartLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void StartLotAsync(string InXml, object userState) {
            if ((this.StartLotOperationCompleted == null)) {
                this.StartLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartLotOperationCompleted);
            }
            this.InvokeAsync("StartLot", new object[] {
                        InXml}, this.StartLotOperationCompleted, userState);
        }
        
        private void OnStartLotOperationCompleted(object arg) {
            if ((this.StartLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartLotCompleted(this, new StartLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TransferLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferLot(string InXml) {
            object[] results = this.Invoke("TransferLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferLotAsync(string InXml) {
            this.TransferLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void TransferLotAsync(string InXml, object userState) {
            if ((this.TransferLotOperationCompleted == null)) {
                this.TransferLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferLotOperationCompleted);
            }
            this.InvokeAsync("TransferLot", new object[] {
                        InXml}, this.TransferLotOperationCompleted, userState);
        }
        
        private void OnTransferLotOperationCompleted(object arg) {
            if ((this.TransferLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferLotCompleted(this, new TransferLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TransferLot_Multi", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferLot_Multi(string InXml) {
            object[] results = this.Invoke("TransferLot_Multi", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferLot_MultiAsync(string InXml) {
            this.TransferLot_MultiAsync(InXml, null);
        }
        
        /// <remarks/>
        public void TransferLot_MultiAsync(string InXml, object userState) {
            if ((this.TransferLot_MultiOperationCompleted == null)) {
                this.TransferLot_MultiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferLot_MultiOperationCompleted);
            }
            this.InvokeAsync("TransferLot_Multi", new object[] {
                        InXml}, this.TransferLot_MultiOperationCompleted, userState);
        }
        
        private void OnTransferLot_MultiOperationCompleted(object arg) {
            if ((this.TransferLot_MultiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferLot_MultiCompleted(this, new TransferLot_MultiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExecuteLot", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteLot(string InXml) {
            object[] results = this.Invoke("ExecuteLot", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteLotAsync(string InXml) {
            this.ExecuteLotAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExecuteLotAsync(string InXml, object userState) {
            if ((this.ExecuteLotOperationCompleted == null)) {
                this.ExecuteLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteLotOperationCompleted);
            }
            this.InvokeAsync("ExecuteLot", new object[] {
                        InXml}, this.ExecuteLotOperationCompleted, userState);
        }
        
        private void OnExecuteLotOperationCompleted(object arg) {
            if ((this.ExecuteLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteLotCompleted(this, new ExecuteLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExecuteLot_DT", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteLot_DT(string InXml) {
            object[] results = this.Invoke("ExecuteLot_DT", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteLot_DTAsync(string InXml) {
            this.ExecuteLot_DTAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExecuteLot_DTAsync(string InXml, object userState) {
            if ((this.ExecuteLot_DTOperationCompleted == null)) {
                this.ExecuteLot_DTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteLot_DTOperationCompleted);
            }
            this.InvokeAsync("ExecuteLot_DT", new object[] {
                        InXml}, this.ExecuteLot_DTOperationCompleted, userState);
        }
        
        private void OnExecuteLot_DTOperationCompleted(object arg) {
            if ((this.ExecuteLot_DTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteLot_DTCompleted(this, new ExecuteLot_DTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkUserOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkUserOP(string InXml) {
            object[] results = this.Invoke("ChkUserOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkUserOPAsync(string InXml) {
            this.ChkUserOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkUserOPAsync(string InXml, object userState) {
            if ((this.ChkUserOPOperationCompleted == null)) {
                this.ChkUserOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkUserOPOperationCompleted);
            }
            this.InvokeAsync("ChkUserOP", new object[] {
                        InXml}, this.ChkUserOPOperationCompleted, userState);
        }
        
        private void OnChkUserOPOperationCompleted(object arg) {
            if ((this.ChkUserOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkUserOPCompleted(this, new ChkUserOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ExecuteBR", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteBR(string InXml) {
            object[] results = this.Invoke("ExecuteBR", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteBRAsync(string InXml) {
            this.ExecuteBRAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ExecuteBRAsync(string InXml, object userState) {
            if ((this.ExecuteBROperationCompleted == null)) {
                this.ExecuteBROperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteBROperationCompleted);
            }
            this.InvokeAsync("ExecuteBR", new object[] {
                        InXml}, this.ExecuteBROperationCompleted, userState);
        }
        
        private void OnExecuteBROperationCompleted(object arg) {
            if ((this.ExecuteBRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteBRCompleted(this, new ExecuteBRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/TriggerOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TriggerOP(string InXml) {
            object[] results = this.Invoke("TriggerOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TriggerOPAsync(string InXml) {
            this.TriggerOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void TriggerOPAsync(string InXml, object userState) {
            if ((this.TriggerOPOperationCompleted == null)) {
                this.TriggerOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTriggerOPOperationCompleted);
            }
            this.InvokeAsync("TriggerOP", new object[] {
                        InXml}, this.TriggerOPOperationCompleted, userState);
        }
        
        private void OnTriggerOPOperationCompleted(object arg) {
            if ((this.TriggerOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TriggerOPCompleted(this, new TriggerOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ReverseTriggerOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReverseTriggerOP(string InXml) {
            object[] results = this.Invoke("ReverseTriggerOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseTriggerOPAsync(string InXml) {
            this.ReverseTriggerOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ReverseTriggerOPAsync(string InXml, object userState) {
            if ((this.ReverseTriggerOPOperationCompleted == null)) {
                this.ReverseTriggerOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseTriggerOPOperationCompleted);
            }
            this.InvokeAsync("ReverseTriggerOP", new object[] {
                        InXml}, this.ReverseTriggerOPOperationCompleted, userState);
        }
        
        private void OnReverseTriggerOPOperationCompleted(object arg) {
            if ((this.ReverseTriggerOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseTriggerOPCompleted(this, new ReverseTriggerOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/SetLotStateToOtherGroupOP", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLotStateToOtherGroupOP(string InXml) {
            object[] results = this.Invoke("SetLotStateToOtherGroupOP", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLotStateToOtherGroupOPAsync(string InXml) {
            this.SetLotStateToOtherGroupOPAsync(InXml, null);
        }
        
        /// <remarks/>
        public void SetLotStateToOtherGroupOPAsync(string InXml, object userState) {
            if ((this.SetLotStateToOtherGroupOPOperationCompleted == null)) {
                this.SetLotStateToOtherGroupOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLotStateToOtherGroupOPOperationCompleted);
            }
            this.InvokeAsync("SetLotStateToOtherGroupOP", new object[] {
                        InXml}, this.SetLotStateToOtherGroupOPOperationCompleted, userState);
        }
        
        private void OnSetLotStateToOtherGroupOPOperationCompleted(object arg) {
            if ((this.SetLotStateToOtherGroupOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLotStateToOtherGroupOPCompleted(this, new SetLotStateToOtherGroupOPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadTempData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadTempData(string InXml) {
            object[] results = this.Invoke("LoadTempData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTempDataAsync(string InXml) {
            this.LoadTempDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadTempDataAsync(string InXml, object userState) {
            if ((this.LoadTempDataOperationCompleted == null)) {
                this.LoadTempDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTempDataOperationCompleted);
            }
            this.InvokeAsync("LoadTempData", new object[] {
                        InXml}, this.LoadTempDataOperationCompleted, userState);
        }
        
        private void OnLoadTempDataOperationCompleted(object arg) {
            if ((this.LoadTempDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTempDataCompleted(this, new LoadTempDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckInAsync(string InXml) {
            this.Exe_CheckInAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckInAsync(string InXml, object userState) {
            if ((this.Exe_CheckInOperationCompleted == null)) {
                this.Exe_CheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckInOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn", new object[] {
                        InXml}, this.Exe_CheckInOperationCompleted, userState);
        }
        
        private void OnExe_CheckInOperationCompleted(object arg) {
            if ((this.Exe_CheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckInCompleted(this, new Exe_CheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_EQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_EQC(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_EQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_EQCAsync(string InXml) {
            this.Exe_CheckIn_EQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_EQCAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_EQCOperationCompleted == null)) {
                this.Exe_CheckIn_EQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_EQCOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_EQC", new object[] {
                        InXml}, this.Exe_CheckIn_EQCOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_EQCOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_EQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_EQCCompleted(this, new Exe_CheckIn_EQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Repair", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Repair(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Repair", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_RepairAsync(string InXml) {
            this.Exe_CheckOut_RepairAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_RepairAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_RepairOperationCompleted == null)) {
                this.Exe_CheckOut_RepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_RepairOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Repair", new object[] {
                        InXml}, this.Exe_CheckOut_RepairOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_RepairOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_RepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_RepairCompleted(this, new Exe_CheckOut_RepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOutAsync(string InXml) {
            this.Exe_CheckOutAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOutAsync(string InXml, object userState) {
            if ((this.Exe_CheckOutOperationCompleted == null)) {
                this.Exe_CheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOutOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut", new object[] {
                        InXml}, this.Exe_CheckOutOperationCompleted, userState);
        }
        
        private void OnExe_CheckOutOperationCompleted(object arg) {
            if ((this.Exe_CheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOutCompleted(this, new Exe_CheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_CSQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_CSQC(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_CSQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CSQCAsync(string InXml) {
            this.Exe_CheckOut_CSQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CSQCAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_CSQCOperationCompleted == null)) {
                this.Exe_CheckOut_CSQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_CSQCOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_CSQC", new object[] {
                        InXml}, this.Exe_CheckOut_CSQCOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_CSQCOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_CSQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_CSQCCompleted(this, new Exe_CheckOut_CSQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_ComponentCheckOut", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_ComponentCheckOut(string InXml) {
            object[] results = this.Invoke("Exe_ComponentCheckOut", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_ComponentCheckOutAsync(string InXml) {
            this.Exe_ComponentCheckOutAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_ComponentCheckOutAsync(string InXml, object userState) {
            if ((this.Exe_ComponentCheckOutOperationCompleted == null)) {
                this.Exe_ComponentCheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_ComponentCheckOutOperationCompleted);
            }
            this.InvokeAsync("Exe_ComponentCheckOut", new object[] {
                        InXml}, this.Exe_ComponentCheckOutOperationCompleted, userState);
        }
        
        private void OnExe_ComponentCheckOutOperationCompleted(object arg) {
            if ((this.Exe_ComponentCheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_ComponentCheckOutCompleted(this, new Exe_ComponentCheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_SPCControl", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_SPCControl(string InXml) {
            object[] results = this.Invoke("Exe_SPCControl", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_SPCControlAsync(string InXml) {
            this.Exe_SPCControlAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_SPCControlAsync(string InXml, object userState) {
            if ((this.Exe_SPCControlOperationCompleted == null)) {
                this.Exe_SPCControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_SPCControlOperationCompleted);
            }
            this.InvokeAsync("Exe_SPCControl", new object[] {
                        InXml}, this.Exe_SPCControlOperationCompleted, userState);
        }
        
        private void OnExe_SPCControlOperationCompleted(object arg) {
            if ((this.Exe_SPCControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_SPCControlCompleted(this, new Exe_SPCControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_Carrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_Carrier(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_Carrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_CarrierAsync(string InXml) {
            this.Exe_CheckIn_CarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_CarrierAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_CarrierOperationCompleted == null)) {
                this.Exe_CheckIn_CarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_CarrierOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_Carrier", new object[] {
                        InXml}, this.Exe_CheckIn_CarrierOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_CarrierOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_CarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_CarrierCompleted(this, new Exe_CheckIn_CarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Carrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Carrier(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Carrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarrierAsync(string InXml) {
            this.Exe_CheckOut_CarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_CarrierAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_CarrierOperationCompleted == null)) {
                this.Exe_CheckOut_CarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_CarrierOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Carrier", new object[] {
                        InXml}, this.Exe_CheckOut_CarrierOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_CarrierOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_CarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_CarrierCompleted(this, new Exe_CheckOut_CarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_OutSource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_OutSource(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_OutSource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_OutSourceAsync(string InXml) {
            this.Exe_CheckIn_OutSourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_OutSourceAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_OutSourceOperationCompleted == null)) {
                this.Exe_CheckIn_OutSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_OutSourceOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_OutSource", new object[] {
                        InXml}, this.Exe_CheckIn_OutSourceOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_OutSourceOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_OutSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_OutSourceCompleted(this, new Exe_CheckIn_OutSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_OutSource", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_OutSource(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_OutSource", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_OutSourceAsync(string InXml) {
            this.Exe_CheckOut_OutSourceAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_OutSourceAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_OutSourceOperationCompleted == null)) {
                this.Exe_CheckOut_OutSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_OutSourceOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_OutSource", new object[] {
                        InXml}, this.Exe_CheckOut_OutSourceOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_OutSourceOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_OutSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_OutSourceCompleted(this, new Exe_CheckOut_OutSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckIn_Cassette_PKG", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckIn_Cassette_PKG(string InXml) {
            object[] results = this.Invoke("Exe_CheckIn_Cassette_PKG", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckIn_Cassette_PKGAsync(string InXml) {
            this.Exe_CheckIn_Cassette_PKGAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckIn_Cassette_PKGAsync(string InXml, object userState) {
            if ((this.Exe_CheckIn_Cassette_PKGOperationCompleted == null)) {
                this.Exe_CheckIn_Cassette_PKGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckIn_Cassette_PKGOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckIn_Cassette_PKG", new object[] {
                        InXml}, this.Exe_CheckIn_Cassette_PKGOperationCompleted, userState);
        }
        
        private void OnExe_CheckIn_Cassette_PKGOperationCompleted(object arg) {
            if ((this.Exe_CheckIn_Cassette_PKGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckIn_Cassette_PKGCompleted(this, new Exe_CheckIn_Cassette_PKGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_Cassette_PKG", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_Cassette_PKG(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_Cassette_PKG", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_Cassette_PKGAsync(string InXml) {
            this.Exe_CheckOut_Cassette_PKGAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_Cassette_PKGAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_Cassette_PKGOperationCompleted == null)) {
                this.Exe_CheckOut_Cassette_PKGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_Cassette_PKGOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_Cassette_PKG", new object[] {
                        InXml}, this.Exe_CheckOut_Cassette_PKGOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_Cassette_PKGOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_Cassette_PKGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_Cassette_PKGCompleted(this, new Exe_CheckOut_Cassette_PKGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkMaterialStorage", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkMaterialStorage(string InXml) {
            object[] results = this.Invoke("ChkMaterialStorage", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkMaterialStorageAsync(string InXml) {
            this.ChkMaterialStorageAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkMaterialStorageAsync(string InXml, object userState) {
            if ((this.ChkMaterialStorageOperationCompleted == null)) {
                this.ChkMaterialStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkMaterialStorageOperationCompleted);
            }
            this.InvokeAsync("ChkMaterialStorage", new object[] {
                        InXml}, this.ChkMaterialStorageOperationCompleted, userState);
        }
        
        private void OnChkMaterialStorageOperationCompleted(object arg) {
            if ((this.ChkMaterialStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkMaterialStorageCompleted(this, new ChkMaterialStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkControlRule", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkControlRule(string InXml) {
            object[] results = this.Invoke("ChkControlRule", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkControlRuleAsync(string InXml) {
            this.ChkControlRuleAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkControlRuleAsync(string InXml, object userState) {
            if ((this.ChkControlRuleOperationCompleted == null)) {
                this.ChkControlRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkControlRuleOperationCompleted);
            }
            this.InvokeAsync("ChkControlRule", new object[] {
                        InXml}, this.ChkControlRuleOperationCompleted, userState);
        }
        
        private void OnChkControlRuleOperationCompleted(object arg) {
            if ((this.ChkControlRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkControlRuleCompleted(this, new ChkControlRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/ChkControlRule_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkControlRule_Component(string InXml) {
            object[] results = this.Invoke("ChkControlRule_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkControlRule_ComponentAsync(string InXml) {
            this.ChkControlRule_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void ChkControlRule_ComponentAsync(string InXml, object userState) {
            if ((this.ChkControlRule_ComponentOperationCompleted == null)) {
                this.ChkControlRule_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkControlRule_ComponentOperationCompleted);
            }
            this.InvokeAsync("ChkControlRule_Component", new object[] {
                        InXml}, this.ChkControlRule_ComponentOperationCompleted, userState);
        }
        
        private void OnChkControlRule_ComponentOperationCompleted(object arg) {
            if ((this.ChkControlRule_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkControlRule_ComponentCompleted(this, new ChkControlRule_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/EditLotLog", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditLotLog(string InXml) {
            object[] results = this.Invoke("EditLotLog", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLotLogAsync(string InXml) {
            this.EditLotLogAsync(InXml, null);
        }
        
        /// <remarks/>
        public void EditLotLogAsync(string InXml, object userState) {
            if ((this.EditLotLogOperationCompleted == null)) {
                this.EditLotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLotLogOperationCompleted);
            }
            this.InvokeAsync("EditLotLog", new object[] {
                        InXml}, this.EditLotLogOperationCompleted, userState);
        }
        
        private void OnEditLotLogOperationCompleted(object arg) {
            if ((this.EditLotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLotLogCompleted(this, new EditLotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotSplit(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplitAsync(string InXml) {
            this.Exe_Manual_LotSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplitAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotSplitOperationCompleted == null)) {
                this.Exe_Manual_LotSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotSplit", new object[] {
                        InXml}, this.Exe_Manual_LotSplitOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotSplitOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotSplitCompleted(this, new Exe_Manual_LotSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotSplit_Component", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotSplit_Component(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotSplit_Component", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_ComponentAsync(string InXml) {
            this.Exe_Manual_LotSplit_ComponentAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_ComponentAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotSplit_ComponentOperationCompleted == null)) {
                this.Exe_Manual_LotSplit_ComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotSplit_ComponentOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotSplit_Component", new object[] {
                        InXml}, this.Exe_Manual_LotSplit_ComponentOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotSplit_ComponentOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotSplit_ComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotSplit_ComponentCompleted(this, new Exe_Manual_LotSplit_ComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotSplit_Carrier", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotSplit_Carrier(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotSplit_Carrier", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_CarrierAsync(string InXml) {
            this.Exe_Manual_LotSplit_CarrierAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_CarrierAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotSplit_CarrierOperationCompleted == null)) {
                this.Exe_Manual_LotSplit_CarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotSplit_CarrierOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotSplit_Carrier", new object[] {
                        InXml}, this.Exe_Manual_LotSplit_CarrierOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotSplit_CarrierOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotSplit_CarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotSplit_CarrierCompleted(this, new Exe_Manual_LotSplit_CarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/GetSerialNo", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSerialNo(string InXml) {
            object[] results = this.Invoke("GetSerialNo", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerialNoAsync(string InXml) {
            this.GetSerialNoAsync(InXml, null);
        }
        
        /// <remarks/>
        public void GetSerialNoAsync(string InXml, object userState) {
            if ((this.GetSerialNoOperationCompleted == null)) {
                this.GetSerialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerialNoOperationCompleted);
            }
            this.InvokeAsync("GetSerialNo", new object[] {
                        InXml}, this.GetSerialNoOperationCompleted, userState);
        }
        
        private void OnGetSerialNoOperationCompleted(object arg) {
            if ((this.GetSerialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerialNoCompleted(this, new GetSerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_FT", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_FT(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_FT", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_FTAsync(string InXml) {
            this.Exe_CheckOut_FTAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_FTAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_FTOperationCompleted == null)) {
                this.Exe_CheckOut_FTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_FTOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_FT", new object[] {
                        InXml}, this.Exe_CheckOut_FTOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_FTOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_FTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_FTCompleted(this, new Exe_CheckOut_FTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/DelContentRTBin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelContentRTBin(string InXml) {
            object[] results = this.Invoke("DelContentRTBin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelContentRTBinAsync(string InXml) {
            this.DelContentRTBinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void DelContentRTBinAsync(string InXml, object userState) {
            if ((this.DelContentRTBinOperationCompleted == null)) {
                this.DelContentRTBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelContentRTBinOperationCompleted);
            }
            this.InvokeAsync("DelContentRTBin", new object[] {
                        InXml}, this.DelContentRTBinOperationCompleted, userState);
        }
        
        private void OnDelContentRTBinOperationCompleted(object arg) {
            if ((this.DelContentRTBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelContentRTBinCompleted(this, new DelContentRTBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_RTBinData", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_RTBinData(string InXml) {
            object[] results = this.Invoke("LoadCont_RTBinData", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_RTBinDataAsync(string InXml) {
            this.LoadCont_RTBinDataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_RTBinDataAsync(string InXml, object userState) {
            if ((this.LoadCont_RTBinDataOperationCompleted == null)) {
                this.LoadCont_RTBinDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_RTBinDataOperationCompleted);
            }
            this.InvokeAsync("LoadCont_RTBinData", new object[] {
                        InXml}, this.LoadCont_RTBinDataOperationCompleted, userState);
        }
        
        private void OnLoadCont_RTBinDataOperationCompleted(object arg) {
            if ((this.LoadCont_RTBinDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_RTBinDataCompleted(this, new LoadCont_RTBinDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/LoadCont_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCont_Bin(string InXml) {
            object[] results = this.Invoke("LoadCont_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCont_BinAsync(string InXml) {
            this.LoadCont_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void LoadCont_BinAsync(string InXml, object userState) {
            if ((this.LoadCont_BinOperationCompleted == null)) {
                this.LoadCont_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCont_BinOperationCompleted);
            }
            this.InvokeAsync("LoadCont_Bin", new object[] {
                        InXml}, this.LoadCont_BinOperationCompleted, userState);
        }
        
        private void OnLoadCont_BinOperationCompleted(object arg) {
            if ((this.LoadCont_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCont_BinCompleted(this, new LoadCont_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Save_RT_Data", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Save_RT_Data(string InXml) {
            object[] results = this.Invoke("Save_RT_Data", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Save_RT_DataAsync(string InXml) {
            this.Save_RT_DataAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Save_RT_DataAsync(string InXml, object userState) {
            if ((this.Save_RT_DataOperationCompleted == null)) {
                this.Save_RT_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_RT_DataOperationCompleted);
            }
            this.InvokeAsync("Save_RT_Data", new object[] {
                        InXml}, this.Save_RT_DataOperationCompleted, userState);
        }
        
        private void OnSave_RT_DataOperationCompleted(object arg) {
            if ((this.Save_RT_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_RT_DataCompleted(this, new Save_RT_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_EQC", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_EQC(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_EQC", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_EQCAsync(string InXml) {
            this.Exe_CheckOut_EQCAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_EQCAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_EQCOperationCompleted == null)) {
                this.Exe_CheckOut_EQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_EQCOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_EQC", new object[] {
                        InXml}, this.Exe_CheckOut_EQCOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_EQCOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_EQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_EQCCompleted(this, new Exe_CheckOut_EQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_CheckOut_EQC_UnChangeBinState", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_CheckOut_EQC_UnChangeBinState(string InXml) {
            object[] results = this.Invoke("Exe_CheckOut_EQC_UnChangeBinState", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_CheckOut_EQC_UnChangeBinStateAsync(string InXml) {
            this.Exe_CheckOut_EQC_UnChangeBinStateAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_CheckOut_EQC_UnChangeBinStateAsync(string InXml, object userState) {
            if ((this.Exe_CheckOut_EQC_UnChangeBinStateOperationCompleted == null)) {
                this.Exe_CheckOut_EQC_UnChangeBinStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_CheckOut_EQC_UnChangeBinStateOperationCompleted);
            }
            this.InvokeAsync("Exe_CheckOut_EQC_UnChangeBinState", new object[] {
                        InXml}, this.Exe_CheckOut_EQC_UnChangeBinStateOperationCompleted, userState);
        }
        
        private void OnExe_CheckOut_EQC_UnChangeBinStateOperationCompleted(object arg) {
            if ((this.Exe_CheckOut_EQC_UnChangeBinStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_CheckOut_EQC_UnChangeBinStateCompleted(this, new Exe_CheckOut_EQC_UnChangeBinStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_Manual_LotSplit_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_Manual_LotSplit_Bin(string InXml) {
            object[] results = this.Invoke("Exe_Manual_LotSplit_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_BinAsync(string InXml) {
            this.Exe_Manual_LotSplit_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_Manual_LotSplit_BinAsync(string InXml, object userState) {
            if ((this.Exe_Manual_LotSplit_BinOperationCompleted == null)) {
                this.Exe_Manual_LotSplit_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_Manual_LotSplit_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_Manual_LotSplit_Bin", new object[] {
                        InXml}, this.Exe_Manual_LotSplit_BinOperationCompleted, userState);
        }
        
        private void OnExe_Manual_LotSplit_BinOperationCompleted(object arg) {
            if ((this.Exe_Manual_LotSplit_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_Manual_LotSplit_BinCompleted(this, new Exe_Manual_LotSplit_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotSplit_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotSplit_Bin(string InXml) {
            object[] results = this.Invoke("Exe_LotSplit_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotSplit_BinAsync(string InXml) {
            this.Exe_LotSplit_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotSplit_BinAsync(string InXml, object userState) {
            if ((this.Exe_LotSplit_BinOperationCompleted == null)) {
                this.Exe_LotSplit_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotSplit_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_LotSplit_Bin", new object[] {
                        InXml}, this.Exe_LotSplit_BinOperationCompleted, userState);
        }
        
        private void OnExe_LotSplit_BinOperationCompleted(object arg) {
            if ((this.Exe_LotSplit_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotSplit_BinCompleted(this, new Exe_LotSplit_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotSplit", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotSplit(string InXml) {
            object[] results = this.Invoke("Exe_LotSplit", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotSplitAsync(string InXml) {
            this.Exe_LotSplitAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotSplitAsync(string InXml, object userState) {
            if ((this.Exe_LotSplitOperationCompleted == null)) {
                this.Exe_LotSplitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotSplitOperationCompleted);
            }
            this.InvokeAsync("Exe_LotSplit", new object[] {
                        InXml}, this.Exe_LotSplitOperationCompleted, userState);
        }
        
        private void OnExe_LotSplitOperationCompleted(object arg) {
            if ((this.Exe_LotSplitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotSplitCompleted(this, new Exe_LotSplitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imestech.com/Exe_LotMerge_Bin", RequestNamespace="http://www.imestech.com/", ResponseNamespace="http://www.imestech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exe_LotMerge_Bin(string InXml) {
            object[] results = this.Invoke("Exe_LotMerge_Bin", new object[] {
                        InXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Exe_LotMerge_BinAsync(string InXml) {
            this.Exe_LotMerge_BinAsync(InXml, null);
        }
        
        /// <remarks/>
        public void Exe_LotMerge_BinAsync(string InXml, object userState) {
            if ((this.Exe_LotMerge_BinOperationCompleted == null)) {
                this.Exe_LotMerge_BinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExe_LotMerge_BinOperationCompleted);
            }
            this.InvokeAsync("Exe_LotMerge_Bin", new object[] {
                        InXml}, this.Exe_LotMerge_BinOperationCompleted, userState);
        }
        
        private void OnExe_LotMerge_BinOperationCompleted(object arg) {
            if ((this.Exe_LotMerge_BinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Exe_LotMerge_BinCompleted(this, new Exe_LotMerge_BinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMachine_SynCompletedEventHandler(object sender, LoadMachine_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMachine_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMachine_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Machine_SynCompletedEventHandler(object sender, Exe_Machine_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Machine_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Machine_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadModule_SynCompletedEventHandler(object sender, LoadModule_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadModule_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadModule_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Module_SynCompletedEventHandler(object sender, Exe_Module_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Module_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Module_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadStage_SynCompletedEventHandler(object sender, LoadStage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadStage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadStage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Stage_SynCompletedEventHandler(object sender, Exe_Stage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Stage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Stage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadStation_SynCompletedEventHandler(object sender, LoadStation_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadStation_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadStation_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Station_SynCompletedEventHandler(object sender, Exe_Station_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Station_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Station_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSTDTime_SynCompletedEventHandler(object sender, LoadSTDTime_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSTDTime_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSTDTime_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_STDTime_SynCompletedEventHandler(object sender, Exe_STDTime_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_STDTime_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_STDTime_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOIInfo_SynCompletedEventHandler(object sender, LoadOIInfo_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOIInfo_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOIInfo_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_OIInfo_SynCompletedEventHandler(object sender, Exe_OIInfo_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_OIInfo_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_OIInfo_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLineMONo_SynCompletedEventHandler(object sender, LoadLineMONo_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLineMONo_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLineMONo_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LineMONo_SynCompletedEventHandler(object sender, Exe_LineMONo_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LineMONo_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LineMONo_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMaterial_SynCompletedEventHandler(object sender, LoadMaterial_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMaterial_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMaterial_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Material_SynCompletedEventHandler(object sender, Exe_Material_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Material_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Material_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFeederMaterial_SynCompletedEventHandler(object sender, LoadFeederMaterial_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFeederMaterial_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFeederMaterial_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FeederMaterial_SynCompletedEventHandler(object sender, Exe_FeederMaterial_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FeederMaterial_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FeederMaterial_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLineStorage_SynCompletedEventHandler(object sender, LoadLineStorage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLineStorage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLineStorage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LineStorage_SynCompletedEventHandler(object sender, Exe_LineStorage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LineStorage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LineStorage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMachineStorage_SynCompletedEventHandler(object sender, LoadMachineStorage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMachineStorage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMachineStorage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_MachineStorage_SynCompletedEventHandler(object sender, Exe_MachineStorage_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_MachineStorage_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_MachineStorage_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMaterialRel_SynCompletedEventHandler(object sender, LoadMaterialRel_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMaterialRel_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMaterialRel_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_MaterialRel_SynCompletedEventHandler(object sender, Exe_MaterialRel_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_MaterialRel_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_MaterialRel_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTorsionLogCompletedEventHandler(object sender, LoadTorsionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTorsionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTorsionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsCorrectPCBCompletedEventHandler(object sender, IsCorrectPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCorrectPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCorrectPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPackingLabelDataCreate_M1CompletedEventHandler(object sender, ExeMOPackingLabelDataCreate_M1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPackingLabelDataCreate_M1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPackingLabelDataCreate_M1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_Auto_TYCompletedEventHandler(object sender, Exe_SMTMaterialReturn_Auto_TYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_Auto_TYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_Auto_TYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdFeederMFU_NewCompletedEventHandler(object sender, UpdFeederMFU_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdFeederMFU_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdFeederMFU_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFeederMFU_NewCompletedEventHandler(object sender, DelFeederMFU_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFeederMFU_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFeederMFU_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCounterStateCompletedEventHandler(object sender, LoadCounterStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCounterStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCounterStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCounterLogCompletedEventHandler(object sender, LoadCounterLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCounterLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCounterLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWipMarkBuilderCompletedEventHandler(object sender, LoadWipMarkBuilderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWipMarkBuilderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWipMarkBuilderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWipMarkBuilderCompletedEventHandler(object sender, AddWipMarkBuilderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWipMarkBuilderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWipMarkBuilderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWipMarkBuilderCompletedEventHandler(object sender, DelWipMarkBuilderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWipMarkBuilderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWipMarkBuilderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFGPreBoardStatusCompletedEventHandler(object sender, LoadMFGPreBoardStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFGPreBoardStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFGPreBoardStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSysParameterCompletedEventHandler(object sender, LoadSysParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSysParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSysParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AutoAddMOPDLineStateCompletedEventHandler(object sender, AutoAddMOPDLineStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoAddMOPDLineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoAddMOPDLineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtExcesssDetailCompletedEventHandler(object sender, LoadSmtExcesssDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtExcesssDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtExcesssDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtExcesssCompletedEventHandler(object sender, LoadSmtExcesssCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtExcesssCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtExcesssCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtMoScheduleCompletedEventHandler(object sender, LoadSmtMoScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtMoScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtMoScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederINVReturnDetailCompletedEventHandler(object sender, LoadSMTFeederINVReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederINVReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederINVReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVReturnDataCompletedEventHandler(object sender, SMTFeederINVReturnDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVReturnDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVReturnDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelSMTFeederINVReturnDataCompletedEventHandler(object sender, DelSMTFeederINVReturnDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSMTFeederINVReturnDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSMTFeederINVReturnDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVReturnCompleteCompletedEventHandler(object sender, SMTFeederINVReturnCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVReturnCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVReturnCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederReturnINVTransferCompletedEventHandler(object sender, SMTFeederReturnINVTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederReturnINVTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederReturnINVTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVLackPickupCompletedEventHandler(object sender, SMTFeederINVLackPickupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVLackPickupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVLackPickupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVLackDetail_DelCompletedEventHandler(object sender, SMTFeederINVLackDetail_DelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVLackDetail_DelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVLackDetail_DelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVLackDetail_ClearCompletedEventHandler(object sender, SMTFeederINVLackDetail_ClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVLackDetail_ClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVLackDetail_ClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederINVLackDetail_CompleteCompletedEventHandler(object sender, SMTFeederINVLackDetail_CompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederINVLackDetail_CompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederINVLackDetail_CompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederINVLackPickupBasisCompletedEventHandler(object sender, LoadSMTFeederINVLackPickupBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederINVLackPickupBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederINVLackPickupBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederINVLackPickupDetailCompletedEventHandler(object sender, LoadSMTFeederINVLackPickupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederINVLackPickupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederINVLackPickupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederLackTransferDetailCompletedEventHandler(object sender, LoadSMTFeederLackTransferDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederLackTransferDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederLackTransferDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupToMES_LackCompletedEventHandler(object sender, SMTFeederPickupToMES_LackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupToMES_LackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupToMES_LackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederComplete_LackCompletedEventHandler(object sender, SMTFeederComplete_LackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederComplete_LackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederComplete_LackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederPLCCompletedEventHandler(object sender, LoadSMTFeederPLCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederPLCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederPLCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederReturnRequestCompletedEventHandler(object sender, LoadSMTFeederReturnRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederReturnRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederReturnRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSMTFeederReturnRequestCompletedEventHandler(object sender, UpdateSMTFeederReturnRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMTFeederReturnRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMTFeederReturnRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederLEDRequestForPLCCompletedEventHandler(object sender, LoadSMTFeederLEDRequestForPLCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederLEDRequestForPLCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederLEDRequestForPLCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTPCBRepairBasisCompletedEventHandler(object sender, LoadSMTPCBRepairBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTPCBRepairBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTPCBRepairBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTPCBRepairDetailCompletedEventHandler(object sender, LoadSMTPCBRepairDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTPCBRepairDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTPCBRepairDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdatePCBRepairStatusCompletedEventHandler(object sender, UpdatePCBRepairStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePCBRepairStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePCBRepairStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdatePCBPhotoStatusCompletedEventHandler(object sender, UpdatePCBPhotoStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePCBPhotoStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePCBPhotoStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMaterialNoCompletedEventHandler(object sender, LoadMaterialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMaterialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMaterialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddThermalPaste_LogCompletedEventHandler(object sender, AddThermalPaste_LogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddThermalPaste_LogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddThermalPaste_LogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RecordWIPCurrMoNoCompletedEventHandler(object sender, RecordWIPCurrMoNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordWIPCurrMoNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordWIPCurrMoNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void OperateBindingCompletedEventHandler(object sender, OperateBindingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperateBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperateBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPPadBindingInfoCompletedEventHandler(object sender, LoadWIPPadBindingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPPadBindingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPPadBindingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCurrMaterialInfoCompletedEventHandler(object sender, LoadCurrMaterialInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCurrMaterialInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCurrMaterialInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadScheduleCompletedEventHandler(object sender, LoadScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOLabelPathCompletedEventHandler(object sender, LoadMOLabelPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOLabelPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOLabelPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelMOLabelPathCompletedEventHandler(object sender, DelMOLabelPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMOLabelPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMOLabelPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditMOLabelPathCompletedEventHandler(object sender, EditMOLabelPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditMOLabelPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditMOLabelPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMCSerialNoCompletedEventHandler(object sender, LoadMCSerialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMCSerialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMCSerialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMTransferBasisForDB1CompletedEventHandler(object sender, LoadPLMTransferBasisForDB1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMTransferBasisForDB1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMTransferBasisForDB1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdatePLMTransferResultForDB1CompletedEventHandler(object sender, UpdatePLMTransferResultForDB1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePLMTransferResultForDB1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePLMTransferResultForDB1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMTransferBasisForDB2CompletedEventHandler(object sender, LoadPLMTransferBasisForDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMTransferBasisForDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMTransferBasisForDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMTransferBasisForDB2_OtherCompletedEventHandler(object sender, LoadPLMTransferBasisForDB2_OtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMTransferBasisForDB2_OtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMTransferBasisForDB2_OtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdatePLMTransferResultForDB2CompletedEventHandler(object sender, UpdatePLMTransferResultForDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePLMTransferResultForDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePLMTransferResultForDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMDataCompletedEventHandler(object sender, LoadPLMDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMDataByMachineNoCompletedEventHandler(object sender, LoadPLMDataByMachineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMDataByMachineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMDataByMachineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateDownLoadDekCompletedEventHandler(object sender, UpdateDownLoadDekCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDownLoadDekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDownLoadDekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMMaterial_otherCompletedEventHandler(object sender, LoadPLMMaterial_otherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMMaterial_otherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMMaterial_otherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PIG1PackingCompletedEventHandler(object sender, PIG1PackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PIG1PackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PIG1PackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPackBasis {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPIG1ListNoCompletedEventHandler(object sender, GetPIG1ListNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIG1ListNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIG1ListNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPIG1LotStateCompletedEventHandler(object sender, GetPIG1LotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIG1LotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIG1LotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetWaitPackQtyCompletedEventHandler(object sender, GetWaitPackQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaitPackQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaitPackQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetBoxLockCompletedEventHandler(object sender, GetBoxLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdBoxLockCompletedEventHandler(object sender, UpdBoxLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdBoxLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdBoxLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PackUnLockCompletedEventHandler(object sender, PackUnLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackUnLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PackUnLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void funIsPIG1CompletedEventHandler(object sender, funIsPIG1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class funIsPIG1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal funIsPIG1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPackingBasisCompletedEventHandler(object sender, GetPackingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPIG1BoxBasisCompletedEventHandler(object sender, LoadPIG1BoxBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPIG1BoxBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPIG1BoxBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFRNCompletedEventHandler(object sender, GetFRNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFRNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFRNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PIG1InventoryCompletedEventHandler(object sender, PIG1InventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PIG1InventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PIG1InventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PIG1SplitBoxCompletedEventHandler(object sender, PIG1SplitBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PIG1SplitBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PIG1SplitBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PIG1MergeBoxCompletedEventHandler(object sender, PIG1MergeBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PIG1MergeBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PIG1MergeBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PIG1InvOutCompletedEventHandler(object sender, PIG1InvOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PIG1InvOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PIG1InvOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPackingLabelDataCreate_PIG1CompletedEventHandler(object sender, ExeMOPackingLabelDataCreate_PIG1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPackingLabelDataCreate_PIG1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPackingLabelDataCreate_PIG1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingPrintLabel_PIG1CompletedEventHandler(object sender, LoadMOPackingPrintLabel_PIG1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingPrintLabel_PIG1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingPrintLabel_PIG1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeTRSCombinePickup_PIG1CompletedEventHandler(object sender, ExeTRSCombinePickup_PIG1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeTRSCombinePickup_PIG1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeTRSCombinePickup_PIG1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPIG1BoxNoCompletedEventHandler(object sender, GetPIG1BoxNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIG1BoxNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIG1BoxNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadHMILotMonoInfoCompletedEventHandler(object sender, LoadHMILotMonoInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadHMILotMonoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadHMILotMonoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPLMBomDetailCompletedEventHandler(object sender, LoadPLMBomDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPLMBomDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPLMBomDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLaserBasePointCompletedEventHandler(object sender, LoadLaserBasePointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLaserBasePointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLaserBasePointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPackingLabelDataCreate_SISCompletedEventHandler(object sender, ExeMOPackingLabelDataCreate_SISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPackingLabelDataCreate_SISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPackingLabelDataCreate_SISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadsysdateCompletedEventHandler(object sender, LoadsysdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadsysdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadsysdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOASMProcedureCompletedEventHandler(object sender, LoadMOASMProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOASMProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOASMProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOASMSubOPNoCompletedEventHandler(object sender, LoadMOASMSubOPNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOASMSubOPNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOASMSubOPNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void BindMOASMProcedureCompletedEventHandler(object sender, BindMOASMProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindMOASMProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindMOASMProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateMOASMProcedureCompletedEventHandler(object sender, UpdateMOASMProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMOASMProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMOASMProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateMOASMProcedureAllCompletedEventHandler(object sender, UpdateMOASMProcedureAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMOASMProcedureAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMOASMProcedureAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelMOASMProcedureCompletedEventHandler(object sender, DelMOASMProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMOASMProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMOASMProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTASMMachineInfoCompletedEventHandler(object sender, LoadSMTASMMachineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTASMMachineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTASMMachineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTASMOITransferCompletedEventHandler(object sender, LoadSMTASMOITransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTASMOITransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTASMOITransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTASMPartRefilTransferCompletedEventHandler(object sender, LoadSMTASMPartRefilTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTASMPartRefilTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTASMPartRefilTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTASMMaterialByFeederNoCompletedEventHandler(object sender, LoadSMTASMMaterialByFeederNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTASMMaterialByFeederNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTASMMaterialByFeederNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTASMFeederSetupCompletedEventHandler(object sender, Exe_SMTASMFeederSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTASMFeederSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTASMFeederSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTASMUnloadCompCompletedEventHandler(object sender, Exe_SMTASMUnloadCompCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTASMUnloadCompCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTASMUnloadCompCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTASMFeederListCompletedEventHandler(object sender, Exe_SMTASMFeederListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTASMFeederListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTASMFeederListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTASMPartsRefilCompletedEventHandler(object sender, Exe_SMTASMPartsRefilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTASMPartsRefilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTASMPartsRefilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLine_SynCompletedEventHandler(object sender, LoadLine_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLine_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLine_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Line_SynCompletedEventHandler(object sender, Exe_Line_SynCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Line_SynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Line_SynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederTransferDetailCompletedEventHandler(object sender, LoadSMTFeederTransferDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederTransferDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederTransferDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederPickupMaterialDetailCompletedEventHandler(object sender, LoadSMTFeederPickupMaterialDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederPickupMaterialDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederPickupMaterialDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederReturnTransferCompletedEventHandler(object sender, SMTFeederReturnTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederReturnTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederReturnTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupTransferCompletedEventHandler(object sender, SMTFeederPickupTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupToMESCompletedEventHandler(object sender, SMTFeederPickupToMESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupToMESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupToMESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederCompleteCompletedEventHandler(object sender, SMTFeederCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupConfirmCompletedEventHandler(object sender, SMTFeederPickupConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederReturnConfirmCompletedEventHandler(object sender, SMTFeederReturnConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederReturnConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederReturnConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTransferInfoCompletedEventHandler(object sender, LoadTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeederAreaCompletedEventHandler(object sender, AddSMTFeederAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeederAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeederAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSMTFeederAreaCompletedEventHandler(object sender, UpdateSMTFeederAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMTFeederAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMTFeederAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelSMTFeederAreaCompletedEventHandler(object sender, DelSMTFeederAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSMTFeederAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSMTFeederAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederBinInfoCompletedEventHandler(object sender, LoadSMTFeederBinInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederBinInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederBinInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeederBinCompletedEventHandler(object sender, AddSMTFeederBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeederBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeederBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSMTFeederBinCompletedEventHandler(object sender, UpdateSMTFeederBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMTFeederBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMTFeederBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelSMTFeederBinCompletedEventHandler(object sender, DelSMTFeederBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSMTFeederBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSMTFeederBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederEquipmentTypeCompletedEventHandler(object sender, LoadSMTFeederEquipmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederEquipmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederEquipmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSMTFeederEquipmentTypeCompletedEventHandler(object sender, UpdateSMTFeederEquipmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMTFeederEquipmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMTFeederEquipmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckSmtFeederMaterialSerial_DeltaCompletedEventHandler(object sender, CheckSmtFeederMaterialSerial_DeltaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSmtFeederMaterialSerial_DeltaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSmtFeederMaterialSerial_DeltaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckCombinepickupnoAccountStatusCompletedEventHandler(object sender, CheckCombinepickupnoAccountStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCombinepickupnoAccountStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCombinepickupnoAccountStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtSuperMarketMtlCompletedEventHandler(object sender, LoadSmtSuperMarketMtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtSuperMarketMtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtSuperMarketMtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederCombineNoCompletedEventHandler(object sender, LoadSMTFeederCombineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederCombineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederCombineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeederCombinePickupNoCompletedEventHandler(object sender, AddSMTFeederCombinePickupNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeederCombinePickupNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeederCombinePickupNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSMTFeederCombinePickupNoCompletedEventHandler(object sender, UpdateSMTFeederCombinePickupNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMTFeederCombinePickupNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMTFeederCombinePickupNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelSMTFeederCombinePickupNoCompletedEventHandler(object sender, DelSMTFeederCombinePickupNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSMTFeederCombinePickupNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSMTFeederCombinePickupNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkSMTFeedePickupDetailCompletedEventHandler(object sender, ChkSMTFeedePickupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkSMTFeedePickupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkSMTFeedePickupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkSMTFeederTransferCompletedEventHandler(object sender, ChkSMTFeederTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkSMTFeederTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkSMTFeederTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelSMTFeederCombineNoSpecialCompletedEventHandler(object sender, DelSMTFeederCombineNoSpecialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSMTFeederCombineNoSpecialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSMTFeederCombineNoSpecialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFeederTransferQueryCompletedEventHandler(object sender, LoadFeederTransferQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFeederTransferQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFeederTransferQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFeederTrsErrorMsgCompletedEventHandler(object sender, DelFeederTrsErrorMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFeederTrsErrorMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFeederTrsErrorMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeedReturnDetailCompletedEventHandler(object sender, LoadSMTFeedReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeedReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeedReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSMTFeederBinCompletedEventHandler(object sender, GetSMTFeederBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTFeederBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTFeederBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSMTFeederReturnBinCompletedEventHandler(object sender, GetSMTFeederReturnBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTFeederReturnBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTFeederReturnBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSMTFeederReturnBin2CompletedEventHandler(object sender, GetSMTFeederReturnBin2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTFeederReturnBin2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTFeederReturnBin2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteSmtFeederReturnmDetailCompletedEventHandler(object sender, DeleteSmtFeederReturnmDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSmtFeederReturnmDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSmtFeederReturnmDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeederReturnInfoCompletedEventHandler(object sender, AddSMTFeederReturnInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeederReturnInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeederReturnInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeedBinRequestCompletedEventHandler(object sender, AddSMTFeedBinRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeedBinRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeedBinRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeedBinRequestHistoryCompletedEventHandler(object sender, AddSMTFeedBinRequestHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeedBinRequestHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeedBinRequestHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSMTFeederAreaUseInfoCompletedEventHandler(object sender, AddSMTFeederAreaUseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSMTFeederAreaUseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSMTFeederAreaUseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteSMTFeederAreaUseInfoCompletedEventHandler(object sender, DeleteSMTFeederAreaUseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSMTFeederAreaUseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSMTFeederAreaUseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteSMTFeedBinRequestCompletedEventHandler(object sender, DeleteSMTFeedBinRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSMTFeedBinRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSMTFeedBinRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ADDSMTFeederMFUDetailCompletedEventHandler(object sender, ADDSMTFeederMFUDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ADDSMTFeederMFUDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ADDSMTFeederMFUDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederMFUDetailCompletedEventHandler(object sender, LoadSMTFeederMFUDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederMFUDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederMFUDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederReturnAcountDetailCompletedEventHandler(object sender, LoadSMTFeederReturnAcountDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederReturnAcountDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederReturnAcountDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederReturnDetailCompletedEventHandler(object sender, LoadSMTFeederReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederReturnCompleteCompletedEventHandler(object sender, SMTFeederReturnCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederReturnCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederReturnCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederReturnToMESCompletedEventHandler(object sender, SMTFeederReturnToMESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederReturnToMESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederReturnToMESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TESTInfoCompletedEventHandler(object sender, TESTInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TESTInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TESTInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSuperMarkMtlCompletedEventHandler(object sender, LoadSuperMarkMtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSuperMarkMtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSuperMarkMtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertSmtsupermarketMtlCompletedEventHandler(object sender, InsertSmtsupermarketMtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSmtsupermarketMtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSmtsupermarketMtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSmtsupermarketMtlCompletedEventHandler(object sender, UpdateSmtsupermarketMtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSmtsupermarketMtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSmtsupermarketMtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteSmtsupermarketMtlCompletedEventHandler(object sender, DeleteSmtsupermarketMtlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSmtsupermarketMtlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSmtsupermarketMtlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SmtFeederSensorStatus_New2CompletedEventHandler(object sender, SmtFeederSensorStatus_New2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmtFeederSensorStatus_New2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmtFeederSensorStatus_New2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SmtFeederSensorStatus_NewCompletedEventHandler(object sender, SmtFeederSensorStatus_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmtFeederSensorStatus_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmtFeederSensorStatus_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SmtFeederSensorStatusCompletedEventHandler(object sender, SmtFeederSensorStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmtFeederSensorStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmtFeederSensorStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SmtReturnLossAlarmLogCompletedEventHandler(object sender, SmtReturnLossAlarmLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmtReturnLossAlarmLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmtReturnLossAlarmLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertSmtFeederPickupPrintCompletedEventHandler(object sender, InsertSmtFeederPickupPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSmtFeederPickupPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSmtFeederPickupPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederBoard_NewCompletedEventHandler(object sender, LoadSmtFeederBoard_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederBoard_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederBoard_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederBoardCompletedEventHandler(object sender, LoadSmtFeederBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void FindCombinePickupNoByMoNoCompletedEventHandler(object sender, FindCombinePickupNoByMoNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCombinePickupNoByMoNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCombinePickupNoByMoNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederPalletStatusCompletedEventHandler(object sender, LoadSmtFeederPalletStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederPalletStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederPalletStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtExcessStatusCompletedEventHandler(object sender, LoadSmtExcessStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtExcessStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtExcessStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederOverdueBinTableCompletedEventHandler(object sender, LoadSmtFeederOverdueBinTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederOverdueBinTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederOverdueBinTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederSensorWeekBinTableCompletedEventHandler(object sender, LoadSmtFeederSensorWeekBinTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederSensorWeekBinTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederSensorWeekBinTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederSensorWeekErroeTableCompletedEventHandler(object sender, LoadSmtFeederSensorWeekErroeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederSensorWeekErroeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederSensorWeekErroeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederBinDetailCompletedEventHandler(object sender, LoadSmtFeederBinDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederBinDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederBinDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederOverdueErroeTableCompletedEventHandler(object sender, LoadSmtFeederOverdueErroeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederOverdueErroeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederOverdueErroeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederSensorErroeTableCompletedEventHandler(object sender, LoadSmtFeederSensorErroeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederSensorErroeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederSensorErroeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederSensorBinTableCompletedEventHandler(object sender, LoadSmtFeederSensorBinTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederSensorBinTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederSensorBinTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederAccountStatusCompletedEventHandler(object sender, LoadSmtFeederAccountStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederAccountStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederAccountStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederMoStatusCompletedEventHandler(object sender, LoadSmtFeederMoStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederMoStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederMoStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederPickupPrintCompletedEventHandler(object sender, LoadSmtFeederPickupPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederPickupPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederPickupPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateSmtExcessDetailCompletedEventHandler(object sender, UpdateSmtExcessDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSmtExcessDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSmtExcessDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteSmtExcessDetailCompletedEventHandler(object sender, DeleteSmtExcessDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSmtExcessDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSmtExcessDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertSmtExcessDetailCompletedEventHandler(object sender, InsertSmtExcessDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSmtExcessDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSmtExcessDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void FindSmtExcesssMonoCompletedEventHandler(object sender, FindSmtExcesssMonoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSmtExcesssMonoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSmtExcesssMonoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckPartSupermarkAccountCompletedEventHandler(object sender, CheckPartSupermarkAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPartSupermarkAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPartSupermarkAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtExcesssDetailByExcessnoCompletedEventHandler(object sender, LoadSmtExcesssDetailByExcessnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtExcesssDetailByExcessnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtExcesssDetailByExcessnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSmtFeederAreaUseListCompletedEventHandler(object sender, LoadSmtFeederAreaUseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSmtFeederAreaUseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSmtFeederAreaUseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeReworkChangeSerialCompletedEventHandler(object sender, ExeReworkChangeSerialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeReworkChangeSerialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeReworkChangeSerialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ReloadMaterialCompletedEventHandler(object sender, Exe_ReloadMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ReloadMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ReloadMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPDLineJoinSMDAreaBasisCompletedEventHandler(object sender, LoadPDLineJoinSMDAreaBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPDLineJoinSMDAreaBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPDLineJoinSMDAreaBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ChangeFeederCompletedEventHandler(object sender, Exe_ChangeFeederCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ChangeFeederCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ChangeFeederCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LoadMaterialCompletedEventHandler(object sender, Exe_LoadMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LoadMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LoadMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LoadMaterial_newCompletedEventHandler(object sender, Exe_LoadMaterial_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LoadMaterial_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LoadMaterial_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LoadMaterial_newLogicCompletedEventHandler(object sender, Exe_LoadMaterial_newLogicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LoadMaterial_newLogicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LoadMaterial_newLogicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFUCompletedEventHandler(object sender, LoadMFUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCounterStateCompletedEventHandler(object sender, LoadWIPCounterStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCounterStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCounterStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCounterStateJoinMOBasisCompletedEventHandler(object sender, LoadWIPCounterStateJoinMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCounterStateJoinMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCounterStateJoinMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCounterLogJoinMOBasisCompletedEventHandler(object sender, LoadWIPCounterLogJoinMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCounterLogJoinMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCounterLogJoinMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventHandler(object sender, LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCounterStateAndLogJoinMOBasis_HMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCounterState_ActiveCompletedEventHandler(object sender, LoadWIPCounterState_ActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCounterState_ActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCounterState_ActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotOnMOLineDispatch_EQPCompletedEventHandler(object sender, LoadLotOnMOLineDispatch_EQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotOnMOLineDispatch_EQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotOnMOLineDispatch_EQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFinishQtyCompletedEventHandler(object sender, GetFinishQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotState_PDLineNoCompletedEventHandler(object sender, EditLotState_PDLineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotState_PDLineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotState_PDLineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_MaintainAction_AccumulateCompletedEventHandler(object sender, Exe_MaintainAction_AccumulateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_MaintainAction_AccumulateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_MaintainAction_AccumulateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Chk_MaintainAction_AccumulateCompletedEventHandler(object sender, Chk_MaintainAction_AccumulateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Chk_MaintainAction_AccumulateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Chk_MaintainAction_AccumulateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWeighingDetailCompletedEventHandler(object sender, AddWeighingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWeighingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWeighingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWeighingDetailCompletedEventHandler(object sender, UpdWeighingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWeighingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWeighingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWeighingDetail_OthersCompletedEventHandler(object sender, UpdWeighingDetail_OthersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWeighingDetail_OthersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWeighingDetail_OthersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWeighingPrintLabel_dtMessageCompletedEventHandler(object sender, AddWeighingPrintLabel_dtMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWeighingPrintLabel_dtMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWeighingPrintLabel_dtMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWeighingPrintLabelCompletedEventHandler(object sender, AddWeighingPrintLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWeighingPrintLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWeighingPrintLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWeighingPrintLabel_dtMessageCompletedEventHandler(object sender, UpdWeighingPrintLabel_dtMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWeighingPrintLabel_dtMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWeighingPrintLabel_dtMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWeighingPrintLabelCompletedEventHandler(object sender, UpdWeighingPrintLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWeighingPrintLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWeighingPrintLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWeighingDetailCompletedEventHandler(object sender, LoadWeighingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWeighingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWeighingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckAssyDEJCompletedEventHandler(object sender, CheckAssyDEJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAssyDEJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAssyDEJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TMOCheckDEJCompletedEventHandler(object sender, TMOCheckDEJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TMOCheckDEJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TMOCheckDEJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCUS_MOShipConstraintCompletedEventHandler(object sender, LoadCUS_MOShipConstraintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCUS_MOShipConstraintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCUS_MOShipConstraintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPacking_PreCCDEquipmentCompletedEventHandler(object sender, LoadPacking_PreCCDEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPacking_PreCCDEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPacking_PreCCDEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ChangeFeeder_WJCompletedEventHandler(object sender, Exe_ChangeFeeder_WJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ChangeFeeder_WJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ChangeFeeder_WJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ReloadMaterial_WJCompletedEventHandler(object sender, Exe_ReloadMaterial_WJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ReloadMaterial_WJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ReloadMaterial_WJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdFeederMFU_WJCompletedEventHandler(object sender, UpdFeederMFU_WJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdFeederMFU_WJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdFeederMFU_WJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOOISpec_WJCompletedEventHandler(object sender, LoadMOOISpec_WJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOOISpec_WJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOOISpec_WJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOCombine_MONoCompletedEventHandler(object sender, LoadMOCombine_MONoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOCombine_MONoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOCombine_MONoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEQPLoss_WJCompletedEventHandler(object sender, GetEQPLoss_WJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEQPLoss_WJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEQPLoss_WJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RecordEQPLossLogCompletedEventHandler(object sender, RecordEQPLossLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordEQPLossLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordEQPLossLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWIPMOFittingTotalWeightCompletedEventHandler(object sender, UpdWIPMOFittingTotalWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWIPMOFittingTotalWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWIPMOFittingTotalWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPMOFittingTotalWeightCompletedEventHandler(object sender, LoadWIPMOFittingTotalWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPMOFittingTotalWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPMOFittingTotalWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadIFMOBasisCompletedEventHandler(object sender, LoadIFMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadIFMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadIFMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddIFMOBasisCompletedEventHandler(object sender, AddIFMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIFMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIFMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddIFPackingListBasisCompletedEventHandler(object sender, AddIFPackingListBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIFPackingListBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIFPackingListBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddIFPackingListDetailCompletedEventHandler(object sender, AddIFPackingListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIFPackingListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIFPackingListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadIFPackingListDetailCompletedEventHandler(object sender, LoadIFPackingListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadIFPackingListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadIFPackingListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingCartonJoinPackingBoxDetailCompletedEventHandler(object sender, LoadMOPackingCartonJoinPackingBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingCartonJoinPackingBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingCartonJoinPackingBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMOConfirmContentCompletedEventHandler(object sender, GetMOConfirmContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMOConfirmContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMOConfirmContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOConfirmCompletedEventHandler(object sender, ExeMOConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeBackflushCompletedEventHandler(object sender, ExeBackflushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeBackflushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeBackflushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOConfirm_NoBatchCompletedEventHandler(object sender, ExeMOConfirm_NoBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOConfirm_NoBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOConfirm_NoBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPrepareMaterialTemp_NEWCompletedEventHandler(object sender, LoadPrepareMaterialTemp_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPrepareMaterialTemp_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPrepareMaterialTemp_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdTryRunTypeCheck_D3D4CompletedEventHandler(object sender, UpdTryRunTypeCheck_D3D4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdTryRunTypeCheck_D3D4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdTryRunTypeCheck_D3D4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWeighingDetail_ReprintCompletedEventHandler(object sender, LoadWeighingDetail_ReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWeighingDetail_ReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWeighingDetail_ReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventHandler(object sender, LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWeighingPrintLabel_dtMessage_ReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPacking_PreT2EquipmentCompletedEventHandler(object sender, LoadPacking_PreT2EquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPacking_PreT2EquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPacking_PreT2EquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadBinNoStateCompletedEventHandler(object sender, LoadBinNoStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBinNoStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBinNoStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdBinNoCompletedEventHandler(object sender, UpdBinNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdBinNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdBinNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRoomNoStateCompletedEventHandler(object sender, LoadRoomNoStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRoomNoStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRoomNoStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdRoomNoCompletedEventHandler(object sender, UpdRoomNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdRoomNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdRoomNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateWeight_PackingCompletedEventHandler(object sender, UpdateWeight_PackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWeight_PackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWeight_PackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPStateCompletedEventHandler(object sender, LoadWIPStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPState_SemiCompletedEventHandler(object sender, LoadWIPState_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPState_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPState_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTGBParameterCompletedEventHandler(object sender, LoadSMTGBParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTGBParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTGBParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateGBParameterCompletedEventHandler(object sender, UpdateGBParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGBParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGBParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddGBTestInfoCompletedEventHandler(object sender, AddGBTestInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGBTestInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGBTestInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckFileExistCompletedEventHandler(object sender, CheckFileExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFileExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFileExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMaterialSerial_Delta_byMFUCompletedEventHandler(object sender, LoadMaterialSerial_Delta_byMFUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMaterialSerial_Delta_byMFUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMaterialSerial_Delta_byMFUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFeederMaterialNo_MappingCompletedEventHandler(object sender, LoadFeederMaterialNo_MappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFeederMaterialNo_MappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFeederMaterialNo_MappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederAreaCompletedEventHandler(object sender, LoadSMTFeederAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederUseInfoCompletedEventHandler(object sender, LoadSMTFeederUseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederUseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederUseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFeederAreaJoinFeederTrsCompletedEventHandler(object sender, LoadFeederAreaJoinFeederTrsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFeederAreaJoinFeederTrsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFeederAreaJoinFeederTrsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederMOCombineCompletedEventHandler(object sender, LoadSMTFeederMOCombineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederMOCombineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederMOCombineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederPickupDeatilCompletedEventHandler(object sender, LoadSMTFeederPickupDeatilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederPickupDeatilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederPickupDeatilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederAreaMaterialDetailCompletedEventHandler(object sender, LoadSMTFeederAreaMaterialDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederAreaMaterialDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederAreaMaterialDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederAreaMaterialDetail_NewCompletedEventHandler(object sender, LoadSMTFeederAreaMaterialDetail_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederAreaMaterialDetail_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederAreaMaterialDetail_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederAreaPickingInfoCompletedEventHandler(object sender, LoadSMTFeederAreaPickingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederAreaPickingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederAreaPickingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupCheckCompletedEventHandler(object sender, SMTFeederPickupCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickupDetailCompletedEventHandler(object sender, SMTFeederPickupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederUseCompleteCompletedEventHandler(object sender, SMTFeederUseCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederUseCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederUseCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckCombinePickupNoCompletedEventHandler(object sender, CheckCombinePickupNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCombinePickupNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCombinePickupNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederLEDRequestCompletedEventHandler(object sender, SMTFeederLEDRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederLEDRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederLEDRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederClearInfoCompletedEventHandler(object sender, SMTFeederClearInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederClearInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederClearInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickUpCompleteCompletedEventHandler(object sender, SMTFeederPickUpCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickUpCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickUpCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SMTFeederPickUpCancelCompletedEventHandler(object sender, SMTFeederPickUpCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTFeederPickUpCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTFeederPickUpCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTFeederPickupDetailCompletedEventHandler(object sender, LoadSMTFeederPickupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTFeederPickupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTFeederPickupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingSMLogCompletedEventHandler(object sender, LoadMOPackingSMLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingSMLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingSMLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingBasisCompletedEventHandler(object sender, LoadMOPackingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingPalletCompletedEventHandler(object sender, LoadMOPackingPalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingPalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingPalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingCartonCompletedEventHandler(object sender, LoadMOPackingCartonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingCartonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingCartonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingBoxCompletedEventHandler(object sender, LoadMOPackingBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingBoxDetailCompletedEventHandler(object sender, LoadMOPackingBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPProductNoCompletedEventHandler(object sender, LoadWIPProductNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPProductNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPProductNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GenMOPackingBasisCompletedEventHandler(object sender, GenMOPackingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenMOPackingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenMOPackingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPackingCompletedEventHandler(object sender, ExeMOPackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPackingLabelDataCreateCompletedEventHandler(object sender, ExeMOPackingLabelDataCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPackingLabelDataCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPackingLabelDataCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExePackingSplitCompletedEventHandler(object sender, ExePackingSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExePackingSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExePackingSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExePackingSplit_LotCompletedEventHandler(object sender, ExePackingSplit_LotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExePackingSplit_LotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExePackingSplit_LotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExePackingMergeCompletedEventHandler(object sender, ExePackingMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExePackingMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExePackingMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExePackingMerge_LotCompletedEventHandler(object sender, ExePackingMerge_LotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExePackingMerge_LotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExePackingMerge_LotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPacking_ToINVCompletedEventHandler(object sender, ExeMOPacking_ToINVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPacking_ToINVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPacking_ToINVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelMOPacking_UnPackCompletedEventHandler(object sender, DelMOPacking_UnPackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMOPacking_UnPackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMOPacking_UnPackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOUnpackingCompletedEventHandler(object sender, ExeMOUnpackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOUnpackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOUnpackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeMOPacking_CloseCompletedEventHandler(object sender, ExeMOPacking_CloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeMOPacking_CloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeMOPacking_CloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingBasisJoinMOBasisCompletedEventHandler(object sender, LoadMOPackingBasisJoinMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingBasisJoinMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingBasisJoinMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateWIPSMTMaterialStatusCompletedEventHandler(object sender, UpdateWIPSMTMaterialStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWIPSMTMaterialStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWIPSMTMaterialStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPFQCFormCompletedEventHandler(object sender, LoadWIPFQCFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPFQCFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPFQCFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPFQCFormDetailCompletedEventHandler(object sender, LoadWIPFQCFormDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPFQCFormDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPFQCFormDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPFQCFormCompletedEventHandler(object sender, AddWIPFQCFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPFQCFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPFQCFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsWIPFQCForm {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPFQCFormCompletedEventHandler(object sender, DelWIPFQCFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPFQCFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPFQCFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFQCFormQCItemMapCompletedEventHandler(object sender, LoadFQCFormQCItemMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFQCFormQCItemMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFQCFormQCItemMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPFQCFormCompletedEventHandler(object sender, EditWIPFQCFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPFQCFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPFQCFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPFQCFormStdCompletedEventHandler(object sender, LoadWIPFQCFormStdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPFQCFormStdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPFQCFormStdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPFQCFormStdDetailCompletedEventHandler(object sender, LoadWIPFQCFormStdDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPFQCFormStdDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPFQCFormStdDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPFQCFormStdCompletedEventHandler(object sender, AddWIPFQCFormStdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPFQCFormStdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPFQCFormStdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsWIPFQCFormStd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPFQCFormStdCompletedEventHandler(object sender, DelWIPFQCFormStdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPFQCFormStdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPFQCFormStdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFQCFormStdQCItemMapCompletedEventHandler(object sender, LoadFQCFormStdQCItemMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFQCFormStdQCItemMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFQCFormStdQCItemMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOPackingPrintLabelCompletedEventHandler(object sender, LoadMOPackingPrintLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOPackingPrintLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOPackingPrintLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdMOPackingPrintLogCompletedEventHandler(object sender, UpdMOPackingPrintLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdMOPackingPrintLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdMOPackingPrintLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOBurningLogCompletedEventHandler(object sender, LoadMOBurningLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOBurningLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOBurningLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_PackingListBasisCompletedEventHandler(object sender, LoadCont_PackingListBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_PackingListBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_PackingListBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadIF_INVWIPInventory_Semi2CompletedEventHandler(object sender, LoadIF_INVWIPInventory_Semi2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadIF_INVWIPInventory_Semi2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadIF_INVWIPInventory_Semi2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadIF_INVWIPInventory_SemiCompletedEventHandler(object sender, LoadIF_INVWIPInventory_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadIF_INVWIPInventory_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadIF_INVWIPInventory_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeINVIn_Gen_ERPRedoCompletedEventHandler(object sender, ExeINVIn_Gen_ERPRedoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeINVIn_Gen_ERPRedoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeINVIn_Gen_ERPRedoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeINVIn_SubFactory_ResultCompletedEventHandler(object sender, ExeINVIn_SubFactory_ResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeINVIn_SubFactory_ResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeINVIn_SubFactory_ResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTMaterialReturnCompletedEventHandler(object sender, LoadSMTMaterialReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTMaterialReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTMaterialReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPickupDetailJoinListJoinBasisCompletedEventHandler(object sender, LoadPickupDetailJoinListJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPickupDetailJoinListJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPickupDetailJoinListJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPickupDetailJoinListJoinBasis_newCompletedEventHandler(object sender, LoadPickupDetailJoinListJoinBasis_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPickupDetailJoinListJoinBasis_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPickupDetailJoinListJoinBasis_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturnDataCompletedEventHandler(object sender, Exe_SMTMaterialReturnDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturnDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturnDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_Auto1CompletedEventHandler(object sender, Exe_SMTMaterialReturn_Auto1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_Auto1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_Auto1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_AutoCompletedEventHandler(object sender, Exe_SMTMaterialReturn_AutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_AutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_AutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_UpdateCompletedEventHandler(object sender, Exe_SMTMaterialReturn_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturnCompletedEventHandler(object sender, Exe_SMTMaterialReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_New_AutoCompletedEventHandler(object sender, Exe_SMTMaterialReturn_New_AutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_New_AutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_New_AutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SMTMaterialReturn_NewCompletedEventHandler(object sender, Exe_SMTMaterialReturn_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SMTMaterialReturn_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SMTMaterialReturn_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadUnitLog_AssemblyCompletedEventHandler(object sender, LoadUnitLog_AssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUnitLog_AssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUnitLog_AssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPReworkIECompletedEventHandler(object sender, LoadWIPReworkIECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPReworkIECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPReworkIECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSerialNoCheckCompletedEventHandler(object sender, LoadSerialNoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSerialNoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSerialNoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EXESerialNoCheckCompletedEventHandler(object sender, EXESerialNoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXESerialNoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXESerialNoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EXEToMoChangeCompletedEventHandler(object sender, EXEToMoChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXEToMoChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXEToMoChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetReworkQtyCompletedEventHandler(object sender, SetReworkQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetReworkQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetReworkQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkSheetBasisCompletedEventHandler(object sender, LoadReworkSheetBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkSheetBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkSheetBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditReworkSheetBasisCompletedEventHandler(object sender, EditReworkSheetBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditReworkSheetBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditReworkSheetBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddReworkSheetBasisCompletedEventHandler(object sender, AddReworkSheetBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReworkSheetBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReworkSheetBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkMeetingPlaceCompletedEventHandler(object sender, LoadReworkMeetingPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkMeetingPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkMeetingPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReworkSheetBasisCompletedEventHandler(object sender, DelReworkSheetBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReworkSheetBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReworkSheetBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkSheetNoCompletedEventHandler(object sender, LoadReworkSheetNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkSheetNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkSheetNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InitReworkSheetNoCompletedEventHandler(object sender, InitReworkSheetNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitReworkSheetNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitReworkSheetNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkSheetConfereeCompletedEventHandler(object sender, LoadReworkSheetConfereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkSheetConfereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkSheetConfereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdReworkSheetConfereeCompletedEventHandler(object sender, UpdReworkSheetConfereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdReworkSheetConfereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdReworkSheetConfereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReworkSheetConfereeCompletedEventHandler(object sender, DelReworkSheetConfereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReworkSheetConfereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReworkSheetConfereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkDutyCompletedEventHandler(object sender, LoadReworkDutyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdReworkDutyCompletedEventHandler(object sender, UpdReworkDutyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdReworkDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdReworkDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendEmail_ReworkMeetingReordCompletedEventHandler(object sender, SendEmail_ReworkMeetingReordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmail_ReworkMeetingReordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmail_ReworkMeetingReordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkQACompletedEventHandler(object sender, LoadReworkQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkIECompletedEventHandler(object sender, LoadReworkIECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkIECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkIECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MaintainReworkQACompletedEventHandler(object sender, MaintainReworkQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaintainReworkQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaintainReworkQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkPCCompletedEventHandler(object sender, LoadReworkPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MaintainReworkPCCompletedEventHandler(object sender, MaintainReworkPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaintainReworkPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaintainReworkPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLotCurQtyOfProcessCompletedEventHandler(object sender, GetLotCurQtyOfProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotCurQtyOfProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotCurQtyOfProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddReworkIECompletedEventHandler(object sender, AddReworkIECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReworkIECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReworkIECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditReworkIECompletedEventHandler(object sender, EditReworkIECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditReworkIECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditReworkIECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReworkIECompletedEventHandler(object sender, DelReworkIECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReworkIECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReworkIECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkAttachCompletedEventHandler(object sender, LoadReworkAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddReworkAttachCompletedEventHandler(object sender, AddReworkAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReworkAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReworkAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReworkAttachCompletedEventHandler(object sender, DelReworkAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReworkAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReworkAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReworkMFGCompletedEventHandler(object sender, LoadReworkMFGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReworkMFGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReworkMFGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MaintainReworkMFGCompletedEventHandler(object sender, MaintainReworkMFGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaintainReworkMFGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaintainReworkMFGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFGLotDataCompletedEventHandler(object sender, LoadMFGLotDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFGLotDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFGLotDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAllNodeNoByProcessCompletedEventHandler(object sender, GetAllNodeNoByProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNodeNoByProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNodeNoByProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckReworkSNExcelCompletedEventHandler(object sender, CheckReworkSNExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckReworkSNExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckReworkSNExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsExcel {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelMaterialFeederCompletedEventHandler(object sender, DelMaterialFeederCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMaterialFeederCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMaterialFeederCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFeederStatusCompletedEventHandler(object sender, LoadFeederStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFeederStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFeederStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddFeederStatusCompletedEventHandler(object sender, AddFeederStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFeederStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFeederStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetFeederStatusCompletedEventHandler(object sender, SetFeederStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFeederStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFeederStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdFeederMFUCompletedEventHandler(object sender, UpdFeederMFUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdFeederMFUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdFeederMFUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddFeederMFUCompletedEventHandler(object sender, AddFeederMFUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFeederMFUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFeederMFUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFeederMFUCompletedEventHandler(object sender, DelFeederMFUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFeederMFUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFeederMFUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetMFUStauts_Feeder_QCFlagCompletedEventHandler(object sender, SetMFUStauts_Feeder_QCFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMFUStauts_Feeder_QCFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMFUStauts_Feeder_QCFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFUStatusCompletedEventHandler(object sender, LoadMFUStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFUStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFUStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAreaCompletedEventHandler(object sender, LoadAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFUNoCompletedEventHandler(object sender, LoadMFUNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFUNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFUNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertToSMTMtlMFUStatusCompletedEventHandler(object sender, InsertToSMTMtlMFUStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertToSMTMtlMFUStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertToSMTMtlMFUStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFUStatusJoinMOCompletedEventHandler(object sender, LoadMFUStatusJoinMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFUStatusJoinMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFUStatusJoinMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMFUStatusJoinFeederCompletedEventHandler(object sender, LoadMFUStatusJoinFeederCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMFUStatusJoinFeederCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMFUStatusJoinFeederCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOCombineCompletedEventHandler(object sender, LoadMOCombineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOCombineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOCombineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOOISpecCompletedEventHandler(object sender, LoadMOOISpecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOOISpecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOOISpecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddMFUEQPCompletedEventHandler(object sender, AddMFUEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMFUEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMFUEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelMFUEQPCompletedEventHandler(object sender, DelMFUEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMFUEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMFUEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadEQPMFUStatusCompletedEventHandler(object sender, LoadEQPMFUStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadEQPMFUStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadEQPMFUStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddUnitLog_ErrorCompletedEventHandler(object sender, AddUnitLog_ErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitLog_ErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitLog_ErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQABasisCompletedEventHandler(object sender, LoadVQABasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQABasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQABasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQADetailCompletedEventHandler(object sender, LoadVQADetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQADetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQADetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQAMoDetailCompletedEventHandler(object sender, LoadVQAMoDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQAMoDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQAMoDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVQANoCompletedEventHandler(object sender, GetVQANoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVQANoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVQANoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EXE_VQABasisCompletedEventHandler(object sender, EXE_VQABasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXE_VQABasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXE_VQABasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetVQAOPCompletedEventHandler(object sender, SetVQAOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVQAOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVQAOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQAReleaseCompletedEventHandler(object sender, LoadVQAReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQAReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQAReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQAVDDataCompletedEventHandler(object sender, LoadVQAVDDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQAVDDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQAVDDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadVQAAffectedMoCompletedEventHandler(object sender, LoadVQAAffectedMoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVQAAffectedMoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVQAAffectedMoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ShowVQAMoCheckCompletedEventHandler(object sender, ShowVQAMoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowVQAMoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowVQAMoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetVQAMTLReleaseCompletedEventHandler(object sender, SetVQAMTLReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVQAMTLReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVQAMTLReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetVQAMoReleaseCompletedEventHandler(object sender, SetVQAMoReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVQAMoReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVQAMoReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMQABasisJoinDetailCompletedEventHandler(object sender, LoadMQABasisJoinDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMQABasisJoinDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMQABasisJoinDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMQADetailCompletedEventHandler(object sender, LoadMQADetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMQADetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMQADetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMQAERFNoCompletedEventHandler(object sender, GetMQAERFNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMQAERFNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMQAERFNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_MQAERFCreateCompletedEventHandler(object sender, Exe_MQAERFCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_MQAERFCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_MQAERFCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMQAInfectedMOCompletedEventHandler(object sender, GetMQAInfectedMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMQAInfectedMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMQAInfectedMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdMQAHoldStartOPCompletedEventHandler(object sender, UpdMQAHoldStartOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdMQAHoldStartOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdMQAHoldStartOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMQAReleaseCompletedEventHandler(object sender, LoadMQAReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMQAReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMQAReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMQAAffectedMoCompletedEventHandler(object sender, LoadMQAAffectedMoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMQAAffectedMoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMQAAffectedMoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetMQAReleaseCompletedEventHandler(object sender, SetMQAReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMQAReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMQAReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetMOForbidOPNodeCompletedEventHandler(object sender, SetMOForbidOPNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMOForbidOPNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMOForbidOPNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetOEMONoCompletedEventHandler(object sender, GetOEMONoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOEMONoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOEMONoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddMOPDLineStateCompletedEventHandler(object sender, AddMOPDLineStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMOPDLineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMOPDLineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTProductionState_NewCompletedEventHandler(object sender, LoadSMTProductionState_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTProductionState_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTProductionState_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSMTProductionState_New1CompletedEventHandler(object sender, LoadSMTProductionState_New1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSMTProductionState_New1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSMTProductionState_New1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSolderEdateCompletedEventHandler(object sender, GetSolderEdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolderEdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolderEdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSolderBasisCompletedEventHandler(object sender, LoadSolderBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSolderBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSolderBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddMoNoSolder_CombineCompletedEventHandler(object sender, AddMoNoSolder_CombineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMoNoSolder_CombineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMoNoSolder_CombineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOEMOLineDispatchCompletedEventHandler(object sender, LoadOEMOLineDispatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOEMOLineDispatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOEMOLineDispatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOEMOLineDispatchInfoCompletedEventHandler(object sender, LoadOEMOLineDispatchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOEMOLineDispatchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOEMOLineDispatchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPMOPDLineStartInfoCompletedEventHandler(object sender, LoadWIPMOPDLineStartInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPMOPDLineStartInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPMOPDLineStartInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadProductionState_NewCompletedEventHandler(object sender, LoadProductionState_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProductionState_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProductionState_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadUserBasisJoinLoginStateCompletedEventHandler(object sender, LoadUserBasisJoinLoginStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUserBasisJoinLoginStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUserBasisJoinLoginStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOperatorLoginStateCompletedEventHandler(object sender, LoadOperatorLoginStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOperatorLoginStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOperatorLoginStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPCDefaultDataCompletedEventHandler(object sender, GetPCDefaultDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPCDefaultDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPCDefaultDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdOperatorLoginCompletedEventHandler(object sender, UpdOperatorLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdOperatorLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdOperatorLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdOperatorLogoutCompletedEventHandler(object sender, UpdOperatorLogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdOperatorLogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdOperatorLogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetShiftCompletedEventHandler(object sender, GetShiftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOPAreaJoinAreaEQPMapCompletedEventHandler(object sender, LoadOPAreaJoinAreaEQPMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOPAreaJoinAreaEQPMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOPAreaJoinAreaEQPMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadUserBasisJoinLoginLogCompletedEventHandler(object sender, LoadUserBasisJoinLoginLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUserBasisJoinLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUserBasisJoinLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOperatorLoginExceptionCompletedEventHandler(object sender, LoadOperatorLoginExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOperatorLoginExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOperatorLoginExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddOperatorLoginExceptionCompletedEventHandler(object sender, AddOperatorLoginExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOperatorLoginExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOperatorLoginExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetDIPProductionStateCompletedEventHandler(object sender, GetDIPProductionStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDIPProductionStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDIPProductionStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeWOStartDIPProductionCompletedEventHandler(object sender, ExeWOStartDIPProductionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeWOStartDIPProductionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeWOStartDIPProductionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadProductionLine_LossCodeCompletedEventHandler(object sender, LoadProductionLine_LossCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProductionLine_LossCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProductionLine_LossCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOPAreaEquipmentCompletedEventHandler(object sender, LoadOPAreaEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOPAreaEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOPAreaEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadProductionLineStatusCompletedEventHandler(object sender, LoadProductionLineStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProductionLineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProductionLineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditProductionLineStatusCompletedEventHandler(object sender, EditProductionLineStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProductionLineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProductionLineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EXE_HoldProductionLineCompletedEventHandler(object sender, EXE_HoldProductionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXE_HoldProductionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXE_HoldProductionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EXE_ReleaseProductionLineCompletedEventHandler(object sender, EXE_ReleaseProductionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXE_ReleaseProductionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXE_ReleaseProductionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPrepareMODataCompletedEventHandler(object sender, LoadPrepareMODataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPrepareMODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPrepareMODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOCombineJoinPickupCompletedEventHandler(object sender, LoadMOCombineJoinPickupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOCombineJoinPickupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOCombineJoinPickupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MOPrepareCheckInCompletedEventHandler(object sender, MOPrepareCheckInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MOPrepareCheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MOPrepareCheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPrepareMaterialTempCompletedEventHandler(object sender, LoadPrepareMaterialTempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPrepareMaterialTempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPrepareMaterialTempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MOPrepareCheckOutCompletedEventHandler(object sender, MOPrepareCheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MOPrepareCheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MOPrepareCheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadProductionState_PrepareCompletedEventHandler(object sender, LoadProductionState_PrepareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProductionState_PrepareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProductionState_PrepareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOPMemoCompletedEventHandler(object sender, LoadOPMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOPMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOPMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddOPMemoCompletedEventHandler(object sender, AddOPMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOPMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOPMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditOPMemoCompletedEventHandler(object sender, EditOPMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOPMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOPMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelOPMemoCompletedEventHandler(object sender, DelOPMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelOPMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelOPMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditPanelLinkCompletedEventHandler(object sender, EditPanelLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPanelLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPanelLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOProductProcessDefineCompletedEventHandler(object sender, LoadMOProductProcessDefineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOProductProcessDefineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOProductProcessDefineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkMOProcessCompletedEventHandler(object sender, ChkMOProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkMOProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkMOProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingSerialQueryCompletedEventHandler(object sender, LoadPackingSerialQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingSerialQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingSerialQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFCreateInfoCompletedEventHandler(object sender, LoadERFCreateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFCreateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFCreateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadExceedTimeDefaultHoldInfoCompletedEventHandler(object sender, LoadExceedTimeDefaultHoldInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadExceedTimeDefaultHoldInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadExceedTimeDefaultHoldInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFCreateDataCompletedEventHandler(object sender, LoadERFCreateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFCreateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFCreateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRcvNoticeDataCompletedEventHandler(object sender, LoadRcvNoticeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRcvNoticeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRcvNoticeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadShippingListDataCompletedEventHandler(object sender, LoadShippingListDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadShippingListDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadShippingListDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetNewPackingListNoCompletedEventHandler(object sender, GetNewPackingListNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewPackingListNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewPackingListNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetNewShippingListNoCompletedEventHandler(object sender, GetNewShippingListNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewShippingListNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewShippingListNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadDramaBasisCompletedEventHandler(object sender, LoadDramaBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDramaBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDramaBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetRuncardActionCompletedEventHandler(object sender, GetRuncardActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuncardActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuncardActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckInwithEquipmentCompletedEventHandler(object sender, CheckInwithEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInwithEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInwithEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckInwithnoEquipmentCompletedEventHandler(object sender, CheckInwithnoEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInwithnoEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInwithnoEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckOutCompletedEventHandler(object sender, CheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadDTAreaCompletedEventHandler(object sender, LoadDTAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDTAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDTAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdDTAreaCompletedEventHandler(object sender, UpdDTAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdDTAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdDTAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_COCassetteCompletedEventHandler(object sender, Exe_COCassetteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_COCassetteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_COCassetteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPLimitedTimeControlCompletedEventHandler(object sender, LoadWIPLimitedTimeControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPLimitedTimeControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPLimitedTimeControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPLagTimeControlByLotsCompletedEventHandler(object sender, LoadWIPLagTimeControlByLotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPLagTimeControlByLotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPLagTimeControlByLotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddFutureOSCompletedEventHandler(object sender, AddFutureOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFutureOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFutureOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditFutureOSCompletedEventHandler(object sender, EditFutureOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFutureOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFutureOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFutureOSCompletedEventHandler(object sender, DelFutureOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFutureOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFutureOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFutureOSCompletedEventHandler(object sender, LoadFutureOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFutureOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFutureOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPOutSourceCompletedEventHandler(object sender, AddWIPOutSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPOutSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPOutSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPOutSourceCompletedEventHandler(object sender, EditWIPOutSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPOutSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPOutSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPOutSourceCompletedEventHandler(object sender, DelWIPOutSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPOutSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPOutSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPAlreadyOSBasisCompletedEventHandler(object sender, LoadWIPAlreadyOSBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPAlreadyOSBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPAlreadyOSBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPOSBasisCompletedEventHandler(object sender, LoadWIPOSBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPOSBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPOSBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPOSDetailCompletedEventHandler(object sender, LoadWIPOSDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPOSDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPOSDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotStateInOSDetailCompletedEventHandler(object sender, LoadLotStateInOSDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotStateInOSDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotStateInOSDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentStateInOSDetailCompletedEventHandler(object sender, LoadComponentStateInOSDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentStateInOSDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentStateInOSDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetNewOSNoCompletedEventHandler(object sender, GetNewOSNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewOSNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewOSNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotStateForCreateOSCompletedEventHandler(object sender, LoadLotStateForCreateOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotStateForCreateOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotStateForCreateOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckLotStateForOSCompletedEventHandler(object sender, CheckLotStateForOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLotStateForOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLotStateForOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeOSConfirmCompletedEventHandler(object sender, ExeOSConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeOSConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeOSConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeOSReturnCompletedEventHandler(object sender, ExeOSReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeOSReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeOSReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOSBasisByLotDetailCompletedEventHandler(object sender, LoadOSBasisByLotDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOSBasisByLotDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOSBasisByLotDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckLotIsOSbutNotReturnCompletedEventHandler(object sender, CheckLotIsOSbutNotReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLotIsOSbutNotReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLotIsOSbutNotReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetUnReturnLotsInSameOSWithRefLotCompletedEventHandler(object sender, GetUnReturnLotsInSameOSWithRefLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnReturnLotsInSameOSWithRefLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnReturnLotsInSameOSWithRefLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSumOfResourceCompletedEventHandler(object sender, LoadSumOfResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSumOfResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSumOfResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSumOfResource_ValidCompletedEventHandler(object sender, LoadSumOfResource_ValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSumOfResource_ValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSumOfResource_ValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSumOfResource_Valid_ByOPCompletedEventHandler(object sender, LoadSumOfResource_Valid_ByOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSumOfResource_Valid_ByOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSumOfResource_Valid_ByOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddSumOfResourceCompletedEventHandler(object sender, AddSumOfResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSumOfResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSumOfResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSumOfResource_Valid_ByMOCompletedEventHandler(object sender, LoadSumOfResource_Valid_ByMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSumOfResource_Valid_ByMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSumOfResource_Valid_ByMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSum_ResourceCompletedEventHandler(object sender, LoadSum_ResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSum_ResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSum_ResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPCarrierStateDetailCompletedEventHandler(object sender, LoadWIPCarrierStateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPCarrierStateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPCarrierStateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetRelatedLotStateOfCarrierCompletedEventHandler(object sender, GetRelatedLotStateOfCarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedLotStateOfCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedLotStateOfCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLotQuantityOnCarrierCompletedEventHandler(object sender, GetLotQuantityOnCarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotQuantityOnCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotQuantityOnCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdWIPInv_Raw_ScrapCompletedEventHandler(object sender, UpdWIPInv_Raw_ScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdWIPInv_Raw_ScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdWIPInv_Raw_ScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPlanFinishTime_byLotCompletedEventHandler(object sender, LoadPlanFinishTime_byLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPlanFinishTime_byLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPlanFinishTime_byLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotTempEquipmentCompletedEventHandler(object sender, LoadLotTempEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotTempEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotTempEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotTempEquipmentLoadPortCompletedEventHandler(object sender, LoadLotTempEquipmentLoadPortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotTempEquipmentLoadPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotTempEquipmentLoadPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadEQPConsumeStatusCompletedEventHandler(object sender, LoadEQPConsumeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadEQPConsumeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadEQPConsumeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddEQPConsumeStatusCompletedEventHandler(object sender, AddEQPConsumeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEQPConsumeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEQPConsumeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditEQPConsumeStatusCompletedEventHandler(object sender, EditEQPConsumeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditEQPConsumeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditEQPConsumeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelEQPConsumeStatusCompletedEventHandler(object sender, DelEQPConsumeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelEQPConsumeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelEQPConsumeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddEQPConsumeLogCompletedEventHandler(object sender, AddEQPConsumeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEQPConsumeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEQPConsumeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadEQPConsumeLogCompletedEventHandler(object sender, LoadEQPConsumeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadEQPConsumeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadEQPConsumeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPEQPQCListLogBasisCompletedEventHandler(object sender, LoadWIPEQPQCListLogBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPEQPQCListLogBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPEQPQCListLogBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPEQPQCListLogDetailCompletedEventHandler(object sender, LoadWIPEQPQCListLogDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPEQPQCListLogDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPEQPQCListLogDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPEQPQCListLogCompletedEventHandler(object sender, AddWIPEQPQCListLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPEQPQCListLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPEQPQCListLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPEQPQCListLogCompletedEventHandler(object sender, EditWIPEQPQCListLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPEQPQCListLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPEQPQCListLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetQCListSerialCompletedEventHandler(object sender, GetQCListSerialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCListSerialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCListSerialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadInvCountStateWithDetailCompletedEventHandler(object sender, LoadInvCountStateWithDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInvCountStateWithDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInvCountStateWithDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadInvCountStateCompletedEventHandler(object sender, LoadInvCountStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInvCountStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInvCountStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountCloseCompletedEventHandler(object sender, ExeInvCountCloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountOpenCompletedEventHandler(object sender, ExeInvCountOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountAdjustCompletedEventHandler(object sender, ExeInvCountAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountAdjust_MTLCompletedEventHandler(object sender, ExeInvCountAdjust_MTLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountAdjust_MTLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountAdjust_MTLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountAdjust_PRDCompletedEventHandler(object sender, ExeInvCountAdjust_PRDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountAdjust_PRDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountAdjust_PRDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeInvCountConfirmCompletedEventHandler(object sender, ExeInvCountConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeInvCountConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeInvCountConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkInvCountAdjustCompletedEventHandler(object sender, ChkInvCountAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkInvCountAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkInvCountAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeTransferFactory_LotCompletedEventHandler(object sender, ExeTransferFactory_LotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeTransferFactory_LotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeTransferFactory_LotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdAddOSCompletedEventHandler(object sender, UpdAddOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdAddOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdAddOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdEditOSCompletedEventHandler(object sender, UpdEditOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdEditOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdEditOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelOSBasisCompletedEventHandler(object sender, DelOSBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelOSBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelOSBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeOS_AbortCompletedEventHandler(object sender, ExeOS_AbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeOS_AbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeOS_AbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeOS_ConfirmCompletedEventHandler(object sender, ExeOS_ConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeOS_ConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeOS_ConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExeOS_ReturnCompletedEventHandler(object sender, ExeOS_ReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExeOS_ReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExeOS_ReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotChoiceEQPCompletedEventHandler(object sender, Exe_LotChoiceEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotChoiceEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotChoiceEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_AmountCloseLotCompletedEventHandler(object sender, Exe_AmountCloseLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_AmountCloseLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_AmountCloseLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetLotStateToExitGroupOPCompletedEventHandler(object sender, SetLotStateToExitGroupOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLotStateToExitGroupOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLotStateToExitGroupOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddCont_Material_AdjustCompletedEventHandler(object sender, AddCont_Material_AdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCont_Material_AdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCont_Material_AdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditCont_Material_AdjustCompletedEventHandler(object sender, EditCont_Material_AdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCont_Material_AdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCont_Material_AdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelCont_Material_AdjustCompletedEventHandler(object sender, DelCont_Material_AdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelCont_Material_AdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelCont_Material_AdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddMaterialFeederCompletedEventHandler(object sender, AddMaterialFeederCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMaterialFeederCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMaterialFeederCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadEQPETHValueCompletedEventHandler(object sender, LoadEQPETHValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadEQPETHValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadEQPETHValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetExpValueCompletedEventHandler(object sender, GetExpValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_CarrierFoupCompletedEventHandler(object sender, Exe_CheckIn_CarrierFoupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_CarrierFoupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_CarrierFoupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_CarrierFoupCompletedEventHandler(object sender, Exe_CheckOut_CarrierFoupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_CarrierFoupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_CarrierFoupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_BatchCompletedEventHandler(object sender, Exe_CheckOut_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CO_EpitaxyCompletedEventHandler(object sender, Exe_CO_EpitaxyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CO_EpitaxyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CO_EpitaxyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_BatchCompletedEventHandler(object sender, Exe_CheckIn_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotState_CarCompletedEventHandler(object sender, LoadLotState_CarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotState_CarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotState_CarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_CarCompletedEventHandler(object sender, Exe_CheckOut_CarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_CarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_CarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_CarRepairCompletedEventHandler(object sender, Exe_CheckOut_CarRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_CarRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_CarRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasisAssemblyCompletedEventHandler(object sender, AddLotBasisAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasisAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasisAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasisAssembly_OtherCompletedEventHandler(object sender, AddLotBasisAssembly_OtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasisAssembly_OtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasisAssembly_OtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetERPInvNoCompletedEventHandler(object sender, GetERPInvNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERPInvNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERPInvNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetERPInvNo_SICCompletedEventHandler(object sender, GetERPInvNo_SICCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERPInvNo_SICCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERPInvNo_SICCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FGDToERPCompletedEventHandler(object sender, Exe_FGDToERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FGDToERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FGDToERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ScrapToERPCompletedEventHandler(object sender, Exe_ScrapToERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ScrapToERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ScrapToERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_WIPToERP_SICCompletedEventHandler(object sender, Exe_WIPToERP_SICCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_WIPToERP_SICCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_WIPToERP_SICCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Cassette_CICompletedEventHandler(object sender, Exe_Cassette_CICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Cassette_CICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Cassette_CICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Cassette_COCompletedEventHandler(object sender, Exe_Cassette_COCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Cassette_COCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Cassette_COCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCassetteJoinLotStateCompletedEventHandler(object sender, LoadCassetteJoinLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCassetteJoinLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCassetteJoinLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRecipeByLotCompletedEventHandler(object sender, LoadRecipeByLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRecipeByLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRecipeByLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCassetteStateCompletedEventHandler(object sender, LoadCassetteStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCassetteStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCassetteStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentState_MOCompletedEventHandler(object sender, LoadComponentState_MOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentState_MOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentState_MOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentJoinLotStateCompletedEventHandler(object sender, LoadComponentJoinLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentJoinLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentJoinLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_MaterialLotComp_JoinLogCompletedEventHandler(object sender, LoadCont_MaterialLotComp_JoinLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_MaterialLotComp_JoinLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_MaterialLotComp_JoinLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_TAN_COCompletedEventHandler(object sender, Exe_TAN_COCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_TAN_COCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_TAN_COCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SemiProductCompletedEventHandler(object sender, Exe_SemiProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SemiProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SemiProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_FirstCompletedEventHandler(object sender, Exe_CheckOut_FirstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_FirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_FirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveFileCompletedEventHandler(object sender, SaveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReRun_SemiCompletedEventHandler(object sender, ReRun_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReRun_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReRun_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReRun_FailBinCompletedEventHandler(object sender, ReRun_FailBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReRun_FailBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReRun_FailBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReRun_ScrapCompletedEventHandler(object sender, ReRun_ScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReRun_ScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReRun_ScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_FailBinJoinLotBasisCompletedEventHandler(object sender, LoadWIP_FailBinJoinLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_FailBinJoinLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_FailBinJoinLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_ScrapJoinLotBasisCompletedEventHandler(object sender, LoadWIP_ScrapJoinLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_ScrapJoinLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_ScrapJoinLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasis_TapeCompletedEventHandler(object sender, AddLotBasis_TapeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasis_TapeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasis_TapeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotBasis_TapeCompletedEventHandler(object sender, DelLotBasis_TapeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotBasis_TapeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotBasis_TapeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReleaseLotBasis_TapeCompletedEventHandler(object sender, ReleaseLotBasis_TapeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseLotBasis_TapeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseLotBasis_TapeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotBasisJoinPIDeatilCompletedEventHandler(object sender, LoadLotBasisJoinPIDeatilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotBasisJoinPIDeatilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotBasisJoinPIDeatilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Tape_CICompletedEventHandler(object sender, Exe_Tape_CICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Tape_CICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Tape_CICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Tape_COCompletedEventHandler(object sender, Exe_Tape_COCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Tape_COCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Tape_COCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Tape_ComponentSplitCompletedEventHandler(object sender, Exe_Tape_ComponentSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Tape_ComponentSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Tape_ComponentSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadDefrostLogCompletedEventHandler(object sender, LoadDefrostLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDefrostLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDefrostLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddDefrostLogCompletedEventHandler(object sender, AddDefrostLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDefrostLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDefrostLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditDefrostLogCompletedEventHandler(object sender, EditDefrostLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDefrostLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDefrostLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelDefrostLogCompletedEventHandler(object sender, DelDefrostLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelDefrostLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelDefrostLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadDefrostEquipmentCompletedEventHandler(object sender, LoadDefrostEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDefrostEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDefrostEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExePIDefrostCompletedEventHandler(object sender, ExePIDefrostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExePIDefrostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExePIDefrostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_TAB_ECNBasisCompletedEventHandler(object sender, Load_TAB_ECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_TAB_ECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_TAB_ECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_TAB_ECNBasisJoinDetailCompletedEventHandler(object sender, Load_TAB_ECNBasisJoinDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_TAB_ECNBasisJoinDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_TAB_ECNBasisJoinDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Del_TAB_ECNBasisCompletedEventHandler(object sender, Del_TAB_ECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Del_TAB_ECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Del_TAB_ECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Add_TAB_ECNBasisWDetailCompletedEventHandler(object sender, Add_TAB_ECNBasisWDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Add_TAB_ECNBasisWDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Add_TAB_ECNBasisWDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Edit_TAB_ECNBasisWDetailCompletedEventHandler(object sender, Edit_TAB_ECNBasisWDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Edit_TAB_ECNBasisWDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Edit_TAB_ECNBasisWDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UPD_TAB_ECNConfirmCompletedEventHandler(object sender, UPD_TAB_ECNConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPD_TAB_ECNConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPD_TAB_ECNConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UPD_TAB_ECNReleaseCompletedEventHandler(object sender, UPD_TAB_ECNReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPD_TAB_ECNReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPD_TAB_ECNReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Del_TAB_ECNLotCompletedEventHandler(object sender, Del_TAB_ECNLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Del_TAB_ECNLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Del_TAB_ECNLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_TAB_LotBasisJoinStateCompletedEventHandler(object sender, Load_TAB_LotBasisJoinStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_TAB_LotBasisJoinStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_TAB_LotBasisJoinStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_TAB_PackingBasisCompletedEventHandler(object sender, Load_TAB_PackingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_TAB_PackingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_TAB_PackingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_TAB_PackingDetailCompletedEventHandler(object sender, Load_TAB_PackingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_TAB_PackingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_TAB_PackingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotsofSamePIIDCompletedEventHandler(object sender, LoadLotsofSamePIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotsofSamePIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotsofSamePIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAccessoryLifeCountCompletedEventHandler(object sender, GetAccessoryLifeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessoryLifeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessoryLifeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasis_UnitCompletedEventHandler(object sender, AddLotBasis_UnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasis_UnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasis_UnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasis_BatchCompletedEventHandler(object sender, AddLotBasis_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasis_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasis_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_AbnormalCollectCompletedEventHandler(object sender, Exe_Unit_AbnormalCollectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_AbnormalCollectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_AbnormalCollectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_COMaterialCompletedEventHandler(object sender, Exe_Unit_COMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_COMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_COMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_BatchCICompletedEventHandler(object sender, Exe_Unit_BatchCICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_BatchCICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_BatchCICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_QCBankCompletedEventHandler(object sender, Exe_Unit_QCBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_QCBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_QCBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_BatchScrapCompletedEventHandler(object sender, Exe_Unit_BatchScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_BatchScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_BatchScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_CIRepairCompletedEventHandler(object sender, Exe_Unit_CIRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_CIRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_CIRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Unit_CORepairCompletedEventHandler(object sender, Exe_Unit_CORepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Unit_CORepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Unit_CORepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InitBoxNoCompletedEventHandler(object sender, InitBoxNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitBoxNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitBoxNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_Unit_Cont_CICompletedEventHandler(object sender, Load_Unit_Cont_CICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_Unit_Cont_CICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_Unit_Cont_CICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_Unit_QCBankRejectLotCompletedEventHandler(object sender, Load_Unit_QCBankRejectLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_Unit_QCBankRejectLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_Unit_QCBankRejectLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_Unit_QCBankCompletedEventHandler(object sender, Load_Unit_QCBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_Unit_QCBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_Unit_QCBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Load_Unit_QCBankDetailCompletedEventHandler(object sender, Load_Unit_QCBankDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Load_Unit_QCBankDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Load_Unit_QCBankDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CloseLotCompletedEventHandler(object sender, CloseLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotQtyAdjustCompletedEventHandler(object sender, Exe_LotQtyAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotQtyAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotQtyAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotQtyAdjust_BinCompletedEventHandler(object sender, Exe_LotQtyAdjust_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotQtyAdjust_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotQtyAdjust_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotQtyAdjust_CompCompletedEventHandler(object sender, Exe_LotQtyAdjust_CompCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotQtyAdjust_CompCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotQtyAdjust_CompCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_QtyAdjustLogCompletedEventHandler(object sender, Exe_ERF_QtyAdjustLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_QtyAdjustLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_QtyAdjustLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERF_AttachFileCompletedEventHandler(object sender, LoadERF_AttachFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERF_AttachFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERF_AttachFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddERF_AttachFileCompletedEventHandler(object sender, AddERF_AttachFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddERF_AttachFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddERF_AttachFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelERF_AttachFileCompletedEventHandler(object sender, DelERF_AttachFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelERF_AttachFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelERF_AttachFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetERF_AttachFileCompletedEventHandler(object sender, GetERF_AttachFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERF_AttachFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERF_AttachFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_Material_JoinLotCompletedEventHandler(object sender, LoadCont_Material_JoinLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_Material_JoinLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_Material_JoinLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_ErrorCompletedEventHandler(object sender, LoadCont_ErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_ErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_ErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_Error_JoinQCReasonCompletedEventHandler(object sender, LoadCont_Error_JoinQCReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_Error_JoinQCReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_Error_JoinQCReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSplitContentCompletedEventHandler(object sender, LoadSplitContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSplitContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSplitContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMergeContentCompletedEventHandler(object sender, LoadMergeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMergeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMergeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_DataCompletedEventHandler(object sender, LoadCont_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_ComponentAttribCompletedEventHandler(object sender, LoadCont_ComponentAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_ComponentAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_ComponentAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingListBasisCompletedEventHandler(object sender, LoadPackingListBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingListBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingListBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingList_GeneralCompletedEventHandler(object sender, LoadPackingList_GeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingList_GeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingList_GeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingList_ComponentCompletedEventHandler(object sender, LoadPackingList_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingList_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingList_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPack_CompQtyByLotCompletedEventHandler(object sender, LoadPack_CompQtyByLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPack_CompQtyByLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPack_CompQtyByLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPack_BinQtyByLotCompletedEventHandler(object sender, LoadPack_BinQtyByLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPack_BinQtyByLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPack_BinQtyByLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingList_BinCompletedEventHandler(object sender, LoadPackingList_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingList_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingList_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelPackingListBasisCompletedEventHandler(object sender, DelPackingListBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelPackingListBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelPackingListBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdPackingList_ConfirmCompletedEventHandler(object sender, UpdPackingList_ConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPackingList_ConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPackingList_ConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdAddPackingListCompletedEventHandler(object sender, UpdAddPackingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdAddPackingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdAddPackingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdEditPackingListCompletedEventHandler(object sender, UpdEditPackingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdEditPackingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdEditPackingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadShippingBasisCompletedEventHandler(object sender, LoadShippingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadShippingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadShippingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadShippingPackingListJoinBasisCompletedEventHandler(object sender, LoadShippingPackingListJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadShippingPackingListJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadShippingPackingListJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelShippingBasisCompletedEventHandler(object sender, DelShippingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelShippingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelShippingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ShippingCompletedEventHandler(object sender, Exe_ShippingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ShippingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ShippingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReturnBasisCompletedEventHandler(object sender, LoadReturnBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReturnBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReturnBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReturnComponentJoinBasisCompletedEventHandler(object sender, LoadReturnComponentJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReturnComponentJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReturnComponentJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReturnBasisCompletedEventHandler(object sender, DelReturnBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReturnBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReturnBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdReturnCompletedEventHandler(object sender, UpdReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_InvIncomingReleaseCompletedEventHandler(object sender, Exe_InvIncomingReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_InvIncomingReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_InvIncomingReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdShippingCompletedEventHandler(object sender, UpdShippingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdShippingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdShippingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAbnormalStateCompletedEventHandler(object sender, LoadAbnormalStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAbnormalStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAbnormalStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAbnormalStateJoinBasisCompletedEventHandler(object sender, LoadAbnormalStateJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAbnormalStateJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAbnormalStateJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingBasisCompletedEventHandler(object sender, LoadPackingBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPackingBoxDetailCompletedEventHandler(object sender, LoadPackingBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackingBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackingBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdIPQCCompletedEventHandler(object sender, UpdIPQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdIPQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdIPQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableMaskCompletedEventHandler(object sender, LoadAvailableMaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableMaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableMaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRecipeContentCompletedEventHandler(object sender, LoadRecipeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRecipeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRecipeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelReleasedLotCompletedEventHandler(object sender, DelReleasedLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelReleasedLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelReleasedLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableCarrierLotCompletedEventHandler(object sender, LoadAvailableCarrierLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableCarrierLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableCarrierLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_AttribFormulaCompletedEventHandler(object sender, Exe_AttribFormulaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_AttribFormulaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_AttribFormulaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentPropertyCompletedEventHandler(object sender, LoadComponentPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentPropertyByLotNoCompletedEventHandler(object sender, LoadComponentPropertyByLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentPropertyByLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentPropertyByLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLotPropertyValueCompletedEventHandler(object sender, GetLotPropertyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotPropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotPropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOPGroupStateCompletedEventHandler(object sender, LoadOPGroupStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOPGroupStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOPGroupStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetBaseLotNoCompletedEventHandler(object sender, GetBaseLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaseLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaseLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLotNoCompletedEventHandler(object sender, GetLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMaxLotNoCompletedEventHandler(object sender, GetMaxLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetERFNoCompletedEventHandler(object sender, GetERFNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERFNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERFNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetShippingLotNoCompletedEventHandler(object sender, GetShippingLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShippingLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShippingLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetRcvNoCompletedEventHandler(object sender, GetRcvNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRcvNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRcvNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCustomerLotNoCompletedEventHandler(object sender, GetCustomerLotNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerLotNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerLotNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLotOPDescriptionCompletedEventHandler(object sender, GetLotOPDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotOPDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotOPDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRunCardDataCompletedEventHandler(object sender, LoadRunCardDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRunCardDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRunCardDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRunCardLogCompletedEventHandler(object sender, LoadRunCardLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRunCardLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRunCardLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRunCardHeadDataCompletedEventHandler(object sender, LoadRunCardHeadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRunCardHeadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRunCardHeadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPRDAttributionCompletedEventHandler(object sender, LoadPRDAttributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPRDAttributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPRDAttributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRunCardData_DeltaCompletedEventHandler(object sender, LoadRunCardData_DeltaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRunCardData_DeltaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRunCardData_DeltaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_SetCompletedEventHandler(object sender, Exe_Wait_SetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_SetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_SetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotReleaseCompletedEventHandler(object sender, Exe_Wait_LotReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotMergeCompletedEventHandler(object sender, Exe_Wait_LotMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotMerge_BinCompletedEventHandler(object sender, Exe_Wait_LotMerge_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotMerge_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotMerge_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotMerge_ComponentCompletedEventHandler(object sender, Exe_Wait_LotMerge_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotMerge_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotMerge_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotSplitCompletedEventHandler(object sender, Exe_Wait_LotSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotSplit_BinCompletedEventHandler(object sender, Exe_Wait_LotSplit_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotSplit_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotSplit_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Wait_LotSplit_ComponentCompletedEventHandler(object sender, Exe_Wait_LotSplit_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Wait_LotSplit_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Wait_LotSplit_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWaitBasisCompletedEventHandler(object sender, LoadWaitBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWaitBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWaitBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWaitLotDispositionCompletedEventHandler(object sender, LoadWaitLotDispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWaitLotDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWaitLotDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWaitBasisJoinLotStateCompletedEventHandler(object sender, LoadWaitBasisJoinLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWaitBasisJoinLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWaitBasisJoinLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRODetailCompletedEventHandler(object sender, LoadRODetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRODetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRODetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMOBasisCompletedEventHandler(object sender, LoadMOBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMOBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMOBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadROJoinMODataCompletedEventHandler(object sender, LoadROJoinMODataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadROJoinMODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadROJoinMODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotTapeMapDateCompletedEventHandler(object sender, AddLotTapeMapDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotTapeMapDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotTapeMapDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotTapeMapDateCompletedEventHandler(object sender, EditLotTapeMapDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotTapeMapDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotTapeMapDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotTapeMapDateCompletedEventHandler(object sender, DelLotTapeMapDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotTapeMapDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotTapeMapDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotTapeMapDateCompletedEventHandler(object sender, LoadLotTapeMapDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotTapeMapDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotTapeMapDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPNGroupCompletedEventHandler(object sender, LoadPNGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPNGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPNGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddPNGroupCompletedEventHandler(object sender, AddPNGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPNGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPNGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdPNGroupCompletedEventHandler(object sender, UpdPNGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPNGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPNGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_RunInCompletedEventHandler(object sender, Exe_RunInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_RunInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_RunInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_RunFirstQCCompletedEventHandler(object sender, Exe_RunFirstQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_RunFirstQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_RunFirstQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadPNGroupJoinLotStateCompletedEventHandler(object sender, LoadPNGroupJoinLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPNGroupJoinLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPNGroupJoinLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_EquipmentAcclifeCompletedEventHandler(object sender, LoadTemp_EquipmentAcclifeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_EquipmentAcclifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_EquipmentAcclifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_EquipmentLotCompletedEventHandler(object sender, LoadTemp_EquipmentLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_EquipmentLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_EquipmentLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadBatchLotStateCompletedEventHandler(object sender, LoadBatchLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBatchLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBatchLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadBatchComponentStateCompletedEventHandler(object sender, LoadBatchComponentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBatchComponentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBatchComponentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_BatchCheckIn_FABCompletedEventHandler(object sender, Exe_BatchCheckIn_FABCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_BatchCheckIn_FABCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_BatchCheckIn_FABCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_BatchCheckOut_FABCompletedEventHandler(object sender, Exe_BatchCheckOut_FABCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_BatchCheckOut_FABCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_BatchCheckOut_FABCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetEQPETHValueCompletedEventHandler(object sender, SetEQPETHValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEQPETHValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEQPETHValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditComponentStateCompletedEventHandler(object sender, EditComponentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditComponentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditComponentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelComponentStateCompletedEventHandler(object sender, DelComponentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelComponentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelComponentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotPropertyCompletedEventHandler(object sender, LoadLotPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotPropertyCompletedEventHandler(object sender, AddLotPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotPropertyCompletedEventHandler(object sender, EditLotPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotPropertyCompletedEventHandler(object sender, DelLotPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadUnitTransferQtyCompletedEventHandler(object sender, LoadUnitTransferQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUnitTransferQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUnitTransferQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadReverseHistoryCompletedEventHandler(object sender, LoadReverseHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadReverseHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadReverseHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteReverseCompletedEventHandler(object sender, ExecuteReverseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteReverseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteReverseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTempQCItemJoinBasisCompletedEventHandler(object sender, LoadTempQCItemJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTempQCItemJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTempQCItemJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNBasisCompletedEventHandler(object sender, LoadECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditECNBasisCompletedEventHandler(object sender, EditECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNBasisCompletedEventHandler(object sender, DelECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ApproveECNBasisCompletedEventHandler(object sender, ApproveECNBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveECNBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveECNBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdECNCompletedEventHandler(object sender, UpdECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EndECNCompletedEventHandler(object sender, EndECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdECN_V2CompletedEventHandler(object sender, UpdECN_V2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdECN_V2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdECN_V2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdECNDisableCompletedEventHandler(object sender, UpdECNDisableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdECNDisableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdECNDisableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdECNConfirmCompletedEventHandler(object sender, UpdECNConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdECNConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdECNConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNAttribCompletedEventHandler(object sender, LoadECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNAttribCompletedEventHandler(object sender, AddECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditECNAttribCompletedEventHandler(object sender, EditECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNAttribCompletedEventHandler(object sender, DelECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotECNAttribCompletedEventHandler(object sender, LoadLotECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotECNAttribCompletedEventHandler(object sender, AddLotECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotECNAttribCompletedEventHandler(object sender, EditLotECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotECNAttribCompletedEventHandler(object sender, DelLotECNAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotECNAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotECNAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNLogCompletedEventHandler(object sender, LoadECNLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNLogCompletedEventHandler(object sender, AddECNLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditECNLogCompletedEventHandler(object sender, EditECNLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditECNLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditECNLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNLogCompletedEventHandler(object sender, DelECNLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNAttribLogCompletedEventHandler(object sender, LoadECNAttribLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNAttribLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNAttribLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNAttribLogCompletedEventHandler(object sender, AddECNAttribLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNAttribLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNAttribLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditECNAttribLogCompletedEventHandler(object sender, EditECNAttribLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditECNAttribLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditECNAttribLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNAttribLogCompletedEventHandler(object sender, DelECNAttribLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNAttribLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNAttribLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNLotBasisCompletedEventHandler(object sender, LoadECNLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNLotBasisLotDataCompletedEventHandler(object sender, LoadECNLotBasisLotDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNLotBasisLotDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNLotBasisLotDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNLotBasisCompletedEventHandler(object sender, AddECNLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNLotBasisLogCompletedEventHandler(object sender, AddECNLotBasisLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNLotBasisLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNLotBasisLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNLotBasisCompletedEventHandler(object sender, DelECNLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadECNLotLogCompletedEventHandler(object sender, LoadECNLotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadECNLotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadECNLotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddECNLotLogCompletedEventHandler(object sender, AddECNLotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECNLotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECNLotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelECNLotLogCompletedEventHandler(object sender, DelECNLotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelECNLotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelECNLotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadGoodBinStateCompletedEventHandler(object sender, LoadGoodBinStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadGoodBinStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadGoodBinStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotNotExecuteOPCompletedEventHandler(object sender, LoadLotNotExecuteOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotNotExecuteOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotNotExecuteOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeCompletedEventHandler(object sender, LoadAutoMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkAutoMergeCompletedEventHandler(object sender, ChkAutoMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkAutoMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkAutoMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeByFromLotCompletedEventHandler(object sender, LoadAutoMergeByFromLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeByFromLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeByFromLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeJoinStateByFromLotCompletedEventHandler(object sender, LoadAutoMergeJoinStateByFromLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeJoinStateByFromLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeJoinStateByFromLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeJoinStateByToLotCompletedEventHandler(object sender, LoadAutoMergeJoinStateByToLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeJoinStateByToLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeJoinStateByToLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeJoinGoodBinByFromLotCompletedEventHandler(object sender, LoadAutoMergeJoinGoodBinByFromLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeJoinGoodBinByFromLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeJoinGoodBinByFromLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAutoMergeJoinGoodBinByToLotCompletedEventHandler(object sender, LoadAutoMergeJoinGoodBinByToLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoMergeJoinGoodBinByToLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoMergeJoinGoodBinByToLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotProperty_ReciveCompletedEventHandler(object sender, LoadLotProperty_ReciveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotProperty_ReciveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotProperty_ReciveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotProperty_ReciveCompletedEventHandler(object sender, AddLotProperty_ReciveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotProperty_ReciveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotProperty_ReciveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotProperty_ReciveCompletedEventHandler(object sender, EditLotProperty_ReciveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotProperty_ReciveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotProperty_ReciveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotProperty_ReciveCompletedEventHandler(object sender, DelLotProperty_ReciveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotProperty_ReciveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotProperty_ReciveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFBasisCompletedEventHandler(object sender, LoadERFBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFBasisJoinLotBasisCompletedEventHandler(object sender, LoadERFBasisJoinLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFBasisJoinLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFBasisJoinLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFBasisJoinLotStateCompletedEventHandler(object sender, LoadERFBasisJoinLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFBasisJoinLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFBasisJoinLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFDispositionCompletedEventHandler(object sender, LoadERFDispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFHoldReasonDispCompletedEventHandler(object sender, LoadERFHoldReasonDispCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFHoldReasonDispCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFHoldReasonDispCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFHoldReasonCompletedEventHandler(object sender, LoadERFHoldReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFHoldReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFHoldReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadERFLotDispositionCompletedEventHandler(object sender, LoadERFLotDispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadERFLotDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadERFLotDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFutureWaitCompletedEventHandler(object sender, LoadFutureWaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFutureWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFutureWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FutureWait_SetCompletedEventHandler(object sender, Exe_FutureWait_SetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FutureWait_SetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FutureWait_SetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFutureWaitCompletedEventHandler(object sender, DelFutureWaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFutureWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFutureWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkLotStampCompletedEventHandler(object sender, ChkLotStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkLotStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkLotStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkWIPEQPCcnsumeCompletedEventHandler(object sender, ChkWIPEQPCcnsumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkWIPEQPCcnsumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkWIPEQPCcnsumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFutureHoldCompletedEventHandler(object sender, LoadFutureHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFutureHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFutureHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFutureHoldReasonCompletedEventHandler(object sender, LoadFutureHoldReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFutureHoldReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFutureHoldReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFutureHoldReasonJoinBasisCompletedEventHandler(object sender, LoadFutureHoldReasonJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFutureHoldReasonJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFutureHoldReasonJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FutureHold_SetCompletedEventHandler(object sender, Exe_FutureHold_SetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FutureHold_SetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FutureHold_SetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelFutureHoldCompletedEventHandler(object sender, DelFutureHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFutureHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFutureHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotOPAreaCompletedEventHandler(object sender, LoadLotOPAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotOPAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotOPAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotOPAreaCompletedEventHandler(object sender, AddLotOPAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotOPAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotOPAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotOPAreaCompletedEventHandler(object sender, EditLotOPAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotOPAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotOPAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotOPAreaCompletedEventHandler(object sender, DelLotOPAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotOPAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotOPAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_Material_JoinLogCompletedEventHandler(object sender, LoadCont_Material_JoinLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_Material_JoinLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_Material_JoinLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_Abnormal_JoinLogCompletedEventHandler(object sender, LoadCont_Abnormal_JoinLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_Abnormal_JoinLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_Abnormal_JoinLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_AbnormalRepairCompletedEventHandler(object sender, LoadCont_AbnormalRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_AbnormalRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_AbnormalRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_AttribCompletedEventHandler(object sender, LoadCont_AttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_AttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_AttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_LotRecordCompletedEventHandler(object sender, LoadCont_LotRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_LotRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_LotRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_EmployeeCompletedEventHandler(object sender, LoadCont_EmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_EmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_EmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_EquipmentCompletedEventHandler(object sender, LoadCont_EquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_EquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_EquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_AccessoryCompletedEventHandler(object sender, LoadCont_AccessoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_AccessoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_AccessoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotMergeCompletedEventHandler(object sender, Exe_LotMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotMergeCompletedEventHandler(object sender, Exe_Manual_LotMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotMerge_BinCompletedEventHandler(object sender, Exe_Manual_LotMerge_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotMerge_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotMerge_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotMerge_ComponentCompletedEventHandler(object sender, Exe_Manual_LotMerge_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotMerge_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotMerge_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotMerge_CarrierCompletedEventHandler(object sender, Exe_Manual_LotMerge_CarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotMerge_CarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotMerge_CarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_CreateCompletedEventHandler(object sender, Exe_ERF_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_DispositionCompletedEventHandler(object sender, Exe_ERF_DispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_DispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_DispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_BackToERFDispositionCompletedEventHandler(object sender, Exe_ERF_BackToERFDispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_BackToERFDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_BackToERFDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_AbortCompletedEventHandler(object sender, Exe_ERF_AbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_AbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_AbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotReleaseCompletedEventHandler(object sender, Exe_ERF_LotReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotSplitCompletedEventHandler(object sender, Exe_ERF_LotSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotSplit_BinCompletedEventHandler(object sender, Exe_ERF_LotSplit_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotSplit_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotSplit_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotSplit_ComponentCompletedEventHandler(object sender, Exe_ERF_LotSplit_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotSplit_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotSplit_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotMergeCompletedEventHandler(object sender, Exe_ERF_LotMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotMerge_BinCompletedEventHandler(object sender, Exe_ERF_LotMerge_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotMerge_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotMerge_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ERF_LotMerge_ComponentCompletedEventHandler(object sender, Exe_ERF_LotMerge_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ERF_LotMerge_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ERF_LotMerge_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendEmailToGroupCompletedEventHandler(object sender, SendEmailToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendEmailAndAttachFileToGroupCompletedEventHandler(object sender, SendEmailAndAttachFileToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailAndAttachFileToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailAndAttachFileToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendEmailToERFGroupCompletedEventHandler(object sender, SendEmailToERFGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailToERFGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailToERFGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendEmailToERFGroup_NoneERFCompletedEventHandler(object sender, SendEmailToERFGroup_NoneERFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailToERFGroup_NoneERFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailToERFGroup_NoneERFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Chk_ERF_LotReleaseCompletedEventHandler(object sender, Chk_ERF_LotReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Chk_ERF_LotReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Chk_ERF_LotReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_PackingCompletedEventHandler(object sender, Exe_PackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_PackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_PackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ProductVersionChangeCompletedEventHandler(object sender, Exe_ProductVersionChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ProductVersionChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ProductVersionChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotOPAreaChangeCompletedEventHandler(object sender, Exe_LotOPAreaChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotOPAreaChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotOPAreaChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_MaterialCompletedEventHandler(object sender, Exe_CheckOut_MaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_MaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_MaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_AutoSplitCompletedEventHandler(object sender, Exe_CheckOut_AutoSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_AutoSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_AutoSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FinalQCCompletedEventHandler(object sender, Exe_FinalQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FinalQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FinalQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_RepairCompletedEventHandler(object sender, Exe_RepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_RepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_RepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CreateLotByBomCompletedEventHandler(object sender, Exe_CreateLotByBomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CreateLotByBomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CreateLotByBomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_AbnormalCollectCompletedEventHandler(object sender, Exe_AbnormalCollectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_AbnormalCollectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_AbnormalCollectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_BatchCI_NORCompletedEventHandler(object sender, Exe_BatchCI_NORCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_BatchCI_NORCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_BatchCI_NORCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Repair_AssemblyCompletedEventHandler(object sender, Exe_Repair_AssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Repair_AssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Repair_AssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_BatchCO_UnitCompletedEventHandler(object sender, Exe_BatchCO_UnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_BatchCO_UnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_BatchCO_UnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_BatchCI_UnitCompletedEventHandler(object sender, Exe_BatchCI_UnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_BatchCI_UnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_BatchCI_UnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotProcessCompletedEventHandler(object sender, LoadLotProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotProcessCompletedEventHandler(object sender, AddLotProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotProcessCompletedEventHandler(object sender, EditLotProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotProcessCompletedEventHandler(object sender, DelLotProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetNextOPNodeCompletedEventHandler(object sender, GetNextOPNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextOPNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextOPNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadNextOPNodeCompletedEventHandler(object sender, LoadNextOPNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadNextOPNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadNextOPNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotLogCompletedEventHandler(object sender, LoadLotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotLogJoinModuleLogCompletedEventHandler(object sender, LoadLotLogJoinModuleLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotLogJoinModuleLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotLogJoinModuleLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotLog_ReportCompletedEventHandler(object sender, LoadLotLog_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotLog_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotLog_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotLogReport_ModifyCompletedEventHandler(object sender, LoadLotLogReport_ModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotLogReport_ModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotLogReport_ModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotLog_ReportJoinLotBasisCompletedEventHandler(object sender, LoadLotLog_ReportJoinLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotLog_ReportJoinLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotLog_ReportJoinLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotPSLogCompletedEventHandler(object sender, LoadLotPSLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotPSLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotPSLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_RawCompletedEventHandler(object sender, LoadWIPInventory_RawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_RawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_RawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPInventory_RawCompletedEventHandler(object sender, AddWIPInventory_RawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPInventory_RawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPInventory_RawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPInventory_RawCompletedEventHandler(object sender, EditWIPInventory_RawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPInventory_RawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPInventory_RawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPInventory_RawCompletedEventHandler(object sender, DelWIPInventory_RawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPInventory_RawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPInventory_RawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_SEMICompletedEventHandler(object sender, LoadWIPInventory_SEMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_SEMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_SEMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_ComponentCompletedEventHandler(object sender, LoadWIPInventory_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_SEMIJoinLotBasisCompletedEventHandler(object sender, LoadWIPInventory_SEMIJoinLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_SEMIJoinLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_SEMIJoinLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventHandler(object sender, LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_SEMIJoinLotBasisSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIPInventory_SEMIbyLotCompletedEventHandler(object sender, LoadWIPInventory_SEMIbyLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIPInventory_SEMIbyLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIPInventory_SEMIbyLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddWIPInventory_SemiCompletedEventHandler(object sender, AddWIPInventory_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWIPInventory_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWIPInventory_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPInventory_SemiCompletedEventHandler(object sender, EditWIPInventory_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPInventory_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPInventory_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditWIPInventory_ScrapCompletedEventHandler(object sender, EditWIPInventory_ScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWIPInventory_ScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWIPInventory_ScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPInventory_SemiCompletedEventHandler(object sender, DelWIPInventory_SemiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPInventory_SemiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPInventory_SemiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_ScrapCompletedEventHandler(object sender, LoadWIP_ScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_ScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_ScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIPInventory_ScrapCompletedEventHandler(object sender, DelWIPInventory_ScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIPInventory_ScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIPInventory_ScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_ScrapByErrorCompletedEventHandler(object sender, LoadWIP_ScrapByErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_ScrapByErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_ScrapByErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_ComponentScrapCompletedEventHandler(object sender, LoadWIP_ComponentScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_ComponentScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_ComponentScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelWIP_ComponentScrapCompletedEventHandler(object sender, DelWIP_ComponentScrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelWIP_ComponentScrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelWIP_ComponentScrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_FailBinCompletedEventHandler(object sender, LoadWIP_FailBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_FailBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_FailBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSEMIInventoryCompletedEventHandler(object sender, LoadSEMIInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSEMIInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSEMIInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFGDInventoryCompletedEventHandler(object sender, LoadFGDInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFGDInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFGDInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_WIPSemiTurnCompletedEventHandler(object sender, Exe_WIPSemiTurnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_WIPSemiTurnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_WIPSemiTurnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SEMITurnCompletedEventHandler(object sender, Exe_SEMITurnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SEMITurnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SEMITurnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_WIPScrapTurnCompletedEventHandler(object sender, Exe_WIPScrapTurnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_WIPScrapTurnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_WIPScrapTurnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_FGDTurnCompletedEventHandler(object sender, Exe_FGDTurnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_FGDTurnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_FGDTurnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_IncomingCompletedEventHandler(object sender, LoadWIP_IncomingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_IncomingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_IncomingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFGDInventory_GeneralCompletedEventHandler(object sender, LoadFGDInventory_GeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFGDInventory_GeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFGDInventory_GeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFGDInventory_ComponentCompletedEventHandler(object sender, LoadFGDInventory_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFGDInventory_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFGDInventory_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadFGDInventory_BinCompletedEventHandler(object sender, LoadFGDInventory_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFGDInventory_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFGDInventory_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_OPMaterialStateCompletedEventHandler(object sender, LoadWIP_OPMaterialStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_OPMaterialStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_OPMaterialStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_TransferBUCompletedEventHandler(object sender, Exe_TransferBUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_TransferBUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_TransferBUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadWIP_Incoming_CompCompletedEventHandler(object sender, LoadWIP_Incoming_CompCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWIP_Incoming_CompCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWIP_Incoming_CompCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSCRInventory_GeneralCompletedEventHandler(object sender, LoadSCRInventory_GeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSCRInventory_GeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSCRInventory_GeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSCRInventory_ComponentCompletedEventHandler(object sender, LoadSCRInventory_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSCRInventory_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSCRInventory_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadSCRInventory_BinCompletedEventHandler(object sender, LoadSCRInventory_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSCRInventory_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSCRInventory_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadInventory_ComponentCompletedEventHandler(object sender, LoadInventory_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInventory_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInventory_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TrainsferInventoryCompletedEventHandler(object sender, TrainsferInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrainsferInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrainsferInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadComponentStateCompletedEventHandler(object sender, LoadComponentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadComponentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadComponentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddComponentStateCompletedEventHandler(object sender, AddComponentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddComponentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddComponentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void HelloMESCompletedEventHandler(object sender, HelloMESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloMESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloMESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadOPMaterialStateCompletedEventHandler(object sender, LoadOPMaterialStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOPMaterialStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOPMaterialStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddOPMaterialStateCompletedEventHandler(object sender, AddOPMaterialStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOPMaterialStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOPMaterialStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditOPMaterialStateCompletedEventHandler(object sender, EditOPMaterialStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOPMaterialStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOPMaterialStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelOPMaterialStateCompletedEventHandler(object sender, DelOPMaterialStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelOPMaterialStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelOPMaterialStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotBasisCompletedEventHandler(object sender, LoadLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasisCompletedEventHandler(object sender, AddLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotBasisCompletedEventHandler(object sender, EditLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotBasisCompletedEventHandler(object sender, DelLotBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetLotBasisLotStateCompletedEventHandler(object sender, SetLotBasisLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLotBasisLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLotBasisLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotBasisDistinctColumnValueCompletedEventHandler(object sender, LoadLotBasisDistinctColumnValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotBasisDistinctColumnValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotBasisDistinctColumnValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotBasis_BOMCompletedEventHandler(object sender, AddLotBasis_BOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotBasis_BOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotBasis_BOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotStateCompletedEventHandler(object sender, LoadLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddLotStateCompletedEventHandler(object sender, AddLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotStateCompletedEventHandler(object sender, EditLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelLotStateCompletedEventHandler(object sender, DelLotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotBasisJoinStateCompletedEventHandler(object sender, LoadLotBasisJoinStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotBasisJoinStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotBasisJoinStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotBasisJoinStateInLotNosCompletedEventHandler(object sender, LoadLotBasisJoinStateInLotNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotBasisJoinStateInLotNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotBasisJoinStateInLotNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotStateJoinGoodBinCompletedEventHandler(object sender, LoadLotStateJoinGoodBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotStateJoinGoodBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotStateJoinGoodBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotStateJoinOPNameCompletedEventHandler(object sender, LoadLotStateJoinOPNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotStateJoinOPNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotStateJoinOPNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadMaterialLotCompletedEventHandler(object sender, LoadMaterialLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMaterialLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMaterialLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_LotStateCompletedEventHandler(object sender, LoadTemp_LotStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_LotStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_LotStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_AttribCompletedEventHandler(object sender, LoadTemp_AttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_AttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_AttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_AttribJoinBasisCompletedEventHandler(object sender, LoadTemp_AttribJoinBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_AttribJoinBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_AttribJoinBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_EquipmentCompletedEventHandler(object sender, LoadTemp_EquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_EquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_EquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_ComponentAttribCompletedEventHandler(object sender, LoadTemp_ComponentAttribCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_ComponentAttribCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_ComponentAttribCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_QCItemCompletedEventHandler(object sender, LoadTemp_QCItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_QCItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_QCItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTemp_MaterialCompletedEventHandler(object sender, LoadTemp_MaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTemp_MaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTemp_MaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableLotOnEQPCompletedEventHandler(object sender, LoadAvailableLotOnEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableLotOnEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableLotOnEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableCarrierLotOnEQPCompletedEventHandler(object sender, LoadAvailableCarrierLotOnEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableCarrierLotOnEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableCarrierLotOnEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRecipeCompletedEventHandler(object sender, LoadRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadRecipeByLogGroupSerialCompletedEventHandler(object sender, LoadRecipeByLogGroupSerialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRecipeByLogGroupSerialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRecipeByLogGroupSerialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotNoExtraInfoOnEQPCompletedEventHandler(object sender, LoadLotNoExtraInfoOnEQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotNoExtraInfoOnEQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotNoExtraInfoOnEQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAreaEquipmentCompletedEventHandler(object sender, LoadAreaEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAreaEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAreaEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableEquipmentCompletedEventHandler(object sender, LoadAvailableEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadAvailableEquipment_AllCompletedEventHandler(object sender, LoadAvailableEquipment_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableEquipment_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableEquipment_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadLotAttributionCompletedEventHandler(object sender, LoadLotAttributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLotAttributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLotAttributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMaskGroupCompletedEventHandler(object sender, GetMaskGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaskGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaskGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMultiMaskGroupCompletedEventHandler(object sender, GetMultiMaskGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiMaskGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiMaskGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void StartLotCompletedEventHandler(object sender, StartLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TransferLotCompletedEventHandler(object sender, TransferLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TransferLot_MultiCompletedEventHandler(object sender, TransferLot_MultiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferLot_MultiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferLot_MultiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteLotCompletedEventHandler(object sender, ExecuteLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteLot_DTCompletedEventHandler(object sender, ExecuteLot_DTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteLot_DTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteLot_DTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkUserOPCompletedEventHandler(object sender, ChkUserOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkUserOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkUserOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteBRCompletedEventHandler(object sender, ExecuteBRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteBRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteBRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TriggerOPCompletedEventHandler(object sender, TriggerOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TriggerOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TriggerOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReverseTriggerOPCompletedEventHandler(object sender, ReverseTriggerOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseTriggerOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseTriggerOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetLotStateToOtherGroupOPCompletedEventHandler(object sender, SetLotStateToOtherGroupOPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLotStateToOtherGroupOPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLotStateToOtherGroupOPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadTempDataCompletedEventHandler(object sender, LoadTempDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTempDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTempDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckInCompletedEventHandler(object sender, Exe_CheckInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_EQCCompletedEventHandler(object sender, Exe_CheckIn_EQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_EQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_EQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_RepairCompletedEventHandler(object sender, Exe_CheckOut_RepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_RepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_RepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOutCompletedEventHandler(object sender, Exe_CheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_CSQCCompletedEventHandler(object sender, Exe_CheckOut_CSQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_CSQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_CSQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_ComponentCheckOutCompletedEventHandler(object sender, Exe_ComponentCheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_ComponentCheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_ComponentCheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_SPCControlCompletedEventHandler(object sender, Exe_SPCControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_SPCControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_SPCControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_CarrierCompletedEventHandler(object sender, Exe_CheckIn_CarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_CarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_CarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_CarrierCompletedEventHandler(object sender, Exe_CheckOut_CarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_CarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_CarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_OutSourceCompletedEventHandler(object sender, Exe_CheckIn_OutSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_OutSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_OutSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_OutSourceCompletedEventHandler(object sender, Exe_CheckOut_OutSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_OutSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_OutSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckIn_Cassette_PKGCompletedEventHandler(object sender, Exe_CheckIn_Cassette_PKGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckIn_Cassette_PKGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckIn_Cassette_PKGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_Cassette_PKGCompletedEventHandler(object sender, Exe_CheckOut_Cassette_PKGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_Cassette_PKGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_Cassette_PKGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkMaterialStorageCompletedEventHandler(object sender, ChkMaterialStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkMaterialStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkMaterialStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkControlRuleCompletedEventHandler(object sender, ChkControlRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkControlRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkControlRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ChkControlRule_ComponentCompletedEventHandler(object sender, ChkControlRule_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkControlRule_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkControlRule_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditLotLogCompletedEventHandler(object sender, EditLotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotSplitCompletedEventHandler(object sender, Exe_Manual_LotSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotSplit_ComponentCompletedEventHandler(object sender, Exe_Manual_LotSplit_ComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotSplit_ComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotSplit_ComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotSplit_CarrierCompletedEventHandler(object sender, Exe_Manual_LotSplit_CarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotSplit_CarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotSplit_CarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSerialNoCompletedEventHandler(object sender, GetSerialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_FTCompletedEventHandler(object sender, Exe_CheckOut_FTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_FTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_FTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DelContentRTBinCompletedEventHandler(object sender, DelContentRTBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelContentRTBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelContentRTBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_RTBinDataCompletedEventHandler(object sender, LoadCont_RTBinDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_RTBinDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_RTBinDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoadCont_BinCompletedEventHandler(object sender, LoadCont_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCont_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCont_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Save_RT_DataCompletedEventHandler(object sender, Save_RT_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_RT_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_RT_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_EQCCompletedEventHandler(object sender, Exe_CheckOut_EQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_EQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_EQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_CheckOut_EQC_UnChangeBinStateCompletedEventHandler(object sender, Exe_CheckOut_EQC_UnChangeBinStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_CheckOut_EQC_UnChangeBinStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_CheckOut_EQC_UnChangeBinStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_Manual_LotSplit_BinCompletedEventHandler(object sender, Exe_Manual_LotSplit_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_Manual_LotSplit_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_Manual_LotSplit_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotSplit_BinCompletedEventHandler(object sender, Exe_LotSplit_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotSplit_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotSplit_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotSplitCompletedEventHandler(object sender, Exe_LotSplitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotSplitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotSplitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void Exe_LotMerge_BinCompletedEventHandler(object sender, Exe_LotMerge_BinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Exe_LotMerge_BinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Exe_LotMerge_BinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591